{"version":3,"sources":["views/Pages/Login/Login.js"],"names":["renderInput","_ref","label","input","_ref$meta","meta","touched","invalid","error","custom","Object","_home_development_Documents_JunkProc_kbli_react_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_23__","assign","style","width","placeholder","helperText","Login","this","props","checkUser","isFetching","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_20__","to","className","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","md","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","onSubmit","handleSubmit","reactstrap__WEBPACK_IMPORTED_MODULE_14__","redux_form__WEBPACK_IMPORTED_MODULE_17__","name","component","type","xs","reactstrap__WEBPACK_IMPORTED_MODULE_15__","color","react_router_dom__WEBPACK_IMPORTED_MODULE_16__","Component","reduxForm","form","connect","state","user","token","dispatch","ownProps","values","actionTryLogin","setTimeout","reset","localStorage","getItem","setToken","JSON","parse"],"mappings":"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","file":"static/js/50.9e78f95e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form,  Row , FormGroup } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { reduxForm, Field, reset } from 'redux-form';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actionTryLogin, setToken } from '../../../utils/Action';\nimport TextField from '@material-ui/core/TextField';\nconst renderInput = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    style={{width: 100+'%'}}\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n)\n\nclass Login extends Component {\n  componentWillMount() {\n    this.props.checkUser();\n  }\n  render() {\n    const isFetching = this.props.isFetching;\n    const isAuthenticated = this.props.isAuthenticated;\n\n    if (isAuthenticated) {\n      return (<Redirect to=\"/dashboard\" />);\n    }\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"6\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form onSubmit={this.props.handleSubmit}>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                        <FormGroup>\n                          <Field name=\"email\" component={renderInput} type=\"text\" placeholder=\"Email\" />\n                        </FormGroup>\n                        <FormGroup>\n                          <Field name=\"password\" component={renderInput} type=\"password\" placeholder=\"Password\" />\n                        </FormGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                          { isFetching ? (<p><i className=\"fa fa-spinner fa-spin\"></i>..Loading</p>) : (<Button type=\"submit\" color=\"light\" className=\"px-4\">Login</Button>) }\n                          \n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                         <Link to=\"/register\"> \n                          <Button color=\"link\" className=\"px-0\">Register</Button>\n                          </Link>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col className=\"text-right\">\n                          <Button color=\"link\" className=\"px-0\">Forgot Your Password ?</Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n              {\n               // <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n               //    <CardBody className=\"text-center\">\n               //      <div>\n               //        <h2>Sign up</h2>\n\n                  // <Link to=\"/register\">\n                  //       <Button color=\"light\" className=\"mt-3\" active tabIndex={-1}>Register Now!</Button>\n                  //     </Link>\n               //      </div>\n               //    </CardBody>\n               //  </Card>\n               } \n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nLogin = reduxForm({\n  form: 'Login'\n})(Login);\n\nLogin = connect(\n  state => ({\n    isFetching: state.isFetching,\n    isAuthenticated: state.isAuthenticated,\n    user: state.user,\n    token : state.token,\n  }),\n  (dispatch, ownProps) => ({\n    onSubmit: values => {\n      dispatch(actionTryLogin(values));\n      setTimeout(function() {dispatch(reset('Login'));},\n        3000\n    );\n    },\n    checkUser: () => {\n      const token = localStorage.getItem('token');\n      if (token !== null){\n        dispatch(setToken(JSON.parse(token)));\n      };\n    }\n  })\n)(Login);\n\nexport default Login;\n"],"sourceRoot":""}