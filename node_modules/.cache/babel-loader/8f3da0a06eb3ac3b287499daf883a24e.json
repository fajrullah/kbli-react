{"ast":null,"code":"var crypto = require('crypto');\n\nvar algorithm = 'aes-256-ctr';\n\nfunction Cryptr(secret) {\n  if (!secret || typeof secret !== 'string') {\n    throw new Error('Cryptr: secret must be a non-0-length string');\n  }\n\n  var key = crypto.createHash('sha256').update(String(secret)).digest();\n\n  this.encrypt = function encrypt(value) {\n    if (value == null) {\n      throw new Error('value must not be null or undefined');\n    }\n\n    var iv = crypto.randomBytes(16);\n    var cipher = crypto.createCipheriv(algorithm, key, iv);\n    var encrypted = cipher.update(String(value), 'utf8', 'hex') + cipher.final('hex');\n    return iv.toString('hex') + encrypted;\n  };\n\n  this.decrypt = function decrypt(value) {\n    if (value == null) {\n      throw new Error('value must not be null or undefined');\n    }\n\n    var stringValue = String(value);\n    var iv = Buffer.from(stringValue.slice(0, 32), 'hex');\n    var encrypted = stringValue.slice(32);\n    var legacyValue = false;\n    var decipher;\n\n    try {\n      decipher = crypto.createDecipheriv(algorithm, key, iv);\n    } catch (exception) {\n      if (exception.message === 'Invalid IV length') {\n        legacyValue = true;\n      } else {\n        throw exception;\n      }\n    }\n\n    if (!legacyValue) {\n      return decipher.update(encrypted, 'hex', 'utf8') + decipher.final('utf8');\n    }\n\n    var legacyIv = stringValue.slice(0, 16);\n    var legacyEncrypted = stringValue.slice(16);\n    decipher = crypto.createDecipheriv(algorithm, key, legacyIv);\n    return decipher.update(legacyEncrypted, 'hex', 'utf8') + decipher.final('utf8');\n  };\n}\n\nmodule.exports = Cryptr;","map":null,"metadata":{},"sourceType":"script"}