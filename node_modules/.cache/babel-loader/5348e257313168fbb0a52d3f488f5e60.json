{"ast":null,"code":"import _defineProperty from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/development/Documents/JunkProc/kbli-react/src/views/Kbli/Kbli.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Badge, Card, CardBody, CardHeader, Col, Row, Button, Alert, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, InputGroupText, ButtonToolbar, ButtonGroup } from 'reactstrap';\nimport Select from 'react-select';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport * as moment from 'moment/moment';\nimport { connect } from 'react-redux';\nimport { fetchingDataAPI, putDataAPI, deleteData, postingDataAPI } from '../../utils/AxiosMethod';\nimport { toDateTimeLocal, toDateTimeLocalDB } from '../../utils/Helper';\nimport { actionCheckExpired } from '../../utils/Action';\nimport { Redirect } from 'react-router-dom';\n\nvar Kbli =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Kbli, _Component);\n\n  function Kbli(props) {\n    var _this;\n\n    _classCallCheck(this, Kbli);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Kbli).call(this, props));\n\n    _this.emailType = function (cell) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        color: \"warning\",\n        onClick: function onClick() {\n          return _this.togglePassword(cell);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), cell);\n    };\n\n    _this.statusType = function (cell) {\n      if (cell == 0) {\n        return React.createElement(Badge, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Off\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"On\");\n      }\n    };\n\n    _this.levelType = function (cell) {\n      if (cell == 0) {\n        return React.createElement(Badge, {\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"User\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Admin\");\n      }\n    };\n\n    _this.createdType = function (cell) {\n      return toDateTimeLocal(cell);\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var form = _this.state.form;\n      var re_password = form.re_password,\n          password = form.password,\n          email = form.email;\n\n      if (re_password === password && password !== undefined && password.length >= 6) {\n        putDataAPI('password', {\n          password: password,\n          email: email\n        }).then(function (result) {\n          if (result.response === 200) {\n            _this.setState({\n              postData: {\n                isFetching: true,\n                status: 'success',\n                notification: \"Success Generate New Password\"\n              }\n            });\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      } else {\n        _this.setState({\n          postData: {\n            isFetching: true,\n            status: 'danger',\n            notification: \"Password not Match / at Least 6 Character\"\n          }\n        });\n      }\n    };\n\n    _this.handleChangeSelectOpt = function (selectedOption) {\n      var _this$state = _this.state,\n          tableComponent = _this$state.tableComponent,\n          objectWithMaxProps = _this$state.objectWithMaxProps;\n      var toDefaultvalue = tableComponent.slice(0, 10);\n\n      if (selectedOption !== null) {\n        selectedOption.map(function (key) {\n          toDefaultvalue.push(key.value);\n        });\n      }\n\n      _this.setState({\n        selectedOption: selectedOption,\n        tableComponent: toDefaultvalue\n      });\n    };\n\n    _this.onDeleteCell =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(row) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                row.map(function (k, i) {\n                  deleteData('user', {\n                    data: {\n                      id: k\n                    }\n                  }).then(function (result) {\n                    return result;\n                  }).catch(function (err) {\n                    return console.log(err);\n                  });\n                });\n                setTimeout(function () {\n                  _this.setState({\n                    postData: {\n                      isFetching: true,\n                      status: 'success',\n                      notification: 'Success Delete Data'\n                    }\n                  });\n                }, 2000);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onChangeDatePicker = function (event, picker) {\n      var dataTime = {\n        start: toDateTimeLocalDB(picker.startDate._d),\n        end: toDateTimeLocalDB(picker.endDate._d)\n      };\n\n      if (event.handleObj.type === 'apply') {\n        postingDataAPI('/user/createtime', dataTime).then(function (res) {\n          return res.data;\n        }).then(function (data) {\n          _this.setState({\n            data: data,\n            postData: {\n              isFetching: true,\n              status: 'info',\n              notification: \"Success Filtered Data From \".concat(dataTime.start, \" to \").concat(dataTime.end)\n            },\n            labelCal: \"\".concat(dataTime.start, \" s/d \").concat(dataTime.end)\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.onAfterSaveCell = function (row, cellName, cellValue) {\n      if (cellName !== 'email') {\n        putDataAPI('user', row).then(_this.setState({\n          postData: {\n            isFetching: true,\n            status: 'success',\n            notification: 'Success Update Data'\n          }\n        })).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.invalidJobStatus = function (cell, row) {\n      return 'invalid-jobstatus-class';\n    };\n\n    _this.jobStatusValidator = function (value) {\n      var arr = [0, 1];\n\n      if (!arr.includes(parseInt(value))) {\n        return alert('0 For OFF , 1 For On');\n      }\n\n      return true;\n    };\n\n    _this.onDismiss = function () {\n      _this.setState({\n        postData: {\n          visible: false\n        }\n      });\n    };\n\n    _this.state = {\n      data: [],\n      tableComponent: [],\n      startDateDR: moment().subtract(30, 'days'),\n      endDate: moment(),\n      labelCal: 'Filter By Date',\n      modal: false,\n      token: '',\n      level: '',\n      objectWithMaxProps: [],\n      selectedOption: null,\n      selectedOptionValue: [],\n      form: {\n        password: '',\n        re_password: '',\n        email: ''\n      },\n      postData: {\n        notification: '',\n        isFetching: true,\n        status: '',\n        visible: true\n      },\n      cellEditProp: {\n        mode: 'click',\n        blurToSave: true,\n        afterSaveCell: _this.onAfterSaveCell // a hook for after saving cell\n\n      }\n    };\n    _this.onAfterSaveCell = _this.onAfterSaveCell.bind(_assertThisInitialized(_this));\n    _this.jobStatusValidator = _this.jobStatusValidator.bind(_assertThisInitialized(_this));\n    _this.statusType = _this.statusType.bind(_assertThisInitialized(_this));\n    _this.levelType = _this.levelType.bind(_assertThisInitialized(_this));\n    _this.emailType = _this.emailType.bind(_assertThisInitialized(_this));\n    _this.onDismiss = _this.onDismiss.bind(_assertThisInitialized(_this));\n    _this.togglePassword = _this.togglePassword.bind(_assertThisInitialized(_this));\n    _this.onChangeDatePicker = _this.onChangeDatePicker.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Kbli, [{\n    key: \"togglePassword\",\n    value: function togglePassword(v) {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal,\n          form: {\n            email: v\n          }\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var token = this.props.token;\n      this.props.checkToken(token.token);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          isAuthenticated = _this$props.isAuthenticated,\n          level = _this$props.level;\n\n      if (isAuthenticated) {\n        fetchingDataAPI('kbli').then(function (result) {\n          var json = [],\n              ObjectLeng = 0,\n              indexObject = [],\n              indexWithMaxValue = 0,\n              sop = {},\n              leng = 0,\n              objectWithMaxProps = [];\n          var emptyBracket = result.map(function (key) {\n            var toStringLevel = \"\".concat(key.level_1).concat(key.level_2).concat(key.level_3).concat(key.level_4).concat(key.level_5);\n            return Object.assign(key, {\n              labels: toStringLevel\n            });\n          });\n          result.map(function (key, index) {\n            json = JSON.parse(key.price);\n            json.map(function (k) {\n              var _Object$assign;\n\n              return Object.assign(sop, (_Object$assign = {}, _defineProperty(_Object$assign, 'max_price_' + k.year, k.max_price), _defineProperty(_Object$assign, 'min_price_' + k.year, k.min_price), _Object$assign));\n            });\n\n            if (ObjectLeng >= Object.keys(sop).length) {\n              leng = ObjectLeng;\n            } else {\n              indexWithMaxValue = index;\n              objectWithMaxProps = Object.keys(sop);\n              leng = Object.keys(sop).length;\n            }\n\n            ObjectLeng = leng;\n            return Object.assign(emptyBracket[index], sop);\n          });\n          indexObject = Object.keys(emptyBracket[indexWithMaxValue]).splice(0, 8);\n          return {\n            emptyBracket: emptyBracket,\n            indexObject: indexObject,\n            objectWithMaxProps: objectWithMaxProps\n          };\n        }).then(function (res) {\n          var selectedOptionValue = res.objectWithMaxProps.map(function (k, i) {\n            return {\n              value: k,\n              label: k\n            };\n          });\n          console.log(indexObject);\n\n          _this2.setState({\n            data: res.emptyBracket,\n            tableComponent: res.indexObject,\n            level: level,\n            selectedOptionValue: selectedOptionValue,\n            objectWithMaxProps: res.objectWithMaxProps\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          cellEditProp = _this$state2.cellEditProp,\n          data = _this$state2.data,\n          postData = _this$state2.postData,\n          form = _this$state2.form,\n          tableComponent = _this$state2.tableComponent,\n          objectWithMaxProps = _this$state2.objectWithMaxProps,\n          selectedOption = _this$state2.selectedOption,\n          selectedOptionValue = _this$state2.selectedOptionValue;\n      var email = form.email,\n          password = form.password,\n          re_password = form.re_password;\n      var selectRowProp = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        showOnlySelected: true,\n        onlyUnselectVisible: true,\n        columnWidth: '60px',\n        bgColor: 'lightblue'\n      };\n      var options = {\n        paginationShowsTotal: this.renderShowsTotal,\n        exportCSVBtn: this.createCustomExportCSV,\n        showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n        onDeleteRow: this.onDeleteCell,\n        onRowClick: function onRowClick(row, columnIndex, rowIndex, e) {// if(columnIndex === 3){\n          //     alert(`Kamu menekan sekali baris dengan Device ID: ${row.email} ,${columnIndex},${rowIndex}`);\n          // }\n        }\n      };\n      var user = '';\n\n      if (!this.props.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.isAuthenticated && this.props.level !== 1) {\n        return React.createElement(Redirect, {\n          to: \"/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, postData.isFetching && React.createElement(Alert, {\n        color: postData.status,\n        isOpen: this.state.visible,\n        toggle: this.onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, postData.notification), React.createElement(Row, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-info pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), \"Kbli List\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        wdith: \"40%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: selectedOption,\n        onChange: this.handleChangeSelectOpt,\n        options: selectedOptionValue,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(DateRangePicker, {\n        startDate: this.state.startDateDR,\n        endDate: this.state.endDate,\n        onEvent: this.onChangeDatePicker,\n        showWeekNumbers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \" \", this.state.labelCal)))), React.createElement(BootstrapTable, {\n        data: data,\n        remote: this.remote,\n        selectRow: selectRowProp,\n        cellEdit: cellEditProp,\n        pagination: true,\n        scrollTop: 'Bottom',\n        hover: true,\n        condensed: true,\n        striped: true,\n        exportCSV: true,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        options: options,\n        deleteRow: true,\n        width: \"100%\",\n        keyField: \"id_row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, tableComponent.map(function (column, index) {\n        return React.createElement(TableHeaderColumn, {\n          key: index,\n          ref: column,\n          dataField: column,\n          filter: {\n            type: 'TextFilter'\n          },\n          headerAlign: \"center\",\n          dataAlign: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }, column);\n      })))))));\n    }\n  }]);\n\n  return Kbli;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.isAuthenticated,\n    token: state.token,\n    level: state.user.level\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkToken: function checkToken(values) {\n      return dispatch(actionCheckExpired(values));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Kbli);","map":{"version":3,"sources":["/home/development/Documents/JunkProc/kbli-react/src/views/Kbli/Kbli.js"],"names":["React","Component","Form","Input","Badge","Card","CardBody","CardHeader","Col","Row","Button","Alert","Modal","ModalHeader","ModalBody","ModalFooter","InputGroup","InputGroupAddon","InputGroupText","ButtonToolbar","ButtonGroup","Select","BootstrapTable","TableHeaderColumn","DateRangePicker","moment","connect","fetchingDataAPI","putDataAPI","deleteData","postingDataAPI","toDateTimeLocal","toDateTimeLocalDB","actionCheckExpired","Redirect","Kbli","props","emailType","cell","togglePassword","statusType","levelType","createdType","handleSubmit","e","preventDefault","form","state","re_password","password","email","undefined","length","then","result","response","setState","postData","isFetching","status","notification","catch","err","console","log","handleChangeSelectOpt","selectedOption","tableComponent","objectWithMaxProps","toDefaultvalue","slice","map","key","push","value","onDeleteCell","row","k","i","data","id","setTimeout","onChangeDatePicker","event","picker","dataTime","start","startDate","_d","end","endDate","handleObj","type","res","labelCal","onAfterSaveCell","cellName","cellValue","invalidJobStatus","jobStatusValidator","arr","includes","parseInt","alert","onDismiss","visible","startDateDR","subtract","modal","token","level","selectedOptionValue","cellEditProp","mode","blurToSave","afterSaveCell","bind","v","prevState","checkToken","isAuthenticated","json","ObjectLeng","indexObject","indexWithMaxValue","sop","leng","emptyBracket","toStringLevel","level_1","level_2","level_3","level_4","level_5","Object","assign","labels","index","JSON","parse","price","year","max_price","min_price","keys","splice","label","selectRowProp","clickToSelect","showOnlySelected","onlyUnselectVisible","columnWidth","bgColor","options","paginationShowsTotal","renderShowsTotal","exportCSVBtn","createCustomExportCSV","showSelectedOnlyBtn","ShowSelectedOnlyButton","onDeleteRow","onRowClick","columnIndex","rowIndex","user","onClick","remote","isExpandableRow","expandComponent","column","mapStateToProps","mapDispatchToProps","dispatch","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Badge, Card, CardBody, CardHeader, Col, Row,  Button , Alert, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup , InputGroupAddon , InputGroupText, ButtonToolbar, ButtonGroup } from 'reactstrap';\nimport Select from 'react-select';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport * as moment from 'moment/moment';\nimport { connect } from 'react-redux';\nimport { fetchingDataAPI , putDataAPI , deleteData , postingDataAPI } from '../../utils/AxiosMethod';\nimport { toDateTimeLocal, toDateTimeLocalDB } from '../../utils/Helper';\nimport { actionCheckExpired } from '../../utils/Action';\nimport { Redirect } from 'react-router-dom';\n\nclass Kbli extends Component {\n constructor(props) {\n   super(props);\n   this.state = {\n        data : [],\n        tableComponent : [],\n        startDateDR: moment().subtract(30, 'days'),\n        endDate: moment(),\n        labelCal: 'Filter By Date',\n        modal: false,\n        token : '',\n        level : '',\n        objectWithMaxProps : [],\n        selectedOption: null,\n        selectedOptionValue: [],\n        form : {\n            password : '',\n            re_password : '',\n            email : '',\n          },\n        postData : {\n          notification : '',\n          isFetching : true,\n          status : '',\n          visible: true,\n        },\n        cellEditProp : {\n          mode: 'click',\n          blurToSave: true,\n          afterSaveCell: this.onAfterSaveCell // a hook for after saving cell\n        },\n   };\n   this.onAfterSaveCell = this.onAfterSaveCell.bind(this)\n   this.jobStatusValidator = this.jobStatusValidator.bind(this)\n   this.statusType = this.statusType.bind(this)\n   this.levelType = this.levelType.bind(this)\n   this.emailType = this.emailType.bind(this)\n   this.onDismiss = this.onDismiss.bind(this)\n   this.togglePassword = this.togglePassword.bind(this);\n   this.onChangeDatePicker = this.onChangeDatePicker.bind(this);\n\n }\n  emailType = (cell) => {\n    return (<div><Badge color=\"warning\" onClick={ () => this.togglePassword(cell)}><i className=\"icon-lock\"/></Badge>{cell}</div>)\n  }\n  statusType = (cell) => {\n    if(cell == 0){\n      return (<Badge color=\"danger\">Off</Badge>)\n    }else{\n      return (<Badge color=\"success\">On</Badge>)\n    }\n  }\n  levelType = (cell) => {\n    if(cell == 0){\n      return (<Badge color=\"secondary\">User</Badge>)\n    }else{\n      return (<Badge color=\"primary\">Admin</Badge>)\n    }\n  }\n  createdType = (cell) => {\n    return toDateTimeLocal(cell)\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const { form } = this.state\n    const { re_password , password , email } = form\n    if(re_password === password && password !== undefined && password.length >= 6){\n    putDataAPI('password',{password, email}).then(result => {\n      if(result.response === 200){\n        this.setState({\n                 postData : {\n                      isFetching : true,\n                      status : 'success',\n                      notification : `Success Generate New Password`\n                  }\n              })\n      }\n    }).catch( err => console.log(err))          \n        }else{\n              this.setState({\n                 postData : {\n                      isFetching : true,\n                      status : 'danger',\n                      notification : `Password not Match / at Least 6 Character`\n                  }\n              })\n        }\n  }\n  handleChangeSelectOpt = selectedOption => {\n    let { tableComponent, objectWithMaxProps } = this.state\n    let toDefaultvalue = tableComponent.slice(0,10)\n    if(selectedOption !== null){\n      selectedOption.map(key => {\n        toDefaultvalue.push(key.value)\n      })\n    }\n    this.setState({ selectedOption, tableComponent : toDefaultvalue });\n  };\n\n  onDeleteCell = async (row) => {\n   row.map((k,i) => {\n      deleteData('user',{ data: {id : k} })\n      .then(result => result)\n      .catch(err => console.log(err))\n   })\n      setTimeout( () => {\n           this.setState({\n            postData : {\n              isFetching : true,\n              status : 'success',\n              notification : 'Success Delete Data'\n          }}\n      )\n      },2000)\n  }\n  onChangeDatePicker = (event, picker) =>{\n      const dataTime = {\n          start : toDateTimeLocalDB(picker.startDate._d),\n          end : toDateTimeLocalDB(picker.endDate._d)\n      }\n      if(event.handleObj.type === 'apply'){\n        postingDataAPI('/user/createtime',dataTime).then(res => {\n          return res.data\n        })\n        .then(data => {\n          this.setState({data,\n                postData : {\n                  isFetching : true,\n                  status : 'info',\n                  notification : `Success Filtered Data From ${dataTime.start} to ${dataTime.end}`\n              },\n              labelCal: (`${dataTime.start} s/d ${dataTime.end}`)\n          })\n        })\n        .catch(err => console.log(err))\n    }\n  }\n onAfterSaveCell = (row, cellName, cellValue) => {\n\n    if(cellName !== 'email'){\n      putDataAPI('user',row).then(\n      this.setState({\n                postData : {\n                  isFetching : true,\n                  status : 'success',\n                  notification : 'Success Update Data'\n              }}\n      )).catch(err => console.log(err))\n    }\n  }\n\n invalidJobStatus = (cell, row) => {\n    return 'invalid-jobstatus-class';\n  }\n  jobStatusValidator = (value) => {\n     const arr = [0,1]\n     if(!arr.includes(parseInt(value))){\n      return alert('0 For OFF , 1 For On');\n     }\n    return true;\n  }\n  togglePassword(v) {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      form : {\n        email : v,\n      }\n    }));\n  }\n  onDismiss = () => {\n    this.setState({ postData : {visible: false} });\n  }\n componentWillUnmount(){\n\n }\n\n componentWillMount(){\n  const { token } = this.props\n  this.props.checkToken(token.token)\n}\n componentDidMount(){\n  const { isAuthenticated , level } = this.props\n  if(isAuthenticated){\n    fetchingDataAPI('kbli').then(result => {\n      let json = [], ObjectLeng = 0, \n          indexObject = [], indexWithMaxValue = 0,\n          sop = {} , leng = 0 , objectWithMaxProps = []\n      let emptyBracket = result.map(key => {\n        const toStringLevel = `${key.level_1}${key.level_2}${key.level_3}${key.level_4}${key.level_5}`\n        return Object.assign(key , {labels : toStringLevel})\n      })\n      result.map((key,index) => {\n        json = JSON.parse(key.price)\n        json.map(k => {\n            return Object.assign(sop, {['max_price_'+k.year] : k.max_price , ['min_price_' + k.year] : k.min_price  })  \n          })\n          if(ObjectLeng >= Object.keys(sop).length){\n            leng = ObjectLeng \n          }else{\n            indexWithMaxValue = index\n            objectWithMaxProps = Object.keys(sop)\n            leng = Object.keys(sop).length\n          }\n        ObjectLeng = leng\n        return Object.assign(emptyBracket[index],sop)\n      })\n        indexObject = Object.keys(emptyBracket[indexWithMaxValue]).splice(0,8)\n      return { emptyBracket , indexObject, objectWithMaxProps}\n    })\n    .then(res => {\n      const selectedOptionValue = res.objectWithMaxProps.map((k,i) => {\n        return { value : k , label : k}\n      })\n      console.log(indexObject)\n      this.setState({\n        data : res.emptyBracket,\n        tableComponent : res.indexObject,\n        level : level,\n        selectedOptionValue : selectedOptionValue,\n        objectWithMaxProps : res.objectWithMaxProps\n      })\n    })\n    .catch(err => console.log(err));\n  }\n }\n\n  render() {\n    const { cellEditProp , data , \n            postData , form , \n            tableComponent , objectWithMaxProps,\n            selectedOption , selectedOptionValue\n          } = this.state\n    const { email , password , re_password } = form\n    const selectRowProp = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      showOnlySelected: true,\n      onlyUnselectVisible: true,\n      columnWidth :'60px',\n      bgColor: 'lightblue',\n    };\n\n    const options = {\n      paginationShowsTotal: this.renderShowsTotal,\n      exportCSVBtn:this.createCustomExportCSV,\n      showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n      onDeleteRow  : this.onDeleteCell,\n      onRowClick: function(row, columnIndex, rowIndex, e){\n          // if(columnIndex === 3){\n          //     alert(`Kamu menekan sekali baris dengan Device ID: ${row.email} ,${columnIndex},${rowIndex}`);\n          // }\n        }\n    };\n\n    const user = ''\n     if (!this.props.isAuthenticated) {\n      return (<Redirect to=\"/login\" />);\n    }\n     if (this.props.isAuthenticated && this.props.level !== 1) {\n      return (<Redirect to=\"/dashboard\" />);\n    }\n\n    return (\n      \n      <div className=\"animated fadeIn\">\n      {\n        postData.isFetching && <Alert color={postData.status} isOpen={this.state.visible} toggle={this.onDismiss}>\n             {postData.notification}\n            </Alert>\n      } \n        <Row xs=\"12\" lg=\"12\">\n          <Col xs=\"12\" lg=\"12\">\n            <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>Kbli List</strong>\n              </CardHeader>\n              <CardBody>\n                <div className='form-group' wdith=\"40%\">\n                  <Select\n                    value={selectedOption}\n                    onChange={this.handleChangeSelectOpt}\n                    options={selectedOptionValue}\n                    isMulti={true}\n                  />\n                </div>\n                <div className='form-group'>\n                  <DateRangePicker \n                    startDate={this.state.startDateDR} \n                    endDate={this.state.endDate}\n                    onEvent={this.onChangeDatePicker}\n                    showWeekNumbers\n                    >\n                    <Button onClick={this.onClick}>\n                      <i className=\"fa fa-calendar\"/>\n                      <span> {this.state.labelCal}</span>                          \n                    </Button>            \n                  </DateRangePicker>\n                </div>\n                 {/*<button onClick={this.getSelectedRowKeys.bind(this)}>Get selected row keys</button>*/}\n                 <BootstrapTable data={ data } remote={ this.remote } selectRow={ selectRowProp } cellEdit={ cellEditProp } pagination scrollTop={ 'Bottom' } hover condensed striped exportCSV\n                   expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } options={ options } deleteRow={ true } width=\"100%\" keyField='id_row'>\n                     {\n                        tableComponent.map((column,index) => {\n                          return (<TableHeaderColumn key={index} ref={column} dataField={column} filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='left'>{column}</TableHeaderColumn>);\n                        })\n                    }\n                </BootstrapTable>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({  isAuthenticated : state.isAuthenticated, token : state.token , level : state.user.level });\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkToken : (values) => dispatch(actionCheckExpired(values)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Kbli);\n\n\n"]},"metadata":{},"sourceType":"module"}