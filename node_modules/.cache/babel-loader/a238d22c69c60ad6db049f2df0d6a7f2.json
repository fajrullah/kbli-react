{"ast":null,"code":"import _regeneratorRuntime from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/development/Documents/JunkProc/kbli-react/src/views/Users/Users.js\";\nimport React, { Component } from 'react';\nimport { Badge, Card, CardBody, CardHeader, Col, Row, Table, Button, Alert, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport usersData from './UsersData';\nimport * as moment from 'moment/moment';\nimport { fetchingDataAPI, putDataAPI, deleteData, postingDataAPI } from '../../utils/AxiosMethod';\nimport { toDateTimeLocal, toDateTimeLocalDB } from '../../utils/Helper';\nvar contentData = [];\n\nvar User =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(User, _Component);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this, props));\n\n    _this.onDeleteCell =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(row) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                row.map(function (k, i) {\n                  deleteData('user', {\n                    data: {\n                      id: k\n                    }\n                  }).then(function (result) {\n                    return result;\n                  }).catch(function (err) {\n                    return console.log(err);\n                  });\n                });\n                setTimeout(function () {\n                  _this.setState({\n                    postData: {\n                      isFetching: true,\n                      status: 'success',\n                      notification: 'Success Delete Data'\n                    }\n                  });\n                }, 2000);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onAfterSaveCell = function (row, cellName, cellValue) {\n      var id = row.id,\n          status = row.status;\n      putDataAPI('user', row).then(_this.setState({\n        postData: {\n          isFetching: true,\n          status: 'success',\n          notification: 'Success Update Data'\n        }\n      })).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.invalidJobStatus = function (cell, row) {\n      return 'invalid-jobstatus-class';\n    };\n\n    _this.jobStatusValidator = function (value) {\n      var arr = [0, 1];\n\n      if (!arr.includes(parseInt(value))) {\n        return alert('0 For OFF , 1 For On');\n      }\n\n      return true;\n    };\n\n    _this.onDismiss = function () {\n      _this.setState({\n        postData: {\n          visible: false\n        }\n      });\n    };\n\n    _this.state = {\n      data: [],\n      startDateDR: moment().subtract(30, 'days'),\n      endDate: moment(),\n      labelCal: 'Filter By Date',\n      modal: false,\n      labelModal: '',\n      postData: {\n        notification: '',\n        isFetching: true,\n        status: '',\n        visible: true\n      },\n      cellEditProp: {\n        mode: 'click',\n        blurToSave: true,\n        afterSaveCell: _this.onAfterSaveCell // a hook for after saving cell\n\n      }\n    };\n    _this.onAfterSaveCell = _this.onAfterSaveCell.bind(_assertThisInitialized(_this));\n    _this.jobStatusValidator = _this.jobStatusValidator.bind(_assertThisInitialized(_this));\n    _this.statusType = _this.statusType.bind(_assertThisInitialized(_this));\n    _this.levelType = _this.levelType.bind(_assertThisInitialized(_this));\n    _this.emailType = _this.emailType.bind(_assertThisInitialized(_this));\n    _this.onDismiss = _this.onDismiss.bind(_assertThisInitialized(_this));\n    _this.togglePassword = _this.togglePassword.bind(_assertThisInitialized(_this));\n    _this.onChangeDatePicker = _this.onChangeDatePicker.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"emailType\",\n    value: function emailType(cell) {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        color: \"warning\",\n        onClick: function onClick() {\n          return _this2.togglePassword(cell);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), cell);\n    }\n  }, {\n    key: \"statusType\",\n    value: function statusType(cell) {\n      if (cell == 0) {\n        return React.createElement(Badge, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Off\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"On\");\n      }\n    }\n  }, {\n    key: \"levelType\",\n    value: function levelType(cell) {\n      if (cell == 0) {\n        return React.createElement(Badge, {\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"User\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Admin\");\n      }\n    }\n  }, {\n    key: \"createdType\",\n    value: function createdType(cell) {\n      return toDateTimeLocal(cell);\n    }\n  }, {\n    key: \"onChangeDatePicker\",\n    value: function onChangeDatePicker(event, picker) {\n      var _this3 = this;\n\n      var dataTime = {\n        start: toDateTimeLocalDB(picker.startDate._d),\n        end: toDateTimeLocalDB(picker.endDate._d)\n      };\n\n      if (event.handleObj.type === 'apply') {\n        postingDataAPI('/user/createtime', dataTime).then(function (res) {\n          return res.data;\n        }).then(function (data) {\n          _this3.setState({\n            data: data,\n            postData: {\n              isFetching: true,\n              status: 'info',\n              notification: \"Success Filtered Data From \".concat(dataTime.start, \" to \").concat(dataTime.end)\n            },\n            labelCal: \"\".concat(dataTime.start, \" s/d \").concat(dataTime.end)\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"togglePassword\",\n    value: function togglePassword(v) {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal,\n          labelModal: v\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      fetchingDataAPI('user').then(function (result) {\n        _this4.setState({\n          data: result\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state = this.state,\n          cellEditProp = _this$state.cellEditProp,\n          data = _this$state.data,\n          postData = _this$state.postData;\n      var selectRowProp = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        showOnlySelected: true,\n        onlyUnselectVisible: true,\n        columnWidth: '60px',\n        bgColor: 'lightblue'\n      };\n      var options = {\n        paginationShowsTotal: this.renderShowsTotal,\n        exportCSVBtn: this.createCustomExportCSV,\n        showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n        onDeleteRow: this.onDeleteCell,\n        onRowClick: function onRowClick(row, columnIndex, rowIndex, e) {\n          if (columnIndex === 3) {\n            alert(\"Kamu menekan sekali baris dengan Device ID: \".concat(row.email, \" ,\").concat(columnIndex, \",\").concat(rowIndex));\n          }\n        }\n      };\n      var user = usersData.find(function (user) {\n        return user.id.toString() === _this5.props.match.params.id;\n      });\n      var userDetails = user ? Object.entries(user) : [['id', React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"text-muted icon-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), \" Not found\")]];\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, postData.isFetching && React.createElement(Alert, {\n        color: postData.status,\n        isOpen: this.state.visible,\n        toggle: this.onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, postData.notification), React.createElement(Row, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-info pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), \"User List\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(DateRangePicker, {\n        startDate: this.state.startDateDR,\n        endDate: this.state.endDate,\n        onEvent: this.onChangeDatePicker,\n        showWeekNumbers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \" \", this.state.labelCal)))), React.createElement(BootstrapTable, {\n        data: data,\n        remote: this.remote,\n        selectRow: selectRowProp,\n        cellEdit: cellEditProp,\n        pagination: true,\n        scrollTop: 'Bottom',\n        hover: true,\n        condensed: true,\n        striped: true,\n        exportCSV: true,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        options: options,\n        deleteRow: true,\n        width: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        ref: \"id\",\n        dataField: \"id\",\n        isKey: true,\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        width: \"50px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"ID\"), React.createElement(TableHeaderColumn, {\n        ref: \"first_name\",\n        dataField: \"first_name\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        width: \"100px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(TableHeaderColumn, {\n        ref: \"last_name\",\n        dataField: \"last_name\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        width: \"100px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(TableHeaderColumn, {\n        ref: \"email\",\n        dataFormat: this.emailType,\n        dataField: \"email\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Email\"), React.createElement(TableHeaderColumn, {\n        ref: \"status\",\n        filter: {\n          type: 'TextFilter'\n        },\n        dataField: \"status\",\n        dataFormat: this.statusType,\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        width: \"80px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Status\"), React.createElement(TableHeaderColumn, {\n        ref: \"level\",\n        dataField: \"level\",\n        dataFormat: this.levelType,\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        width: \"80px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Level\"), React.createElement(TableHeaderColumn, {\n        ref: \"created\",\n        dataField: \"created\",\n        filter: {\n          type: 'TextFilter'\n        },\n        dataFormat: this.createdType,\n        headerAlign: \"center\",\n        dataAlign: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Create Time\")))))), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.togglePassword,\n        className: this.props.className,\n        backdrop: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.togglePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Modal \", this.state.labelModal), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.togglePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Do Something\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.togglePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nexport default User;","map":{"version":3,"sources":["/home/development/Documents/JunkProc/kbli-react/src/views/Users/Users.js"],"names":["React","Component","Badge","Card","CardBody","CardHeader","Col","Row","Table","Button","Alert","Modal","ModalHeader","ModalBody","ModalFooter","BootstrapTable","TableHeaderColumn","DateRangePicker","usersData","moment","fetchingDataAPI","putDataAPI","deleteData","postingDataAPI","toDateTimeLocal","toDateTimeLocalDB","contentData","User","props","onDeleteCell","row","map","k","i","data","id","then","result","catch","err","console","log","setTimeout","setState","postData","isFetching","status","notification","onAfterSaveCell","cellName","cellValue","invalidJobStatus","cell","jobStatusValidator","value","arr","includes","parseInt","alert","onDismiss","visible","state","startDateDR","subtract","endDate","labelCal","modal","labelModal","cellEditProp","mode","blurToSave","afterSaveCell","bind","statusType","levelType","emailType","togglePassword","onChangeDatePicker","event","picker","dataTime","start","startDate","_d","end","handleObj","type","res","v","prevState","selectRowProp","clickToSelect","showOnlySelected","onlyUnselectVisible","columnWidth","bgColor","options","paginationShowsTotal","renderShowsTotal","exportCSVBtn","createCustomExportCSV","showSelectedOnlyBtn","ShowSelectedOnlyButton","onDeleteRow","onRowClick","columnIndex","rowIndex","e","email","user","find","toString","match","params","userDetails","Object","entries","onClick","remote","isExpandableRow","expandComponent","validator","createdType","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Badge, Card, CardBody, CardHeader, Col, Row, Table, Button , Alert, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport usersData from './UsersData'\nimport * as moment from 'moment/moment';\nimport { fetchingDataAPI , putDataAPI , deleteData , postingDataAPI } from '../../utils/AxiosMethod';\nimport { toDateTimeLocal, toDateTimeLocalDB } from '../../utils/Helper';\nlet contentData = []\nclass User extends Component {\n constructor(props) {\n   super(props);\n   this.state = {\n        data : [],\n        startDateDR: moment().subtract(30, 'days'),\n        endDate: moment(),\n        labelCal: 'Filter By Date',\n        modal: false,\n        labelModal : '',\n        postData : {\n          notification : '',\n          isFetching : true,\n          status : '',\n          visible: true,\n        },\n        cellEditProp : {\n          mode: 'click',\n          blurToSave: true,\n          afterSaveCell: this.onAfterSaveCell // a hook for after saving cell\n        },\n   };\n   this.onAfterSaveCell = this.onAfterSaveCell.bind(this)\n   this.jobStatusValidator = this.jobStatusValidator.bind(this)\n   this.statusType = this.statusType.bind(this)\n   this.levelType = this.levelType.bind(this)\n   this.emailType = this.emailType.bind(this)\n   this.onDismiss = this.onDismiss.bind(this)\n   this.togglePassword = this.togglePassword.bind(this);\n   this.onChangeDatePicker = this.onChangeDatePicker.bind(this);\n\n }\n  emailType(cell){\n    return (<div><Badge color=\"warning\" onClick={ () => this.togglePassword(cell)}><i className=\"icon-lock\"/></Badge>{cell}</div>)\n  }\n  statusType(cell) {\n    if(cell == 0){\n      return (<Badge color=\"danger\">Off</Badge>)\n    }else{\n      return (<Badge color=\"success\">On</Badge>)\n    }\n  }\n  levelType(cell) {\n    if(cell == 0){\n      return (<Badge color=\"secondary\">User</Badge>)\n    }else{\n      return (<Badge color=\"primary\">Admin</Badge>)\n    }\n  }\n  createdType(cell) {\n    return toDateTimeLocal(cell)\n  }\n  onDeleteCell = async (row) => {\n   row.map((k,i) => {\n      deleteData('user',{ data: {id : k} })\n      .then(result => result)\n      .catch(err => console.log(err))\n   })\n      setTimeout( () => {\n           this.setState({\n            postData : {\n              isFetching : true,\n              status : 'success',\n              notification : 'Success Delete Data'\n          }}\n      )\n      },2000)\n  }\n  onChangeDatePicker(event, picker){\n      const dataTime = {\n          start : toDateTimeLocalDB(picker.startDate._d),\n          end : toDateTimeLocalDB(picker.endDate._d)\n      }\n      if(event.handleObj.type === 'apply'){\n        postingDataAPI('/user/createtime',dataTime).then(res => {\n          return res.data\n        })\n        .then(data => {\n          this.setState({data,\n                postData : {\n                  isFetching : true,\n                  status : 'info',\n                  notification : `Success Filtered Data From ${dataTime.start} to ${dataTime.end}`\n              },\n              labelCal: (`${dataTime.start} s/d ${dataTime.end}`)\n          })\n        })\n        .catch(err => console.log(err))\n    }\n  }\n onAfterSaveCell = (row, cellName, cellValue) => {\n    const { id , status } = row\n    putDataAPI('user',row).then(\n    this.setState({\n              postData : {\n                isFetching : true,\n                status : 'success',\n                notification : 'Success Update Data'\n            }}\n    )).catch(err => console.log(err))\n  }\n  invalidJobStatus = (cell, row) => {\n    return 'invalid-jobstatus-class';\n  }\n  jobStatusValidator = (value) => {\n     const arr = [0,1]\n     if(!arr.includes(parseInt(value))){\n      return alert('0 For OFF , 1 For On');\n     }\n    return true;\n  }\n  togglePassword(v) {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      labelModal : v,\n    }));\n  }\n  onDismiss = () => {\n    this.setState({ postData : {visible: false} });\n  }\n componentDidMount(){\n    fetchingDataAPI('user').then(result => {\n      this.setState({\n        data : result\n      })\n    }).catch(err => console.log(err));\n }\n  render() {\n    const { cellEditProp , data , postData } = this.state\n    const selectRowProp = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      showOnlySelected: true,\n      onlyUnselectVisible: true,\n      columnWidth :'60px',\n      bgColor: 'lightblue',\n    };\n\n    const options = {\n      paginationShowsTotal: this.renderShowsTotal,\n      exportCSVBtn:this.createCustomExportCSV,\n      showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n      onDeleteRow  : this.onDeleteCell,\n      onRowClick: function(row, columnIndex, rowIndex, e){\n          if(columnIndex === 3){\n              alert(`Kamu menekan sekali baris dengan Device ID: ${row.email} ,${columnIndex},${rowIndex}`);\n          }\n        }\n    };\n\n    const user = usersData.find( user => user.id.toString() === this.props.match.params.id)\n\n    const userDetails = user ? Object.entries(user) : [['id', (<span><i className=\"text-muted icon-ban\"></i> Not found</span>)]]\n\n    return (\n      <div className=\"animated fadeIn\">\n      {\n        postData.isFetching && <Alert color={postData.status} isOpen={this.state.visible} toggle={this.onDismiss}>\n             {postData.notification}\n            </Alert>\n      }\n\n        <Row xs=\"12\" lg=\"12\">\n          <Col xs=\"12\" lg=\"12\">\n            <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>User List</strong>\n              </CardHeader>\n              <CardBody>\n                 <div className='form-group'>\n                  <DateRangePicker \n                    startDate={this.state.startDateDR} \n                    endDate={this.state.endDate}\n                    onEvent={this.onChangeDatePicker}\n                    showWeekNumbers\n                    >\n                    <Button onClick={this.onClick}>\n                      <i className=\"fa fa-calendar\"/>\n                      <span> {this.state.labelCal}</span>                          \n                    </Button>            \n                  </DateRangePicker>\n                </div>\n                 {/*<button onClick={this.getSelectedRowKeys.bind(this)}>Get selected row keys</button>*/}\n                 <BootstrapTable data={ data } remote={ this.remote } selectRow={ selectRowProp } cellEdit={ cellEditProp } pagination scrollTop={ 'Bottom' } hover condensed striped exportCSV\n                   expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } options={ options } deleteRow={ true } width=\"100%\">\n                  <TableHeaderColumn ref='id' dataField='id' isKey={ true } headerAlign='center'  dataAlign='center' width=\"50px\">ID</TableHeaderColumn>\n                  <TableHeaderColumn ref='first_name' dataField='first_name' filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='center' width=\"100px\">First Name</TableHeaderColumn>\n                  <TableHeaderColumn ref='last_name' dataField='last_name' filter={ { type: 'TextFilter'} } headerAlign='center' dataAlign='center' width=\"100px\">Last Name</TableHeaderColumn>\n                  <TableHeaderColumn ref='email' dataFormat={ this.emailType } dataField='email' filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='left'>Email</TableHeaderColumn>\n                  <TableHeaderColumn ref='status' filter={ { type: 'TextFilter' } } dataField='status' dataFormat={ this.statusType } headerAlign='center' dataAlign='center' editable={ { type: 'textarea' , validator: this.jobStatusValidator } } width=\"80px\">Status</TableHeaderColumn>\n                  <TableHeaderColumn ref='level'  dataField='level' dataFormat={ this.levelType } filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='center' editable={ { type: 'textarea' , validator: this.jobStatusValidator } } width=\"80px\">Level</TableHeaderColumn>\n                  <TableHeaderColumn ref='created' dataField='created' filter={ { type: 'TextFilter' } } dataFormat = {this.createdType} headerAlign='center' dataAlign='left'>Create Time</TableHeaderColumn>\n                </BootstrapTable>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Modal isOpen={this.state.modal} toggle={this.togglePassword} className={this.props.className} backdrop={true}>\n          <ModalHeader toggle={this.togglePassword}>Modal {this.state.labelModal}</ModalHeader>\n          <ModalBody>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.togglePassword}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.togglePassword}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}