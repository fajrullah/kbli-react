{"ast":null,"code":"import _regeneratorRuntime from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/development/Documents/JunkProc/kbli-react/src/views/Graph/Graph.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Badge, Card, CardBody, CardHeader, Col, Row, Table, Button, Alert, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport * as moment from 'moment/moment';\nimport { connect } from 'react-redux';\nimport { fetchingDataAPI, putDataAPI, deleteData, postingDataAPI } from '../../utils/AxiosMethod';\nimport { toDateTimeLocal, toDateTimeLocalDB } from '../../utils/Helper';\nimport { actionCheckExpired, deleteUser, deleteToken, setAuthenticated } from '../../utils/Action';\nimport { Redirect } from 'react-router-dom';\nimport Chart from 'react-apexcharts';\nvar contentData = [];\n\nvar CryptoJS = require(\"crypto-js\");\n\nfunction generateDayWiseTimeSeries(baseval, count, yrange) {\n  var i = 0;\n  var series = [];\n\n  while (i < count) {\n    var x = baseval;\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    series.push([x, y]);\n    baseval += 86400000;\n    i++;\n  }\n\n  return series;\n} // The global window.Apex variable below can be used to set common options for all charts on the page\n\n\nvar Apex = {\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'straight'\n  },\n  toolbar: {\n    tools: {\n      selection: false\n    }\n  },\n  markers: {\n    size: 6,\n    hover: {\n      size: 10\n    }\n  },\n  tooltip: {\n    followCursor: false,\n    theme: 'dark',\n    x: {\n      show: false\n    },\n    marker: {\n      show: false\n    },\n    y: {\n      title: {\n        formatter: function formatter() {\n          return '';\n        }\n      }\n    }\n  },\n  grid: {\n    clipMarkers: false\n  },\n  yaxis: {\n    tickAmount: 2\n  },\n  xaxis: {\n    type: 'datetime'\n  }\n};\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this, props));\n\n    _this.emailType = function (cell) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        color: \"warning\",\n        onClick: function onClick() {\n          return _this.togglePassword(cell);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), cell);\n    };\n\n    _this.statusType = function (cell) {\n      if (cell == 0) {\n        return React.createElement(Badge, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"Off\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \"On\");\n      }\n    };\n\n    _this.levelType = function (cell) {\n      if (cell == 0) {\n        return React.createElement(Badge, {\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, \"User\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \"Admin\");\n      }\n    };\n\n    _this.createdType = function (cell) {\n      return toDateTimeLocal(cell);\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var form = _this.state.form;\n      var re_password = form.re_password,\n          password = form.password,\n          email = form.email;\n\n      if (re_password === password && password !== undefined && password.length >= 6) {\n        putDataAPI('password', {\n          password: password,\n          email: email\n        }).then(function (result) {\n          if (result.response === 200) {\n            _this.setState({\n              postData: {\n                isFetching: true,\n                status: 'success',\n                notification: \"Success Generate New Password\"\n              }\n            });\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      } else {\n        _this.setState({\n          postData: {\n            isFetching: true,\n            status: 'danger',\n            notification: \"Password not Match / at Least 6 Character\"\n          }\n        });\n      }\n    };\n\n    _this.handleChange = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.onDeleteCell =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(row) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                row.map(function (k, i) {\n                  deleteData('user', {\n                    data: {\n                      id: k\n                    }\n                  }).then(function (result) {\n                    return result;\n                  }).catch(function (err) {\n                    return console.log(err);\n                  });\n                });\n                setTimeout(function () {\n                  _this.setState({\n                    postData: {\n                      isFetching: true,\n                      status: 'success',\n                      notification: 'Success Delete Data'\n                    }\n                  });\n                }, 2000);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onChangeDatePicker = function (event, picker) {\n      var dataTime = {\n        start: toDateTimeLocalDB(picker.startDate._d),\n        end: toDateTimeLocalDB(picker.endDate._d)\n      };\n\n      if (event.handleObj.type === 'apply') {\n        postingDataAPI('/user/createtime', dataTime).then(function (res) {\n          return res.data;\n        }).then(function (data) {\n          _this.setState({\n            data: data,\n            postData: {\n              isFetching: true,\n              status: 'info',\n              notification: \"Success Filtered Data From \".concat(dataTime.start, \" to \").concat(dataTime.end)\n            },\n            labelCal: \"\".concat(dataTime.start, \" s/d \").concat(dataTime.end)\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.onAfterSaveCell = function (row, cellName, cellValue) {\n      if (cellName !== 'email') {\n        putDataAPI('user', row).then(_this.setState({\n          postData: {\n            isFetching: true,\n            status: 'success',\n            notification: 'Success Update Data'\n          }\n        })).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.invalidJobStatus = function (cell, row) {\n      return 'invalid-jobstatus-class';\n    };\n\n    _this.jobStatusValidator = function (value) {\n      var arr = [0, 1];\n\n      if (!arr.includes(parseInt(value))) {\n        return alert('0 For OFF , 1 For On');\n      }\n\n      return true;\n    };\n\n    _this.onDismiss = function () {\n      _this.setState({\n        postData: {\n          visible: false\n        }\n      });\n    };\n\n    _this.state = {\n      data: [],\n      startDateDR: moment().subtract(30, 'days'),\n      endDate: moment(),\n      labelCal: 'Filter By Date',\n      modal: false,\n      token: '',\n      level: '',\n      form: {\n        password: '',\n        re_password: '',\n        email: ''\n      },\n      postData: {\n        notification: '',\n        isFetching: true,\n        status: '',\n        visible: true\n      },\n      cellEditProp: {\n        mode: 'click',\n        blurToSave: true,\n        afterSaveCell: _this.onAfterSaveCell // a hook for after saving cell\n\n      },\n      series3: [{\n        name: \"High - 2013\",\n        data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n          min: 10,\n          max: 90\n        })\n      }, {\n        name: \"Low - 2013\",\n        data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n          min: 45,\n          max: 232\n        })\n      }],\n      chartOptionsArea: {\n        chart: {\n          id: 'yt',\n          group: 'social',\n          type: 'area',\n          toolbar: {\n            show: true\n          },\n          shadow: {\n            enabled: true,\n            color: '#000',\n            top: 18,\n            left: 7,\n            blur: 10,\n            opacity: 1\n          },\n          zoom: {\n            enabled: true\n          }\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            legend: {\n              show: true,\n              position: 'bottom',\n              offsetX: -10 // offsetY: 0\n\n            }\n          }\n        }],\n        fill: {\n          opacity: 1\n        },\n        colors: ['#00E396', '#545454'],\n        dataLabels: {\n          enabled: true\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        title: {\n          text: 'Average High & Low Temperature',\n          align: 'left'\n        },\n        grid: {\n          borderColor: '#e7e7e7',\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            // takes an array which will be repeated on columns\n            opacity: 0.5\n          }\n        },\n        markers: {\n          size: 6\n        }\n      }\n    };\n    _this.onAfterSaveCell = _this.onAfterSaveCell.bind(_assertThisInitialized(_this));\n    _this.jobStatusValidator = _this.jobStatusValidator.bind(_assertThisInitialized(_this));\n    _this.statusType = _this.statusType.bind(_assertThisInitialized(_this));\n    _this.levelType = _this.levelType.bind(_assertThisInitialized(_this));\n    _this.emailType = _this.emailType.bind(_assertThisInitialized(_this));\n    _this.onDismiss = _this.onDismiss.bind(_assertThisInitialized(_this));\n    _this.togglePassword = _this.togglePassword.bind(_assertThisInitialized(_this));\n    _this.onChangeDatePicker = _this.onChangeDatePicker.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"togglePassword\",\n    value: function togglePassword(v) {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal,\n          form: {\n            email: v\n          }\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          token = _this$props.token,\n          isAuthenticated = _this$props.isAuthenticated;\n      this.props.checkToken(token.token);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          isAuthenticated = _this$props2.isAuthenticated,\n          level = _this$props2.level;\n\n      if (isAuthenticated) {\n        fetchingDataAPI('user').then(function (result) {\n          _this2.setState({\n            data: result,\n            level: level\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          cellEditProp = _this$state.cellEditProp,\n          data = _this$state.data,\n          postData = _this$state.postData,\n          form = _this$state.form;\n      var email = form.email,\n          password = form.password,\n          re_password = form.re_password;\n      var selectRowProp = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        showOnlySelected: true,\n        onlyUnselectVisible: true,\n        columnWidth: '60px',\n        bgColor: 'lightblue'\n      };\n      var options = {\n        paginationShowsTotal: this.renderShowsTotal,\n        exportCSVBtn: this.createCustomExportCSV,\n        showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n        onDeleteRow: this.onDeleteCell,\n        onRowClick: function onRowClick(row, columnIndex, rowIndex, e) {// if(columnIndex === 3){\n          //     alert(`Kamu menekan sekali baris dengan Device ID: ${row.email} ,${columnIndex},${rowIndex}`);\n          // }\n        }\n      };\n\n      if (!this.props.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.isAuthenticated && this.props.level !== 1) {\n        return React.createElement(Redirect, {\n          to: \"/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(Row, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-info pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), \"User List\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(DateRangePicker, {\n        startDate: this.state.startDateDR,\n        endDate: this.state.endDate,\n        onEvent: this.onChangeDatePicker,\n        showWeekNumbers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \" \", this.state.labelCal)))), React.createElement(\"div\", {\n        id: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        type: \"area\",\n        options: this.state.chartOptionsArea,\n        series: this.state.series3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.isAuthenticated,\n    token: state.token,\n    level: state.user.level\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkToken: function checkToken(values) {\n      return dispatch(actionCheckExpired(values));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Graph);","map":{"version":3,"sources":["/home/development/Documents/JunkProc/kbli-react/src/views/Graph/Graph.js"],"names":["React","Component","Form","Input","Badge","Card","CardBody","CardHeader","Col","Row","Table","Button","Alert","Modal","ModalHeader","ModalBody","ModalFooter","InputGroup","InputGroupAddon","InputGroupText","BootstrapTable","TableHeaderColumn","DateRangePicker","moment","connect","fetchingDataAPI","putDataAPI","deleteData","postingDataAPI","toDateTimeLocal","toDateTimeLocalDB","actionCheckExpired","deleteUser","deleteToken","setAuthenticated","Redirect","Chart","contentData","CryptoJS","require","generateDayWiseTimeSeries","baseval","count","yrange","i","series","x","y","Math","floor","random","max","min","push","Apex","dataLabels","enabled","stroke","curve","toolbar","tools","selection","markers","size","hover","tooltip","followCursor","theme","show","marker","title","formatter","grid","clipMarkers","yaxis","tickAmount","xaxis","type","Graph","props","emailType","cell","togglePassword","statusType","levelType","createdType","handleSubmit","e","preventDefault","form","state","re_password","password","email","undefined","length","then","result","response","setState","postData","isFetching","status","notification","catch","err","console","log","handleChange","target","name","value","onDeleteCell","row","map","k","data","id","setTimeout","onChangeDatePicker","event","picker","dataTime","start","startDate","_d","end","endDate","handleObj","res","labelCal","onAfterSaveCell","cellName","cellValue","invalidJobStatus","jobStatusValidator","arr","includes","parseInt","alert","onDismiss","visible","startDateDR","subtract","modal","token","level","cellEditProp","mode","blurToSave","afterSaveCell","series3","Date","getTime","chartOptionsArea","chart","group","shadow","color","top","left","blur","opacity","zoom","responsive","breakpoint","options","legend","position","offsetX","fill","colors","text","align","borderColor","bind","v","prevState","isAuthenticated","checkToken","selectRowProp","clickToSelect","showOnlySelected","onlyUnselectVisible","columnWidth","bgColor","paginationShowsTotal","renderShowsTotal","exportCSVBtn","createCustomExportCSV","showSelectedOnlyBtn","ShowSelectedOnlyButton","onDeleteRow","onRowClick","columnIndex","rowIndex","onClick","mapStateToProps","user","mapDispatchToProps","dispatch","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Badge, Card, CardBody, CardHeader, Col, Row, Table, Button , Alert, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup , InputGroupAddon , InputGroupText } from 'reactstrap';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport * as moment from 'moment/moment';\nimport { connect } from 'react-redux';\nimport { fetchingDataAPI , putDataAPI , deleteData , postingDataAPI } from '../../utils/AxiosMethod';\nimport { toDateTimeLocal, toDateTimeLocalDB } from '../../utils/Helper';\nimport { actionCheckExpired , deleteUser, deleteToken, setAuthenticated  } from '../../utils/Action';\nimport { Redirect } from 'react-router-dom';\nimport Chart from 'react-apexcharts'\nlet contentData = []\nconst CryptoJS = require(\"crypto-js\");\nfunction generateDayWiseTimeSeries(baseval, count, yrange) {\n      var i = 0;\n      var series = [];\n      while (i < count) {\n        var x = baseval;\n        var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n        series.push([x, y]);\n        baseval += 86400000;\n        i++;\n      }\n      return series;\n    }\n\n    // The global window.Apex variable below can be used to set common options for all charts on the page\nconst Apex = {\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'straight'\n      },\n      toolbar: {\n        tools: {\n          selection: false\n        }\n      },\n      markers: {\n        size: 6,\n        hover: {\n          size: 10\n        }\n      },\n      tooltip: {\n        followCursor: false,\n        theme: 'dark',\n        x: {\n          show: false\n        },\n        marker: {\n          show: false\n        },\n        y: {\n          title: {\n            formatter: function () {\n              return ''\n            }\n          }\n        }\n      },\n      grid: {\n        clipMarkers: false\n      },\n      yaxis: {\n        tickAmount: 2\n      },\n      xaxis: {\n        type: 'datetime'\n      },\n    }\nclass Graph extends Component {\n constructor(props) {\n   super(props);\n   this.state = {\n        data : [],\n        startDateDR: moment().subtract(30, 'days'),\n        endDate: moment(),\n        labelCal: 'Filter By Date',\n        modal: false,\n        token : '',\n        level : '',\n        form : {\n            password : '',\n            re_password : '',\n            email : '',\n          },\n        postData : {\n          notification : '',\n          isFetching : true,\n          status : '',\n          visible: true,\n        },\n        cellEditProp : {\n          mode: 'click',\n          blurToSave: true,\n          afterSaveCell: this.onAfterSaveCell // a hook for after saving cell\n        },\n        series3: [{\n          name: \"High - 2013\",\n          data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n            min: 10,\n            max: 90\n          })\n        },{\n          name: \"Low - 2013\",\n          data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n            min: 45,\n            max: 232\n          })\n        }],\n        chartOptionsArea: {\n          chart: {\n            id: 'yt',\n            group: 'social',\n            type: 'area',\n            toolbar: {\n                show: true\n              },\n            shadow: {\n              enabled: true,\n              color: '#000',\n              top: 18,\n              left: 7,\n              blur: 10,\n              opacity: 1\n            },\n            zoom: {\n              enabled: true\n            }\n          },\n          responsive: [{\n              breakpoint: 480,\n              options: {\n                legend: {\n                  show:true,\n                  position: 'bottom',\n                  offsetX: -10,\n                  // offsetY: 0\n                }\n              }\n            }],\n           fill: {\n              opacity: 1,\n            },\n          colors: ['#00E396','#545454'],\n          dataLabels: {\n            enabled: true,\n          },\n          stroke: {\n            curve: 'smooth'\n          },\n          title: {\n            text: 'Average High & Low Temperature',\n            align: 'left'\n          },\n          grid: {\n            borderColor: '#e7e7e7',\n            row: {\n              colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n              opacity: 0.5\n            },\n          },\n          markers: {\n            size: 6\n          }\n        }\n   };\n   this.onAfterSaveCell = this.onAfterSaveCell.bind(this)\n   this.jobStatusValidator = this.jobStatusValidator.bind(this)\n   this.statusType = this.statusType.bind(this)\n   this.levelType = this.levelType.bind(this)\n   this.emailType = this.emailType.bind(this)\n   this.onDismiss = this.onDismiss.bind(this)\n   this.togglePassword = this.togglePassword.bind(this);\n   this.onChangeDatePicker = this.onChangeDatePicker.bind(this);\n\n }\n  emailType = (cell) => {\n    return (<div><Badge color=\"warning\" onClick={ () => this.togglePassword(cell)}><i className=\"icon-lock\"/></Badge>{cell}</div>)\n  }\n  statusType = (cell) => {\n    if(cell == 0){\n      return (<Badge color=\"danger\">Off</Badge>)\n    }else{\n      return (<Badge color=\"success\">On</Badge>)\n    }\n  }\n  levelType = (cell) => {\n    if(cell == 0){\n      return (<Badge color=\"secondary\">User</Badge>)\n    }else{\n      return (<Badge color=\"primary\">Admin</Badge>)\n    }\n  }\n  createdType = (cell) => {\n    return toDateTimeLocal(cell)\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const { form } = this.state\n    const { re_password , password , email } = form\n    if(re_password === password && password !== undefined && password.length >= 6){\n    putDataAPI('password',{password, email}).then(result => {\n      if(result.response === 200){\n        this.setState({\n                 postData : {\n                      isFetching : true,\n                      status : 'success',\n                      notification : `Success Generate New Password`\n                  }\n              })\n      }\n    }).catch( err => console.log(err))          \n        }else{\n              this.setState({\n                 postData : {\n                      isFetching : true,\n                      status : 'danger',\n                      notification : `Password not Match / at Least 6 Character`\n                  }\n              })\n        }\n  }\n  handleChange = (e) => {\n    e.preventDefault()\n    this.setState({\n      form :{\n        ...this.state.form,\n        [e.target.name] : e.target.value\n      }\n    })\n  }\n  onDeleteCell = async (row) => {\n   row.map((k,i) => {\n      deleteData('user',{ data: {id : k} })\n      .then(result => result)\n      .catch(err => console.log(err))\n   })\n      setTimeout( () => {\n           this.setState({\n            postData : {\n              isFetching : true,\n              status : 'success',\n              notification : 'Success Delete Data'\n          }}\n      )\n      },2000)\n  }\n  onChangeDatePicker = (event, picker) =>{\n      const dataTime = {\n          start : toDateTimeLocalDB(picker.startDate._d),\n          end : toDateTimeLocalDB(picker.endDate._d)\n      }\n      if(event.handleObj.type === 'apply'){\n        postingDataAPI('/user/createtime',dataTime).then(res => {\n          return res.data\n        })\n        .then(data => {\n          this.setState({data,\n                postData : {\n                  isFetching : true,\n                  status : 'info',\n                  notification : `Success Filtered Data From ${dataTime.start} to ${dataTime.end}`\n              },\n              labelCal: (`${dataTime.start} s/d ${dataTime.end}`)\n          })\n        })\n        .catch(err => console.log(err))\n    }\n  }\n onAfterSaveCell = (row, cellName, cellValue) => {\n\n    if(cellName !== 'email'){\n      putDataAPI('user',row).then(\n      this.setState({\n                postData : {\n                  isFetching : true,\n                  status : 'success',\n                  notification : 'Success Update Data'\n              }}\n      )).catch(err => console.log(err))\n    }\n  }\n  invalidJobStatus = (cell, row) => {\n    return 'invalid-jobstatus-class';\n  }\n  jobStatusValidator = (value) => {\n     const arr = [0,1]\n     if(!arr.includes(parseInt(value))){\n      return alert('0 For OFF , 1 For On');\n     }\n    return true;\n  }\n  togglePassword(v) {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      form : {\n        email : v,\n      }\n    }));\n  }\n  onDismiss = () => {\n    this.setState({ postData : {visible: false} });\n  }\n componentWillUnmount(){\n\n }\n\n componentWillMount(){\n  const { token , isAuthenticated } = this.props\n  this.props.checkToken(token.token)\n}\n componentDidMount(){\n  const { isAuthenticated , level } = this.props\n  if(isAuthenticated){\n    fetchingDataAPI('user').then(result => {\n      this.setState({\n        data : result,\n        level : level\n      })\n    }).catch(err => console.log(err));\n  }\n }\n  render() {\n    const { cellEditProp , data , postData , form  } = this.state\n    const { email , password , re_password } = form\n    const selectRowProp = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      showOnlySelected: true,\n      onlyUnselectVisible: true,\n      columnWidth :'60px',\n      bgColor: 'lightblue',\n    };\n\n    const options = {\n      paginationShowsTotal: this.renderShowsTotal,\n      exportCSVBtn:this.createCustomExportCSV,\n      showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n      onDeleteRow  : this.onDeleteCell,\n      onRowClick: function(row, columnIndex, rowIndex, e){\n          // if(columnIndex === 3){\n          //     alert(`Kamu menekan sekali baris dengan Device ID: ${row.email} ,${columnIndex},${rowIndex}`);\n          // }\n        }\n    };\n\n     if (!this.props.isAuthenticated) {\n      return (<Redirect to=\"/login\" />);\n    }\n     if (this.props.isAuthenticated && this.props.level !== 1) {\n      return (<Redirect to=\"/dashboard\" />);\n    }\n    return (\n      \n      <div className=\"animated fadeIn\">\n        <Row xs=\"12\" lg=\"12\">\n          <Col xs=\"12\" lg=\"12\">\n                      <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>User List</strong>\n              </CardHeader>\n              <CardBody>\n                 <div className='form-group'>\n                  <DateRangePicker \n                    startDate={this.state.startDateDR} \n                    endDate={this.state.endDate}\n                    onEvent={this.onChangeDatePicker}\n                    showWeekNumbers\n                    >\n                    <Button onClick={this.onClick}>\n                      <i className=\"fa fa-calendar\"/>\n                      <span> {this.state.labelCal}</span>                          \n                    </Button>            \n                  </DateRangePicker>\n                </div>\n                  <div id=\"wrapper\">\n                    <div id=\"chart-area\">\n                      <Chart type=\"area\" options={this.state.chartOptionsArea} series={this.state.series3}/>\n                    </div>\n                  </div>\n              </CardBody>\n            </Card>\n\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({  isAuthenticated : state.isAuthenticated, token : state.token , level : state.user.level });\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkToken : (values) => dispatch(actionCheckExpired(values)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Graph);\n\n\n"]},"metadata":{},"sourceType":"module"}