{"ast":null,"code":"import _classCallCheck from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/development/Documents/JunkProc/kbli-react/src/views/Users/Users.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table, Button } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport usersData from './UsersData';\nimport * as moment from 'moment/moment';\nimport { fetchingDataAPI } from '../../utils/AxiosMethod';\nvar contentData = [];\n\nfunction format(cell, row) {\n  return '<i class=\"glyphicon glyphicon-usd\"></i> ' + cell;\n}\n\nvar User =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(User, _Component);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this, props));\n\n    _this.onAfterSaveCell = function (row, cellName, cellValue) {\n      console.log(row, cellName, cellValue);\n    };\n\n    _this.invalidJobStatus = function (cell, row) {\n      return 'invalid-jobstatus-class';\n    };\n\n    _this.jobStatusValidator = function (value) {\n      console.log(value);\n      var nan = isNaN(parseInt(value, 10));\n\n      if (nan) {\n        return 'Harus Integer';\n      }\n\n      return 'Harus Integer';\n    };\n\n    _this.state = {\n      data: [],\n      cellEditProp: {\n        mode: 'click',\n        blurToSave: true,\n        afterSaveCell: _this.onAfterSaveCell // a hook for after saving cell\n\n      }\n    };\n    _this.onAfterSaveCell = _this.onAfterSaveCell.bind(_assertThisInitialized(_this));\n    _this.jobStatusValidator = _this.jobStatusValidator.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetchingDataAPI('user').then(function (result) {\n        console.log(result);\n\n        _this2.setState({\n          data: result\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          cellEditProp = _this$state.cellEditProp,\n          data = _this$state.data;\n      var selectRowProp = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        showOnlySelected: true,\n        onlyUnselectVisible: true,\n        columnWidth: '60px',\n        bgColor: 'lightblue'\n      };\n      var options = {\n        paginationShowsTotal: this.renderShowsTotal,\n        exportCSVBtn: this.createCustomExportCSV,\n        showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n        onDeleteRow: this.handleDeleteButtonClick,\n        onRowClick: function onRowClick(row, columnIndex, rowIndex, e) {\n          // alert(`Kamu menekan sekali baris dengan Device ID: ${row.id} ,${columnIndex},${rowIndex}`);\n          console.log(e);\n        }\n      };\n      var user = usersData.find(function (user) {\n        return user.id.toString() === _this3.props.match.params.id;\n      });\n      var userDetails = user ? Object.entries(user) : [['id', React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"text-muted icon-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), \" Not found\")]];\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-info pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), \"User id: \", this.props.match.params.id)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(DateRangePicker, {\n        startDate: this.state.startDateDR,\n        endDate: this.state.endDate,\n        onEvent: this.handleChangeDatePicker,\n        showWeekNumbers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \" \", this.state.labelCal)))), React.createElement(BootstrapTable, {\n        data: data,\n        selectRow: selectRowProp,\n        striped: true,\n        hover: true,\n        condensed: true,\n        pagination: true,\n        insertRow: true,\n        deleteRow: true,\n        search: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"id\",\n        isKey: true,\n        dataAlign: \"right\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"ID\"), React.createElement(TableHeaderColumn, {\n        dataField: \"first_name\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"First Name\")))))));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nexport default User;","map":{"version":3,"sources":["/home/development/Documents/JunkProc/kbli-react/src/views/Users/Users.js"],"names":["React","Component","Card","CardBody","CardHeader","Col","Row","Table","Button","BootstrapTable","TableHeaderColumn","DateRangePicker","usersData","moment","fetchingDataAPI","contentData","format","cell","row","User","props","onAfterSaveCell","cellName","cellValue","console","log","invalidJobStatus","jobStatusValidator","value","nan","isNaN","parseInt","state","data","cellEditProp","mode","blurToSave","afterSaveCell","bind","then","result","setState","catch","err","selectRowProp","clickToSelect","showOnlySelected","onlyUnselectVisible","columnWidth","bgColor","options","paginationShowsTotal","renderShowsTotal","exportCSVBtn","createCustomExportCSV","showSelectedOnlyBtn","ShowSelectedOnlyButton","onDeleteRow","handleDeleteButtonClick","onRowClick","columnIndex","rowIndex","e","user","find","id","toString","match","params","userDetails","Object","entries","startDateDR","endDate","handleChangeDatePicker","onClick","labelCal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table, Button } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport usersData from './UsersData'\nimport * as moment from 'moment/moment';\nimport { fetchingDataAPI } from '../../utils/AxiosMethod';\nlet contentData = []\nfunction format(cell, row){\n  return '<i class=\"glyphicon glyphicon-usd\"></i> ' + cell;\n}\nclass User extends Component {\n constructor(props) {\n   super(props);\n   this.state = {\n        data : [],\n        cellEditProp : {\n          mode: 'click',\n          blurToSave: true,\n          afterSaveCell: this.onAfterSaveCell // a hook for after saving cell\n        },\n   };\n   this.onAfterSaveCell = this.onAfterSaveCell.bind(this)\n   this.jobStatusValidator = this.jobStatusValidator.bind(this)\n }\n\n onAfterSaveCell = (row, cellName, cellValue) => {\n    console.log(row, cellName, cellValue)\n  }\n  invalidJobStatus = (cell, row) => {\n    return 'invalid-jobstatus-class';\n  }\n  jobStatusValidator = (value) => {\n    console.log(value)\n    const nan = isNaN(parseInt(value, 10));\n    if (nan) {\n      return 'Harus Integer';\n    }\n    return 'Harus Integer';\n  }\n\n componentDidMount(){\n    fetchingDataAPI('user').then(result => {\n      console.log(result)\n      this.setState({\n        data : result\n      })\n    }).catch(err => console.log(err));\n }\n\n  render() {\n    const { cellEditProp , data } = this.state\n    const selectRowProp = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      showOnlySelected: true,\n      onlyUnselectVisible: true,\n      columnWidth :'60px',\n      bgColor: 'lightblue',\n    };\n\n    const options = {\n      paginationShowsTotal: this.renderShowsTotal,\n      exportCSVBtn:this.createCustomExportCSV,\n      showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n      onDeleteRow  : this.handleDeleteButtonClick,\n      onRowClick: function(row, columnIndex, rowIndex, e){\n        // alert(`Kamu menekan sekali baris dengan Device ID: ${row.id} ,${columnIndex},${rowIndex}`);\n        console.log(e);\n        }\n\n    };\n\n\n\n    const user = usersData.find( user => user.id.toString() === this.props.match.params.id)\n\n    const userDetails = user ? Object.entries(user) : [['id', (<span><i className=\"text-muted icon-ban\"></i> Not found</span>)]]\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\" lg=\"12\">\n            <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>User id: {this.props.match.params.id}</strong>\n              </CardHeader>\n              <CardBody>\n                 <div className='form-group'>\n                  <DateRangePicker \n                    startDate={this.state.startDateDR} \n                    endDate={this.state.endDate}\n                    onEvent={this.handleChangeDatePicker}\n                    showWeekNumbers\n                    >\n                    <Button onClick={this.onClick}>\n                      <i className=\"fa fa-calendar\"/>\n                      <span> {this.state.labelCal}</span>                          \n                    </Button>            \n                  </DateRangePicker>\n                </div>\n                 {/*<button onClick={this.getSelectedRowKeys.bind(this)}>Get selected row keys</button>*/}\n  \n                  <BootstrapTable\n                    data={data}\n                    selectRow={selectRowProp}\n                    striped\n                    hover\n                    condensed\n                    pagination\n                    insertRow\n                    deleteRow\n                    search\n                  >\n                 <TableHeaderColumn dataField=\"id\" isKey dataAlign=\"right\" dataSort>ID</TableHeaderColumn>\n                 <TableHeaderColumn dataField=\"first_name\" dataSort>First Name</TableHeaderColumn>\n                </BootstrapTable>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}