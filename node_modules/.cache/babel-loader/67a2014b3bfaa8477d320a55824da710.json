{"ast":null,"code":"import _classCallCheck from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/development/Documents/JunkProc/kbli-react/src/views/Graph/Graph.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Badge, Card, CardBody, CardHeader, Col, Row, Table, Button, Alert, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport * as moment from 'moment/moment';\nimport { connect } from 'react-redux';\nimport { fetchingDataAPI, putDataAPI, deleteData, postingDataAPI } from '../../utils/AxiosMethod';\nimport { toDateTimeLocal, toDateTimeLocalDB } from '../../utils/Helper';\nimport { actionCheckExpired, deleteUser, deleteToken, setAuthenticated } from '../../utils/Action';\nimport { Redirect } from 'react-router-dom';\nimport Chart from 'react-apexcharts';\nvar contentData = [];\n\nvar CryptoJS = require(\"crypto-js\");\n\nfunction generateDayWiseTimeSeries(baseval, count, yrange) {\n  var i = 0;\n  var series = [];\n\n  while (i < count) {\n    var x = baseval;\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    series.push([x, y]);\n    baseval += 86400000;\n    i++;\n  }\n\n  return series;\n} // The global window.Apex variable below can be used to set common options for all charts on the page\n\n\nvar Apex = {\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'straight'\n  },\n  toolbar: {\n    tools: {\n      selection: false\n    }\n  },\n  markers: {\n    size: 6,\n    hover: {\n      size: 10\n    }\n  },\n  tooltip: {\n    followCursor: false,\n    theme: 'dark',\n    x: {\n      show: false\n    },\n    marker: {\n      show: false\n    },\n    y: {\n      title: {\n        formatter: function formatter() {\n          return '';\n        }\n      }\n    }\n  },\n  grid: {\n    clipMarkers: false\n  },\n  yaxis: {\n    tickAmount: 2\n  },\n  xaxis: {\n    type: 'datetime'\n  }\n};\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this, props));\n\n    _this.onChangeDatePicker = function (event, picker) {\n      var dataTime = {\n        start: toDateTimeLocalDB(picker.startDate._d),\n        end: toDateTimeLocalDB(picker.endDate._d)\n      };\n\n      if (event.handleObj.type === 'apply') {\n        postingDataAPI('/user/createtime', dataTime).then(function (res) {\n          return res.data;\n        }).then(function (data) {\n          _this.setState({\n            data: data,\n            postData: {\n              isFetching: true,\n              status: 'info',\n              notification: \"Success Filtered Data From \".concat(dataTime.start, \" to \").concat(dataTime.end)\n            },\n            labelCal: \"\".concat(dataTime.start, \" s/d \").concat(dataTime.end)\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.state = {\n      data: [],\n      startDateDR: moment().subtract(30, 'days'),\n      endDate: moment(),\n      labelCal: 'Filter By Date',\n      modal: false,\n      token: '',\n      level: '',\n      postData: {\n        notification: '',\n        isFetching: true,\n        status: '',\n        visible: true\n      },\n      cellEditProp: {\n        mode: 'click',\n        blurToSave: true,\n        afterSaveCell: _this.onAfterSaveCell // a hook for after saving cell\n\n      },\n      series3: [{\n        name: \"Max Price\",\n        data: [12, 20, 420, 102, 22, 402]\n      }, {\n        name: \"Min Price\",\n        data: [10, 20, 40, 102, 203, 402]\n      }],\n      chartOptionsArea: {\n        chart: {\n          id: 'yt',\n          group: 'social',\n          type: 'area',\n          toolbar: {\n            show: true\n          },\n          shadow: {\n            enabled: true,\n            color: '#000',\n            top: 18,\n            left: 7,\n            blur: 10,\n            opacity: 1\n          },\n          zoom: {\n            enabled: true\n          }\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            legend: {\n              show: true,\n              position: 'bottom',\n              offsetX: -10 // offsetY: 0\n\n            }\n          }\n        }],\n        fill: {\n          opacity: 1\n        },\n        colors: ['#00E396', '#545454'],\n        dataLabels: {\n          enabled: true\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        title: {\n          text: 'Klasifikasi Baku Lapangan Usaha Indonesia',\n          align: 'left'\n        },\n        grid: {\n          borderColor: '#e7e7e7',\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            // takes an array which will be repeated on columns\n            opacity: 0.5\n          }\n        },\n        markers: {\n          size: 6\n        },\n        xaxis: {\n          type: 'datetime',\n          categories: ['2019-05-01', '2019-05-11', '2019-06-12', '2019-06-21', '2019-07-01', '2019-07-12']\n        }\n      }\n    };\n    _this.onChangeDatePicker = _this.onChangeDatePicker.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          token = _this$props.token,\n          isAuthenticated = _this$props.isAuthenticated;\n      this.props.checkToken(token.token);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          isAuthenticated = _this$props2.isAuthenticated,\n          level = _this$props2.level;\n\n      if (isAuthenticated) {\n        postingDataAPI('/kbli/sps', {\n          level_1: 1\n        }).then(function (result) {\n          console.log(result.data);\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.isAuthenticated && this.props.level !== 1) {\n        return React.createElement(Redirect, {\n          to: \"/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Row, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-info pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), \"User List\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(DateRangePicker, {\n        startDate: this.state.startDateDR,\n        endDate: this.state.endDate,\n        onEvent: this.onChangeDatePicker,\n        showWeekNumbers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \" \", this.state.labelCal)))), React.createElement(\"div\", {\n        id: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        type: \"area\",\n        options: this.state.chartOptionsArea,\n        series: this.state.series3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.isAuthenticated,\n    token: state.token,\n    level: state.user.level\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkToken: function checkToken(values) {\n      return dispatch(actionCheckExpired(values));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Graph);","map":{"version":3,"sources":["/home/development/Documents/JunkProc/kbli-react/src/views/Graph/Graph.js"],"names":["React","Component","Form","Input","Badge","Card","CardBody","CardHeader","Col","Row","Table","Button","Alert","Modal","ModalHeader","ModalBody","ModalFooter","InputGroup","InputGroupAddon","InputGroupText","BootstrapTable","TableHeaderColumn","DateRangePicker","moment","connect","fetchingDataAPI","putDataAPI","deleteData","postingDataAPI","toDateTimeLocal","toDateTimeLocalDB","actionCheckExpired","deleteUser","deleteToken","setAuthenticated","Redirect","Chart","contentData","CryptoJS","require","generateDayWiseTimeSeries","baseval","count","yrange","i","series","x","y","Math","floor","random","max","min","push","Apex","dataLabels","enabled","stroke","curve","toolbar","tools","selection","markers","size","hover","tooltip","followCursor","theme","show","marker","title","formatter","grid","clipMarkers","yaxis","tickAmount","xaxis","type","Graph","props","onChangeDatePicker","event","picker","dataTime","start","startDate","_d","end","endDate","handleObj","then","res","data","setState","postData","isFetching","status","notification","labelCal","catch","err","console","log","state","startDateDR","subtract","modal","token","level","visible","cellEditProp","mode","blurToSave","afterSaveCell","onAfterSaveCell","series3","name","chartOptionsArea","chart","id","group","shadow","color","top","left","blur","opacity","zoom","responsive","breakpoint","options","legend","position","offsetX","fill","colors","text","align","borderColor","row","categories","bind","isAuthenticated","checkToken","level_1","result","onClick","mapStateToProps","user","mapDispatchToProps","dispatch","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Badge, Card, CardBody, CardHeader, Col, Row, Table, Button , Alert, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup , InputGroupAddon , InputGroupText } from 'reactstrap';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport * as moment from 'moment/moment';\nimport { connect } from 'react-redux';\nimport { fetchingDataAPI , putDataAPI , deleteData , postingDataAPI } from '../../utils/AxiosMethod';\nimport { toDateTimeLocal, toDateTimeLocalDB } from '../../utils/Helper';\nimport { actionCheckExpired , deleteUser, deleteToken, setAuthenticated  } from '../../utils/Action';\nimport { Redirect } from 'react-router-dom';\nimport Chart from 'react-apexcharts'\nlet contentData = []\nconst CryptoJS = require(\"crypto-js\");\nfunction generateDayWiseTimeSeries(baseval, count, yrange) {\n      var i = 0;\n      var series = [];\n      while (i < count) {\n        var x = baseval;\n        var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n        series.push([x, y]);\n        baseval += 86400000;\n        i++;\n      }\n      return series;\n    }\n\n    // The global window.Apex variable below can be used to set common options for all charts on the page\nconst Apex = {\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'straight'\n      },\n      toolbar: {\n        tools: {\n          selection: false\n        }\n      },\n      markers: {\n        size: 6,\n        hover: {\n          size: 10\n        }\n      },\n      tooltip: {\n        followCursor: false,\n        theme: 'dark',\n        x: {\n          show: false\n        },\n        marker: {\n          show: false\n        },\n        y: {\n          title: {\n            formatter: function () {\n              return ''\n            }\n          }\n        }\n      },\n      grid: {\n        clipMarkers: false\n      },\n      yaxis: {\n        tickAmount: 2\n      },\n      xaxis: {\n        type: 'datetime'\n      },\n    }\nclass Graph extends Component {\n constructor(props) {\n   super(props);\n   this.state = {\n        data : [],\n        startDateDR: moment().subtract(30, 'days'),\n        endDate: moment(),\n        labelCal: 'Filter By Date',\n        modal: false,\n        token : '',\n        level : '',\n        postData : {\n          notification : '',\n          isFetching : true,\n          status : '',\n          visible: true,\n        },\n        cellEditProp : {\n          mode: 'click',\n          blurToSave: true,\n          afterSaveCell: this.onAfterSaveCell // a hook for after saving cell\n        },\n        series3: [{\n          name: \"Max Price\",\n          data: [12,20,420,102,22,402]\n        },{\n          name: \"Min Price\",\n          data: [10,20,40,102,203,402]\n        }],\n        chartOptionsArea: {\n          chart: {\n            id: 'yt',\n            group: 'social',\n            type: 'area',\n            toolbar: {\n                show: true\n              },\n            shadow: {\n              enabled: true,\n              color: '#000',\n              top: 18,\n              left: 7,\n              blur: 10,\n              opacity: 1\n            },\n            zoom: {\n              enabled: true\n            }\n          },\n          responsive: [{\n              breakpoint: 480,\n              options: {\n                legend: {\n                  show:true,\n                  position: 'bottom',\n                  offsetX: -10,\n                  // offsetY: 0\n                }\n              }\n            }],\n           fill: {\n              opacity: 1,\n            },\n          colors: ['#00E396','#545454'],\n          dataLabels: {\n            enabled: true,\n          },\n          stroke: {\n            curve: 'smooth'\n          },\n          title: {\n            text: 'Klasifikasi Baku Lapangan Usaha Indonesia',\n            align: 'left'\n          },\n          grid: {\n            borderColor: '#e7e7e7',\n            row: {\n              colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n              opacity: 0.5\n            },\n          },\n          markers: {\n            size: 6\n          },\n          xaxis: {\n            type: 'datetime',\n            categories: ['2019-05-01', '2019-05-11', '2019-06-12', '2019-06-21',\n              '2019-07-01', '2019-07-12'\n            ],\n          },\n        }\n   };\n\n   this.onChangeDatePicker = this.onChangeDatePicker.bind(this);\n\n }\n \n  onChangeDatePicker = (event, picker) =>{\n      const dataTime = {\n          start : toDateTimeLocalDB(picker.startDate._d),\n          end : toDateTimeLocalDB(picker.endDate._d)\n      }\n      if(event.handleObj.type === 'apply'){\n        postingDataAPI('/user/createtime',dataTime).then(res => {\n          return res.data\n        })\n        .then(data => {\n          this.setState({data,\n                postData : {\n                  isFetching : true,\n                  status : 'info',\n                  notification : `Success Filtered Data From ${dataTime.start} to ${dataTime.end}`\n              },\n              labelCal: (`${dataTime.start} s/d ${dataTime.end}`)\n          })\n        })\n        .catch(err => console.log(err))\n    }\n  }\n\n componentWillUnmount(){\n\n }\n\n componentWillMount(){\n  const { token , isAuthenticated } = this.props\n  this.props.checkToken(token.token)\n}\n componentDidMount(){\n  const { isAuthenticated , level } = this.props\n  if(isAuthenticated){\n    postingDataAPI('/kbli/sps',{ level_1:1 }).then(result => {\n      console.log(result.data)\n    }).catch(err => console.log(err));\n  }\n }\n  render() {\n     if (!this.props.isAuthenticated) {\n      return (<Redirect to=\"/login\" />);\n    }\n     if (this.props.isAuthenticated && this.props.level !== 1) {\n      return (<Redirect to=\"/dashboard\" />);\n    }\n    return (\n      <div className=\"animated fadeIn\">\n        <Row xs=\"12\" lg=\"12\">\n          <Col xs=\"12\" lg=\"12\">\n            <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>User List</strong>\n              </CardHeader>\n              <CardBody>\n                 <div className='form-group'>\n                  <DateRangePicker \n                    startDate={this.state.startDateDR} \n                    endDate={this.state.endDate}\n                    onEvent={this.onChangeDatePicker}\n                    showWeekNumbers\n                    >\n                    <Button onClick={this.onClick}>\n                      <i className=\"fa fa-calendar\"/>\n                      <span> {this.state.labelCal}</span>                          \n                    </Button>            \n                  </DateRangePicker>\n                </div>\n                  <div id=\"wrapper\">\n                    <div id=\"chart-area\">\n                      <Chart type=\"area\" options={this.state.chartOptionsArea} series={this.state.series3}/>\n                    </div>\n                  </div>\n              </CardBody>\n            </Card>\n\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({  isAuthenticated : state.isAuthenticated, token : state.token , level : state.user.level });\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkToken : (values) => dispatch(actionCheckExpired(values)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Graph);\n\n\n"]},"metadata":{},"sourceType":"module"}