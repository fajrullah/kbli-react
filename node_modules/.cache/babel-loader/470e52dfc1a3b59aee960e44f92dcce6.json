{"ast":null,"code":"import _defineProperty from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/development/Documents/JunkProc/kbli-react/src/views/Kbli/Kbli.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Alert } from 'reactstrap';\nimport Select from 'react-select';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport { connect } from 'react-redux';\nimport { fetchingDataAPI, putDataAPI, deleteData, postingDataAPI } from '../../utils/AxiosMethod';\nimport { toRomawiString } from '../../utils/Helper';\nimport { actionCheckExpired } from '../../utils/Action';\nimport { Redirect } from 'react-router-dom';\n\nvar Kbli =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Kbli, _Component);\n\n  function Kbli(props) {\n    var _this;\n\n    _classCallCheck(this, Kbli);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Kbli).call(this, props));\n\n    _this.handleChangeSelectOpt = function (selectedOption) {\n      var tableComponent = _this.state.tableComponent;\n      var toDefaultvalue = tableComponent.slice(0, 4);\n\n      if (selectedOption !== null) {\n        selectedOption.map(function (key) {\n          return toDefaultvalue.push(key.value);\n        });\n      }\n\n      _this.setState({\n        selectedOption: selectedOption,\n        tableComponent: toDefaultvalue\n      });\n    };\n\n    _this.onDeleteCell =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(row) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                row.map(function (k, i) {\n                  return deleteData('user', {\n                    data: {\n                      id: k\n                    }\n                  }).then(function (result) {\n                    return result;\n                  }).catch(function (err) {\n                    return console.log(err);\n                  });\n                });\n                setTimeout(function () {\n                  _this.setState({\n                    postData: {\n                      isFetching: true,\n                      status: 'success',\n                      notification: 'Success Delete Data'\n                    }\n                  });\n                }, 2000);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onAfterSaveCell = function (row, cellName, cellValue) {\n      console.log(row);\n\n      if (cellName !== 'email') {\n        putDataAPI('user', row).then(_this.setState({\n          postData: {\n            isFetching: true,\n            status: 'success',\n            notification: 'Success Update Data'\n          }\n        })).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.invalidJobStatus = function (cell, row) {\n      return 'invalid-jobstatus-class';\n    };\n\n    _this.jobStatusValidator = function (value) {\n      var arr = [0, 1];\n\n      if (!arr.includes(parseInt(value))) {\n        return alert('0 For OFF , 1 For On');\n      }\n\n      return true;\n    };\n\n    _this.onDismiss = function () {\n      _this.setState({\n        postData: {\n          visible: false\n        }\n      });\n    };\n\n    _this.state = {\n      data: [],\n      tableComponent: [],\n      labelCal: 'Filter By Date',\n      modal: false,\n      token: '',\n      level: '',\n      objectWithMaxProps: [],\n      selectedOption: null,\n      selectedOptionValue: [],\n      form: {\n        password: '',\n        re_password: '',\n        email: ''\n      },\n      postData: {\n        notification: '',\n        isFetching: true,\n        status: '',\n        visible: true\n      },\n      cellEditProp: {\n        mode: 'click',\n        blurToSave: true,\n        afterSaveCell: _this.onAfterSaveCell // a hook for after saving cell\n\n      }\n    };\n    _this.onAfterSaveCell = _this.onAfterSaveCell.bind(_assertThisInitialized(_this));\n    _this.jobStatusValidator = _this.jobStatusValidator.bind(_assertThisInitialized(_this));\n    _this.onDismiss = _this.onDismiss.bind(_assertThisInitialized(_this));\n    _this.togglePassword = _this.togglePassword.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Kbli, [{\n    key: \"togglePassword\",\n    value: function togglePassword(v) {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal,\n          form: {\n            email: v\n          }\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var token = this.props.token;\n      this.props.checkToken(token.token);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          isAuthenticated = _this$props.isAuthenticated,\n          level = _this$props.level;\n\n      if (isAuthenticated) {\n        fetchingDataAPI('kbli').then(function (result) {\n          var json = [],\n              ObjectLeng = 0,\n              indexObject = [],\n              indexWithMaxValue = 0,\n              sop = {},\n              leng = 0,\n              objectWithMaxProps = [];\n          var emptyBracket = result.map(function (key) {\n            var toStringLevel = \"\".concat(key.level_1).concat(key.level_2).concat(key.level_3).concat(key.level_4).concat(key.level_5);\n            var toStringSeparate = toRomawiString(toStringLevel);\n            return Object.assign(key, {\n              labels: toStringSeparate\n            });\n          });\n          result.map(function (key, index) {\n            json = JSON.parse(key.price);\n            json.map(function (k) {\n              var _Object$assign;\n\n              return Object.assign(sop, (_Object$assign = {}, _defineProperty(_Object$assign, 'max_price_' + k.year, k.max_price), _defineProperty(_Object$assign, 'min_price_' + k.year, k.min_price), _Object$assign));\n            });\n\n            if (ObjectLeng >= Object.keys(sop).length) {\n              leng = ObjectLeng;\n            } else {\n              indexWithMaxValue = index;\n              objectWithMaxProps = Object.keys(sop);\n              leng = Object.keys(sop).length;\n            }\n\n            ObjectLeng = leng;\n            return Object.assign(emptyBracket[index], sop);\n          });\n          indexObject = Object.keys(emptyBracket[indexWithMaxValue]).splice(0, 8);\n          indexObject.splice(1, 0, \"labels\");\n          indexObject.splice(2, 5);\n          return {\n            emptyBracket: emptyBracket,\n            indexObject: indexObject,\n            objectWithMaxProps: objectWithMaxProps\n          };\n        }).then(function (res) {\n          var selectedOptionValue = res.objectWithMaxProps.map(function (k, i) {\n            return {\n              value: k,\n              label: k\n            };\n          });\n          var tableComponent = res.indexObject;\n\n          _this2.setState({\n            data: res.emptyBracket,\n            tableComponent: tableComponent,\n            level: level,\n            selectedOptionValue: selectedOptionValue,\n            objectWithMaxProps: res.objectWithMaxProps\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          cellEditProp = _this$state.cellEditProp,\n          data = _this$state.data,\n          postData = _this$state.postData,\n          tableComponent = _this$state.tableComponent,\n          selectedOption = _this$state.selectedOption,\n          selectedOptionValue = _this$state.selectedOptionValue;\n      var selectRowProp = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        showOnlySelected: true,\n        onlyUnselectVisible: true,\n        columnWidth: '60px',\n        bgColor: 'lightblue'\n      };\n      var options = {\n        paginationShowsTotal: this.renderShowsTotal,\n        exportCSVBtn: this.createCustomExportCSV,\n        showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n        onDeleteRow: this.onDeleteCell,\n        onRowClick: function onRowClick(row, columnIndex, rowIndex, e) {// if(columnIndex === 3){\n          //     alert(`Kamu menekan sekali baris dengan Device ID: ${row.email} ,${columnIndex},${rowIndex}`);\n          // }\n        }\n      };\n\n      if (!this.props.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.isAuthenticated && this.props.level !== 1) {\n        return React.createElement(Redirect, {\n          to: \"/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, postData.isFetching && React.createElement(Alert, {\n        color: postData.status,\n        isOpen: this.state.visible,\n        toggle: this.onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, postData.notification), React.createElement(Row, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-info pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), \"Kbli List\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        wdith: \"40%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: selectedOption,\n        onChange: this.handleChangeSelectOpt,\n        options: selectedOptionValue,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })), React.createElement(BootstrapTable, {\n        data: data,\n        remote: this.remote,\n        selectRow: selectRowProp,\n        cellEdit: cellEditProp,\n        pagination: true,\n        scrollTop: 'Bottom',\n        hover: true,\n        condensed: true,\n        striped: true,\n        exportCSV: true,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        options: options,\n        deleteRow: true,\n        width: \"100%\",\n        keyField: \"id_row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, tableComponent.map(function (column, index) {\n        return React.createElement(TableHeaderColumn, {\n          key: index,\n          ref: column,\n          dataField: column,\n          filter: {\n            type: 'TextFilter'\n          },\n          headerAlign: \"center\",\n          dataAlign: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, column);\n      })))))));\n    }\n  }]);\n\n  return Kbli;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.isAuthenticated,\n    token: state.token,\n    level: state.user.level\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkToken: function checkToken(values) {\n      return dispatch(actionCheckExpired(values));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Kbli);","map":{"version":3,"sources":["/home/development/Documents/JunkProc/kbli-react/src/views/Kbli/Kbli.js"],"names":["React","Component","Card","CardBody","CardHeader","Col","Row","Alert","Select","BootstrapTable","TableHeaderColumn","connect","fetchingDataAPI","putDataAPI","deleteData","postingDataAPI","toRomawiString","actionCheckExpired","Redirect","Kbli","props","handleChangeSelectOpt","selectedOption","tableComponent","state","toDefaultvalue","slice","map","key","push","value","setState","onDeleteCell","row","k","i","data","id","then","result","catch","err","console","log","setTimeout","postData","isFetching","status","notification","onAfterSaveCell","cellName","cellValue","invalidJobStatus","cell","jobStatusValidator","arr","includes","parseInt","alert","onDismiss","visible","labelCal","modal","token","level","objectWithMaxProps","selectedOptionValue","form","password","re_password","email","cellEditProp","mode","blurToSave","afterSaveCell","bind","togglePassword","v","prevState","checkToken","isAuthenticated","json","ObjectLeng","indexObject","indexWithMaxValue","sop","leng","emptyBracket","toStringLevel","level_1","level_2","level_3","level_4","level_5","toStringSeparate","Object","assign","labels","index","JSON","parse","price","year","max_price","min_price","keys","length","splice","res","label","selectRowProp","clickToSelect","showOnlySelected","onlyUnselectVisible","columnWidth","bgColor","options","paginationShowsTotal","renderShowsTotal","exportCSVBtn","createCustomExportCSV","showSelectedOnlyBtn","ShowSelectedOnlyButton","onDeleteRow","onRowClick","columnIndex","rowIndex","e","remote","isExpandableRow","expandComponent","column","type","mapStateToProps","user","mapDispatchToProps","dispatch","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row , Alert} from 'reactstrap';\nimport Select from 'react-select';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport { connect } from 'react-redux';\nimport { fetchingDataAPI , putDataAPI , deleteData , postingDataAPI } from '../../utils/AxiosMethod';\nimport { toRomawiString } from '../../utils/Helper';\nimport { actionCheckExpired } from '../../utils/Action';\nimport { Redirect } from 'react-router-dom';\n\nclass Kbli extends Component {\n constructor(props) {\n   super(props);\n   this.state = {\n        data : [],\n        tableComponent : [],\n        labelCal: 'Filter By Date',\n        modal: false,\n        token : '',\n        level : '',\n        objectWithMaxProps : [],\n        selectedOption: null,\n        selectedOptionValue: [],\n        form : {\n            password : '',\n            re_password : '',\n            email : '',\n          },\n        postData : {\n          notification : '',\n          isFetching : true,\n          status : '',\n          visible: true,\n        },\n        cellEditProp : {\n          mode: 'click',\n          blurToSave: true,\n          afterSaveCell: this.onAfterSaveCell // a hook for after saving cell\n        },\n   };\n   this.onAfterSaveCell = this.onAfterSaveCell.bind(this)\n   this.jobStatusValidator = this.jobStatusValidator.bind(this)\n   this.onDismiss = this.onDismiss.bind(this)\n   this.togglePassword = this.togglePassword.bind(this);\n }\n\n  handleChangeSelectOpt = selectedOption => {\n    let { tableComponent } = this.state\n    let toDefaultvalue = tableComponent.slice(0,4)\n    if(selectedOption !== null){\n      selectedOption.map(key => {\n        return toDefaultvalue.push(key.value)\n      })\n    }\n    this.setState({ selectedOption, tableComponent : toDefaultvalue });\n  };\n\n  onDeleteCell = async (row) => {\n   row.map((k,i) => {\n      return deleteData('user',{ data: {id : k} })\n      .then(result => result)\n      .catch(err => console.log(err))\n   })\n      setTimeout( () => {\n           this.setState({\n            postData : {\n              isFetching : true,\n              status : 'success',\n              notification : 'Success Delete Data'\n          }}\n      )\n      },2000)\n  }\n onAfterSaveCell = (row, cellName, cellValue) => {\n  console.log(row)\n    if(cellName !== 'email'){\n      putDataAPI('user',row).then(\n      this.setState({\n                postData : {\n                  isFetching : true,\n                  status : 'success',\n                  notification : 'Success Update Data'\n              }}\n      )).catch(err => console.log(err))\n    }\n  }\n\n invalidJobStatus = (cell, row) => {\n    return 'invalid-jobstatus-class';\n  }\n  jobStatusValidator = (value) => {\n     const arr = [0,1]\n     if(!arr.includes(parseInt(value))){\n      return alert('0 For OFF , 1 For On');\n     }\n    return true;\n  }\n  togglePassword(v) {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      form : {\n        email : v,\n      }\n    }));\n  }\n  onDismiss = () => {\n    this.setState({ postData : {visible: false} });\n  }\n componentWillUnmount(){\n\n }\n\n componentWillMount(){\n  const { token } = this.props\n  this.props.checkToken(token.token)\n}\n componentDidMount(){\n  const { isAuthenticated , level } = this.props\n  if(isAuthenticated){\n    fetchingDataAPI('kbli').then(result => {\n      let json = [], ObjectLeng = 0, \n          indexObject = [], indexWithMaxValue = 0,\n          sop = {} , leng = 0 , objectWithMaxProps = []\n      let emptyBracket = result.map(key => {\n        const toStringLevel = `${key.level_1}${key.level_2}${key.level_3}${key.level_4}${key.level_5}`\n        const toStringSeparate = toRomawiString(toStringLevel)\n        return Object.assign(key , {labels : toStringSeparate})\n      })\n\n      result.map((key,index) => {\n        json = JSON.parse(key.price)\n        json.map(k => {\n            return Object.assign(sop, {['max_price_'+k.year] : k.max_price , ['min_price_' + k.year] : k.min_price  })  \n          })\n          if(ObjectLeng >= Object.keys(sop).length){\n            leng = ObjectLeng \n          }else{\n            indexWithMaxValue = index\n            objectWithMaxProps = Object.keys(sop)\n            leng = Object.keys(sop).length\n          }\n        ObjectLeng = leng\n        return Object.assign(emptyBracket[index],sop)\n      })\n        indexObject = Object.keys(emptyBracket[indexWithMaxValue]).splice(0,8)\n        indexObject.splice( 1, 0, \"labels\")\n        indexObject.splice( 2, 5); \n      return { emptyBracket , indexObject, objectWithMaxProps}\n    })\n    .then(res => {\n      const selectedOptionValue = res.objectWithMaxProps.map((k,i) => {\n        return { value : k , label : k}\n      })\n      let tableComponent = res.indexObject\n      this.setState({\n        data : res.emptyBracket,\n        tableComponent,\n        level,\n        selectedOptionValue,\n        objectWithMaxProps : res.objectWithMaxProps\n      })\n    })\n    .catch(err => console.log(err));\n  }\n }\n\n  render() {\n    const { cellEditProp , data , \n            postData , \n            tableComponent , \n            selectedOption , selectedOptionValue\n          } = this.state\n    const selectRowProp = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      showOnlySelected: true,\n      onlyUnselectVisible: true,\n      columnWidth :'60px',\n      bgColor: 'lightblue',\n    };\n\n    const options = {\n      paginationShowsTotal: this.renderShowsTotal,\n      exportCSVBtn:this.createCustomExportCSV,\n      showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n      onDeleteRow  : this.onDeleteCell,\n      onRowClick: function(row, columnIndex, rowIndex, e){\n          // if(columnIndex === 3){\n          //     alert(`Kamu menekan sekali baris dengan Device ID: ${row.email} ,${columnIndex},${rowIndex}`);\n          // }\n        }\n    };\n\n     if (!this.props.isAuthenticated) {\n      return (<Redirect to=\"/login\" />);\n    }\n     if (this.props.isAuthenticated && this.props.level !== 1) {\n      return (<Redirect to=\"/dashboard\" />);\n    }\n\n    return (\n      \n      <div className=\"animated fadeIn\">\n      {\n        postData.isFetching && <Alert color={postData.status} isOpen={this.state.visible} toggle={this.onDismiss}>\n             {postData.notification}\n            </Alert>\n      } \n        <Row xs=\"12\" lg=\"12\">\n          <Col xs=\"12\" lg=\"12\">\n            <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>Kbli List</strong>\n              </CardHeader>\n              <CardBody>\n                <div className='form-group' wdith=\"40%\">\n                  <Select\n                    value={selectedOption}\n                    onChange={this.handleChangeSelectOpt}\n                    options={selectedOptionValue}\n                    isMulti={true}\n                  />\n                </div>\n                 {/*<button onClick={this.getSelectedRowKeys.bind(this)}>Get selected row keys</button>*/}\n                 <BootstrapTable data={ data } remote={ this.remote } selectRow={ selectRowProp } cellEdit={ cellEditProp } pagination scrollTop={ 'Bottom' } hover condensed striped exportCSV\n                   expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } options={ options } deleteRow={ true } width=\"100%\" keyField='id_row'>\n                     {\n                        tableComponent.map((column,index) => {\n                          return (<TableHeaderColumn key={index} ref={column} dataField={column} filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='left'>{column}</TableHeaderColumn>);\n                        })\n                    }\n                </BootstrapTable>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({  isAuthenticated : state.isAuthenticated, token : state.token , level : state.user.level });\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkToken : (values) => dispatch(actionCheckExpired(values)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Kbli);\n\n\n"]},"metadata":{},"sourceType":"module"}