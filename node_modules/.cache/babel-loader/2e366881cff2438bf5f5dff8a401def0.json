{"ast":null,"code":"import _classCallCheck from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/development/Documents/JunkProc/kbli-react/src/views/Users/Users.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table, Button } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport usersData from './UsersData';\nimport * as moment from 'moment/moment';\nimport { fetchingDataAPI } from '../../utils/AxiosMethod';\nvar contentData = [];\n\nvar User =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(User, _Component);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this, props));\n\n    _this.onAfterSaveCell = function (row, cellName, cellValue) {\n      var obj = {},\n          status = 'Fail';\n      obj[cellName] = cellValue;\n      patchDataAPI(\"content/update/\".concat(row.idFetch, \"/\"), obj).then(function (result) {\n        if (result.response === 200) {\n          status = 'Success';\n        }\n\n        return status;\n      }).then(function (status) {\n        alert(\"Status Update \".concat(status));\n      });\n    };\n\n    _this.jobStatusValidator = function (value) {\n      console.log(value); // const nan = isNaN(parseInt(value, 10));\n      // if (nan) {\n      //   return 'Harus Integer';\n      // }\n\n      return true;\n    };\n\n    _this.state = {\n      data: [],\n      cellEditProp: {\n        mode: 'click',\n        blurToSave: true,\n        afterSaveCell: _this.onAfterSaveCell // a hook for after saving cell\n\n      }\n    };\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetchingDataAPI('user').then(function (result) {\n        _this2.setState({\n          data: result\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          cellEditProp = _this$state.cellEditProp,\n          data = _this$state.data;\n      var selectRowProp = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        showOnlySelected: true,\n        onlyUnselectVisible: true,\n        columnWidth: '60px',\n        bgColor: 'lightblue'\n      };\n      var options = {\n        paginationShowsTotal: this.renderShowsTotal,\n        exportCSVBtn: this.createCustomExportCSV,\n        showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n        onDeleteRow: this.handleDeleteButtonClick,\n        onRowClick: function onRowClick(row, columnIndex, rowIndex, e) {\n          // alert(`Kamu menekan sekali baris dengan Device ID: ${row.id} ,${columnIndex},${rowIndex}`);\n          console.log(e);\n        }\n      };\n      var user = usersData.find(function (user) {\n        return user.id.toString() === _this3.props.match.params.id;\n      });\n      var userDetails = user ? Object.entries(user) : [['id', React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"text-muted icon-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), \" Not found\")]];\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-info pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), \"User id: \", this.props.match.params.id)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(DateRangePicker, {\n        startDate: this.state.startDateDR,\n        endDate: this.state.endDate,\n        onEvent: this.handleChangeDatePicker,\n        showWeekNumbers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \" \", this.state.labelCal)))), React.createElement(BootstrapTable, {\n        data: data,\n        remote: this.remote,\n        selectRow: selectRowProp,\n        cellEdit: cellEditProp,\n        height: \"100%\",\n        pagination: true,\n        scrollTop: 'Bottom',\n        hover: true,\n        condensed: true,\n        striped: true,\n        exportCSV: true,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        options: options,\n        deleteRow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        ref: \"id\",\n        dataField: \"id\",\n        isKey: true,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"ID\"), React.createElement(TableHeaderColumn, {\n        ref: \"first_name\",\n        dataField: \"first_name\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        invalidEditColumnClassName: this.invalidJobStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(TableHeaderColumn, {\n        ref: \"last_name\",\n        dataField: \"last_name\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        tdStyle: {\n          whiteSpace: 'normal'\n        },\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        invalidEditColumnClassName: this.invalidJobStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(TableHeaderColumn, {\n        ref: \"email\",\n        dataField: \"email\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        tdStyle: {\n          whiteSpace: 'normal'\n        },\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        invalidEditColumnClassName: this.invalidJobStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"email\"), React.createElement(TableHeaderColumn, {\n        ref: \"status\",\n        dataField: \"status\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"status\"), React.createElement(TableHeaderColumn, {\n        ref: \"created\",\n        dataField: \"created\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"createtime\")))))));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nexport default User;","map":{"version":3,"sources":["/home/development/Documents/JunkProc/kbli-react/src/views/Users/Users.js"],"names":["React","Component","Card","CardBody","CardHeader","Col","Row","Table","Button","BootstrapTable","TableHeaderColumn","DateRangePicker","usersData","moment","fetchingDataAPI","contentData","User","props","onAfterSaveCell","row","cellName","cellValue","obj","status","patchDataAPI","idFetch","then","result","response","alert","jobStatusValidator","value","console","log","state","data","cellEditProp","mode","blurToSave","afterSaveCell","setState","catch","err","selectRowProp","clickToSelect","showOnlySelected","onlyUnselectVisible","columnWidth","bgColor","options","paginationShowsTotal","renderShowsTotal","exportCSVBtn","createCustomExportCSV","showSelectedOnlyBtn","ShowSelectedOnlyButton","onDeleteRow","handleDeleteButtonClick","onRowClick","columnIndex","rowIndex","e","user","find","id","toString","match","params","userDetails","Object","entries","startDateDR","endDate","handleChangeDatePicker","onClick","labelCal","remote","isExpandableRow","expandComponent","type","validator","invalidJobStatus","whiteSpace"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table, Button } from 'reactstrap';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport usersData from './UsersData'\nimport * as moment from 'moment/moment';\nimport { fetchingDataAPI } from '../../utils/AxiosMethod';\nlet contentData = []\nclass User extends Component {\n constructor(props) {\n   super(props);\n   this.state = {\n        data : [],\n        cellEditProp : {\n          mode: 'click',\n          blurToSave: true,\n          afterSaveCell: this.onAfterSaveCell // a hook for after saving cell\n        },\n   };\n }\n\n   onAfterSaveCell = (row, cellName, cellValue) => {\n    let obj = {}, status = 'Fail'\n    obj[cellName] = cellValue\n    patchDataAPI(`content/update/${row.idFetch}/`,obj).then(result => {\n      if(result.response === 200){\n        status = 'Success'\n      }\n      return status\n    }).then(status => {\n      alert(`Status Update ${status}`)\n    })\n     \n  }\n\n  jobStatusValidator = (value) => {\n    console.log(value)\n    // const nan = isNaN(parseInt(value, 10));\n    // if (nan) {\n    //   return 'Harus Integer';\n    // }\n    return true;\n  }\n  \n componentDidMount(){\n    fetchingDataAPI('user').then(result => {\n      this.setState({\n        data : result\n      })\n    }).catch(err => console.log(err));\n }\n  render() {\n    const { cellEditProp , data } = this.state\n    const selectRowProp = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      showOnlySelected: true,\n      onlyUnselectVisible: true,\n      columnWidth :'60px',\n      bgColor: 'lightblue',\n    };\n\n    const options = {\n      paginationShowsTotal: this.renderShowsTotal,\n      exportCSVBtn:this.createCustomExportCSV,\n      showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n      onDeleteRow  : this.handleDeleteButtonClick,\n      onRowClick: function(row, columnIndex, rowIndex, e){\n        // alert(`Kamu menekan sekali baris dengan Device ID: ${row.id} ,${columnIndex},${rowIndex}`);\n        console.log(e);\n        }\n\n    };\n\n    const user = usersData.find( user => user.id.toString() === this.props.match.params.id)\n\n    const userDetails = user ? Object.entries(user) : [['id', (<span><i className=\"text-muted icon-ban\"></i> Not found</span>)]]\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\" lg=\"12\">\n            <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>User id: {this.props.match.params.id}</strong>\n              </CardHeader>\n              <CardBody>\n                 <div className='form-group'>\n                  <DateRangePicker \n                    startDate={this.state.startDateDR} \n                    endDate={this.state.endDate}\n                    onEvent={this.handleChangeDatePicker}\n                    showWeekNumbers\n                    >\n                    <Button onClick={this.onClick}>\n                      <i className=\"fa fa-calendar\"/>\n                      <span> {this.state.labelCal}</span>                          \n                    </Button>            \n                  </DateRangePicker>\n                </div>\n                 {/*<button onClick={this.getSelectedRowKeys.bind(this)}>Get selected row keys</button>*/}\n                <BootstrapTable data={ data } remote={ this.remote } selectRow={ selectRowProp } cellEdit={ cellEditProp } height='100%' pagination scrollTop={ 'Bottom' } hover condensed striped exportCSV\n                   expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } options={ options } deleteRow={ true }>\n                  <TableHeaderColumn ref='id' dataField='id' isKey={ true } dataAlign='center'>ID</TableHeaderColumn>\n                  <TableHeaderColumn ref='first_name' dataField='first_name' filter={ { type: 'TextFilter' } } headerAlign='center' editable={ { type: 'textarea' , validator: this.jobStatusValidator } } invalidEditColumnClassName={ this.invalidJobStatus }>First Name</TableHeaderColumn>\n                  <TableHeaderColumn ref='last_name' dataField='last_name' filter={ { type: 'TextFilter'} } headerAlign='center' tdStyle={ { whiteSpace: 'normal' } } editable={ { type: 'textarea' , validator: this.jobStatusValidator } } invalidEditColumnClassName={ this.invalidJobStatus }>Last Name</TableHeaderColumn>\n                  <TableHeaderColumn ref='email' dataField='email' filter={ { type: 'TextFilter' } } headerAlign='center' tdStyle={ { whiteSpace: 'normal' } } editable={ { type: 'textarea' , validator: this.jobStatusValidator } } invalidEditColumnClassName={ this.invalidJobStatus }>email</TableHeaderColumn>\n                  <TableHeaderColumn ref='status' dataField='status' filter={ { type: 'TextFilter' } } headerAlign='center'>status</TableHeaderColumn>\n                  <TableHeaderColumn ref='created' dataField='created' filter={ { type: 'TextFilter' } } headerAlign='center'>createtime</TableHeaderColumn>\n                </BootstrapTable>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}