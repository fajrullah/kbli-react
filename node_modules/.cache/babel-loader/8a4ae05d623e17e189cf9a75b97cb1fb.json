{"ast":null,"code":"import _regeneratorRuntime from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/development/Documents/JunkProc/kbli-react/src/views/Graph/Graph.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Badge, Card, CardBody, CardHeader, Col, Row, Table, Button, Alert, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport * as moment from 'moment/moment';\nimport { connect } from 'react-redux';\nimport { fetchingDataAPI, putDataAPI, deleteData, postingDataAPI } from '../../utils/AxiosMethod';\nimport { toDateTimeLocal, toDateTimeLocalDB } from '../../utils/Helper';\nimport { actionCheckExpired, deleteUser, deleteToken, setAuthenticated } from '../../utils/Action';\nimport { Redirect } from 'react-router-dom';\nimport ReactApexChart from 'react-apexcharts';\nvar contentData = [];\n\nvar CryptoJS = require(\"crypto-js\");\n\nfunction generateDayWiseTimeSeries(baseval, count, yrange) {\n  var i = 0;\n  var series = [];\n\n  while (i < count) {\n    var x = baseval;\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    series.push([x, y]);\n    baseval += 86400000;\n    i++;\n  }\n\n  return series;\n} // The global window.Apex variable below can be used to set common options for all charts on the page\n\n\nvar Apex = {\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'straight'\n  },\n  toolbar: {\n    tools: {\n      selection: false\n    }\n  },\n  markers: {\n    size: 6,\n    hover: {\n      size: 10\n    }\n  },\n  tooltip: {\n    followCursor: false,\n    theme: 'dark',\n    x: {\n      show: false\n    },\n    marker: {\n      show: false\n    },\n    y: {\n      title: {\n        formatter: function formatter() {\n          return '';\n        }\n      }\n    }\n  },\n  grid: {\n    clipMarkers: false\n  },\n  yaxis: {\n    tickAmount: 2\n  },\n  xaxis: {\n    type: 'datetime'\n  }\n};\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this, props));\n\n    _this.emailType = function (cell) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        color: \"warning\",\n        onClick: function onClick() {\n          return _this.togglePassword(cell);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), cell);\n    };\n\n    _this.statusType = function (cell) {\n      if (cell == 0) {\n        return React.createElement(Badge, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Off\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"On\");\n      }\n    };\n\n    _this.levelType = function (cell) {\n      if (cell == 0) {\n        return React.createElement(Badge, {\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \"User\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Admin\");\n      }\n    };\n\n    _this.createdType = function (cell) {\n      return toDateTimeLocal(cell);\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var form = _this.state.form;\n      var re_password = form.re_password,\n          password = form.password,\n          email = form.email;\n\n      if (re_password === password && password !== undefined && password.length >= 6) {\n        putDataAPI('password', {\n          password: password,\n          email: email\n        }).then(function (result) {\n          if (result.response === 200) {\n            _this.setState({\n              postData: {\n                isFetching: true,\n                status: 'success',\n                notification: \"Success Generate New Password\"\n              }\n            });\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      } else {\n        _this.setState({\n          postData: {\n            isFetching: true,\n            status: 'danger',\n            notification: \"Password not Match / at Least 6 Character\"\n          }\n        });\n      }\n    };\n\n    _this.handleChange = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.onDeleteCell =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(row) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                row.map(function (k, i) {\n                  deleteData('user', {\n                    data: {\n                      id: k\n                    }\n                  }).then(function (result) {\n                    return result;\n                  }).catch(function (err) {\n                    return console.log(err);\n                  });\n                });\n                setTimeout(function () {\n                  _this.setState({\n                    postData: {\n                      isFetching: true,\n                      status: 'success',\n                      notification: 'Success Delete Data'\n                    }\n                  });\n                }, 2000);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onChangeDatePicker = function (event, picker) {\n      var dataTime = {\n        start: toDateTimeLocalDB(picker.startDate._d),\n        end: toDateTimeLocalDB(picker.endDate._d)\n      };\n\n      if (event.handleObj.type === 'apply') {\n        postingDataAPI('/user/createtime', dataTime).then(function (res) {\n          return res.data;\n        }).then(function (data) {\n          _this.setState({\n            data: data,\n            postData: {\n              isFetching: true,\n              status: 'info',\n              notification: \"Success Filtered Data From \".concat(dataTime.start, \" to \").concat(dataTime.end)\n            },\n            labelCal: \"\".concat(dataTime.start, \" s/d \").concat(dataTime.end)\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.onAfterSaveCell = function (row, cellName, cellValue) {\n      if (cellName !== 'email') {\n        putDataAPI('user', row).then(_this.setState({\n          postData: {\n            isFetching: true,\n            status: 'success',\n            notification: 'Success Update Data'\n          }\n        })).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.invalidJobStatus = function (cell, row) {\n      return 'invalid-jobstatus-class';\n    };\n\n    _this.jobStatusValidator = function (value) {\n      var arr = [0, 1];\n\n      if (!arr.includes(parseInt(value))) {\n        return alert('0 For OFF , 1 For On');\n      }\n\n      return true;\n    };\n\n    _this.onDismiss = function () {\n      _this.setState({\n        postData: {\n          visible: false\n        }\n      });\n    };\n\n    _this.state = {\n      series1: [{\n        data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n          min: 10,\n          max: 60\n        })\n      }],\n      series2: [{\n        data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n          min: 10,\n          max: 30\n        })\n      }],\n      series3: [{\n        data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n          min: 10,\n          max: 90\n        })\n      }],\n      chartOptionsLine1: {\n        chart: {\n          id: 'fb',\n          group: 'social'\n        },\n        colors: ['#008FFB']\n      },\n      chartOptionsLine2: {\n        chart: {\n          id: 'tw',\n          group: 'social'\n        },\n        colors: ['#546E7A']\n      },\n      chartOptionsArea: {\n        chart: {\n          id: 'yt',\n          group: 'social'\n        },\n        colors: ['#00E396']\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"togglePassword\",\n    value: function togglePassword(v) {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal,\n          form: {\n            email: v\n          }\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          token = _this$props.token,\n          isAuthenticated = _this$props.isAuthenticated;\n      this.props.checkToken(token.token);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          isAuthenticated = _this$props2.isAuthenticated,\n          level = _this$props2.level;\n\n      if (isAuthenticated) {\n        fetchingDataAPI('user').then(function (result) {\n          _this2.setState({\n            data: result,\n            level: level\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          cellEditProp = _this$state.cellEditProp,\n          data = _this$state.data,\n          postData = _this$state.postData,\n          form = _this$state.form;\n      var email = form.email,\n          password = form.password,\n          re_password = form.re_password;\n      var selectRowProp = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        showOnlySelected: true,\n        onlyUnselectVisible: true,\n        columnWidth: '60px',\n        bgColor: 'lightblue'\n      };\n      var options = {\n        paginationShowsTotal: this.renderShowsTotal,\n        exportCSVBtn: this.createCustomExportCSV,\n        showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n        onDeleteRow: this.onDeleteCell,\n        onRowClick: function onRowClick(row, columnIndex, rowIndex, e) {// if(columnIndex === 3){\n          //     alert(`Kamu menekan sekali baris dengan Device ID: ${row.email} ,${columnIndex},${rowIndex}`);\n          // }\n        }\n      };\n\n      if (!this.props.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.isAuthenticated && this.props.level !== 1) {\n        return React.createElement(Redirect, {\n          to: \"/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        id: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chart-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(ReactApexChart, {\n        type: \"line\",\n        height: \"160\",\n        options: this.state.chartOptionsLine1,\n        series: this.state.series1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"chart-line2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(ReactApexChart, {\n        type: \"line\",\n        height: \"160\",\n        options: this.state.chartOptionsLine2,\n        series: this.state.series2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(ReactApexChart, {\n        type: \"area\",\n        height: \"160\",\n        options: this.state.chartOptionsArea,\n        series: this.state.series3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.isAuthenticated,\n    token: state.token,\n    level: state.user.level\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkToken: function checkToken(values) {\n      return dispatch(actionCheckExpired(values));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Graph);","map":{"version":3,"sources":["/home/development/Documents/JunkProc/kbli-react/src/views/Graph/Graph.js"],"names":["React","Component","Form","Input","Badge","Card","CardBody","CardHeader","Col","Row","Table","Button","Alert","Modal","ModalHeader","ModalBody","ModalFooter","InputGroup","InputGroupAddon","InputGroupText","BootstrapTable","TableHeaderColumn","DateRangePicker","moment","connect","fetchingDataAPI","putDataAPI","deleteData","postingDataAPI","toDateTimeLocal","toDateTimeLocalDB","actionCheckExpired","deleteUser","deleteToken","setAuthenticated","Redirect","ReactApexChart","contentData","CryptoJS","require","generateDayWiseTimeSeries","baseval","count","yrange","i","series","x","y","Math","floor","random","max","min","push","Apex","dataLabels","enabled","stroke","curve","toolbar","tools","selection","markers","size","hover","tooltip","followCursor","theme","show","marker","title","formatter","grid","clipMarkers","yaxis","tickAmount","xaxis","type","Graph","props","emailType","cell","togglePassword","statusType","levelType","createdType","handleSubmit","e","preventDefault","form","state","re_password","password","email","undefined","length","then","result","response","setState","postData","isFetching","status","notification","catch","err","console","log","handleChange","target","name","value","onDeleteCell","row","map","k","data","id","setTimeout","onChangeDatePicker","event","picker","dataTime","start","startDate","_d","end","endDate","handleObj","res","labelCal","onAfterSaveCell","cellName","cellValue","invalidJobStatus","jobStatusValidator","arr","includes","parseInt","alert","onDismiss","visible","series1","Date","getTime","series2","series3","chartOptionsLine1","chart","group","colors","chartOptionsLine2","chartOptionsArea","v","prevState","modal","token","isAuthenticated","checkToken","level","cellEditProp","selectRowProp","mode","clickToSelect","showOnlySelected","onlyUnselectVisible","columnWidth","bgColor","options","paginationShowsTotal","renderShowsTotal","exportCSVBtn","createCustomExportCSV","showSelectedOnlyBtn","ShowSelectedOnlyButton","onDeleteRow","onRowClick","columnIndex","rowIndex","mapStateToProps","user","mapDispatchToProps","dispatch","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Badge, Card, CardBody, CardHeader, Col, Row, Table, Button , Alert, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup , InputGroupAddon , InputGroupText } from 'reactstrap';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport * as moment from 'moment/moment';\nimport { connect } from 'react-redux';\nimport { fetchingDataAPI , putDataAPI , deleteData , postingDataAPI } from '../../utils/AxiosMethod';\nimport { toDateTimeLocal, toDateTimeLocalDB } from '../../utils/Helper';\nimport { actionCheckExpired , deleteUser, deleteToken, setAuthenticated  } from '../../utils/Action';\nimport { Redirect } from 'react-router-dom';\nimport ReactApexChart from 'react-apexcharts'\nlet contentData = []\nconst CryptoJS = require(\"crypto-js\");\n  function generateDayWiseTimeSeries(baseval, count, yrange) {\n      var i = 0;\n      var series = [];\n      while (i < count) {\n        var x = baseval;\n        var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n        series.push([x, y]);\n        baseval += 86400000;\n        i++;\n      }\n      return series;\n    }\n\n    // The global window.Apex variable below can be used to set common options for all charts on the page\nconst Apex = {\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'straight'\n      },\n      toolbar: {\n        tools: {\n          selection: false\n        }\n      },\n      markers: {\n        size: 6,\n        hover: {\n          size: 10\n        }\n      },\n      tooltip: {\n        followCursor: false,\n        theme: 'dark',\n        x: {\n          show: false\n        },\n        marker: {\n          show: false\n        },\n        y: {\n          title: {\n            formatter: function () {\n              return ''\n            }\n          }\n        }\n      },\n      grid: {\n        clipMarkers: false\n      },\n      yaxis: {\n        tickAmount: 2\n      },\n      xaxis: {\n        type: 'datetime'\n      },\n    }\nclass Graph extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        series1: [{\n          data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n            min: 10,\n            max: 60\n          })\n        }],\n        series2: [{\n          data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n            min: 10,\n            max: 30\n          })\n        }],\n        series3: [{\n          data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n            min: 10,\n            max: 90\n          })\n        }],\n        chartOptionsLine1: {\n          chart: {\n            id: 'fb',\n            group: 'social',\n          },\n          colors: ['#008FFB'],\n        },\n        chartOptionsLine2: {\n          chart: {\n            id: 'tw',\n            group: 'social',\n          },\n          colors: ['#546E7A'],\n\n        },\n        chartOptionsArea: {\n          chart: {\n            id: 'yt',\n            group: 'social',\n          },\n          colors: ['#00E396'],\n\n        }\n      }\n    }\n\n\n  emailType = (cell) => {\n    return (<div><Badge color=\"warning\" onClick={ () => this.togglePassword(cell)}><i className=\"icon-lock\"/></Badge>{cell}</div>)\n  }\n  statusType = (cell) => {\n    if(cell == 0){\n      return (<Badge color=\"danger\">Off</Badge>)\n    }else{\n      return (<Badge color=\"success\">On</Badge>)\n    }\n  }\n  levelType = (cell) => {\n    if(cell == 0){\n      return (<Badge color=\"secondary\">User</Badge>)\n    }else{\n      return (<Badge color=\"primary\">Admin</Badge>)\n    }\n  }\n  createdType = (cell) => {\n    return toDateTimeLocal(cell)\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const { form } = this.state\n    const { re_password , password , email } = form\n    if(re_password === password && password !== undefined && password.length >= 6){\n    putDataAPI('password',{password, email}).then(result => {\n      if(result.response === 200){\n        this.setState({\n                 postData : {\n                      isFetching : true,\n                      status : 'success',\n                      notification : `Success Generate New Password`\n                  }\n              })\n      }\n    }).catch( err => console.log(err))          \n        }else{\n              this.setState({\n                 postData : {\n                      isFetching : true,\n                      status : 'danger',\n                      notification : `Password not Match / at Least 6 Character`\n                  }\n              })\n        }\n  }\n  handleChange = (e) => {\n    e.preventDefault()\n    this.setState({\n      form :{\n        ...this.state.form,\n        [e.target.name] : e.target.value\n      }\n    })\n  }\n  onDeleteCell = async (row) => {\n   row.map((k,i) => {\n      deleteData('user',{ data: {id : k} })\n      .then(result => result)\n      .catch(err => console.log(err))\n   })\n      setTimeout( () => {\n           this.setState({\n            postData : {\n              isFetching : true,\n              status : 'success',\n              notification : 'Success Delete Data'\n          }}\n      )\n      },2000)\n  }\n  onChangeDatePicker = (event, picker) =>{\n      const dataTime = {\n          start : toDateTimeLocalDB(picker.startDate._d),\n          end : toDateTimeLocalDB(picker.endDate._d)\n      }\n      if(event.handleObj.type === 'apply'){\n        postingDataAPI('/user/createtime',dataTime).then(res => {\n          return res.data\n        })\n        .then(data => {\n          this.setState({data,\n                postData : {\n                  isFetching : true,\n                  status : 'info',\n                  notification : `Success Filtered Data From ${dataTime.start} to ${dataTime.end}`\n              },\n              labelCal: (`${dataTime.start} s/d ${dataTime.end}`)\n          })\n        })\n        .catch(err => console.log(err))\n    }\n  }\n onAfterSaveCell = (row, cellName, cellValue) => {\n\n    if(cellName !== 'email'){\n      putDataAPI('user',row).then(\n      this.setState({\n                postData : {\n                  isFetching : true,\n                  status : 'success',\n                  notification : 'Success Update Data'\n              }}\n      )).catch(err => console.log(err))\n    }\n  }\n  invalidJobStatus = (cell, row) => {\n    return 'invalid-jobstatus-class';\n  }\n  jobStatusValidator = (value) => {\n     const arr = [0,1]\n     if(!arr.includes(parseInt(value))){\n      return alert('0 For OFF , 1 For On');\n     }\n    return true;\n  }\n  togglePassword(v) {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      form : {\n        email : v,\n      }\n    }));\n  }\n  onDismiss = () => {\n    this.setState({ postData : {visible: false} });\n  }\n componentWillUnmount(){\n\n }\n\n componentWillMount(){\n  const { token , isAuthenticated } = this.props\n  this.props.checkToken(token.token)\n}\n componentDidMount(){\n  const { isAuthenticated , level } = this.props\n  if(isAuthenticated){\n    fetchingDataAPI('user').then(result => {\n      this.setState({\n        data : result,\n        level : level\n      })\n    }).catch(err => console.log(err));\n  }\n }\n  render() {\n    const { cellEditProp , data , postData , form  } = this.state\n    const { email , password , re_password } = form\n    const selectRowProp = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      showOnlySelected: true,\n      onlyUnselectVisible: true,\n      columnWidth :'60px',\n      bgColor: 'lightblue',\n    };\n\n    const options = {\n      paginationShowsTotal: this.renderShowsTotal,\n      exportCSVBtn:this.createCustomExportCSV,\n      showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n      onDeleteRow  : this.onDeleteCell,\n      onRowClick: function(row, columnIndex, rowIndex, e){\n          // if(columnIndex === 3){\n          //     alert(`Kamu menekan sekali baris dengan Device ID: ${row.email} ,${columnIndex},${rowIndex}`);\n          // }\n        }\n    };\n\n     if (!this.props.isAuthenticated) {\n      return (<Redirect to=\"/login\" />);\n    }\n     if (this.props.isAuthenticated && this.props.level !== 1) {\n      return (<Redirect to=\"/dashboard\" />);\n    }\n    return (\n         <div id=\"wrapper\">\n          <div id=\"chart-line\">\n            <ReactApexChart type=\"line\" height=\"160\"  options={this.state.chartOptionsLine1} series={this.state.series1}/>\n          </div>\n\n          <div id=\"chart-line2\">\n            <ReactApexChart type=\"line\" height=\"160\"  options={this.state.chartOptionsLine2} series={this.state.series2}/>\n          </div>\n\n          <div id=\"chart-area\">\n            <ReactApexChart type=\"area\" height=\"160\"  options={this.state.chartOptionsArea} series={this.state.series3}/>\n          </div>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({  isAuthenticated : state.isAuthenticated, token : state.token , level : state.user.level });\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkToken : (values) => dispatch(actionCheckExpired(values)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Graph);\n\n\n"]},"metadata":{},"sourceType":"module"}