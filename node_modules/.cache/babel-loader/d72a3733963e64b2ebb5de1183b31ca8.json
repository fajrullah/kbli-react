{"ast":null,"code":"import _regeneratorRuntime from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/development/Documents/JunkProc/kbli-react/src/views/Users/Users.js\";\nimport React, { Component } from 'react';\nimport { Badge, Card, CardBody, CardHeader, Col, Row, Table, Button, Alert } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport usersData from './UsersData';\nimport * as moment from 'moment/moment';\nimport { fetchingDataAPI, putDataAPI } from '../../utils/AxiosMethod';\nvar contentData = [];\n\nvar User =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(User, _Component);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this, props));\n\n    _this.onDeleteCell =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(row) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                row.map(function (k, i) {\n                  console.log('ssss', i);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onAfterSaveCell = function (row, cellName, cellValue) {\n      var id = row.id,\n          status = row.status;\n      putDataAPI('user', row).then(_this.setState({\n        postData: {\n          isFetching: true,\n          status: 'success',\n          notification: 'Success Update Data'\n        }\n      })).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.invalidJobStatus = function (cell, row) {\n      return 'invalid-jobstatus-class';\n    };\n\n    _this.jobStatusValidator = function (value) {\n      var arr = [0, 1];\n\n      if (!arr.includes(parseInt(value))) {\n        return alert('0 For OFF , 1 For On');\n      }\n\n      return true;\n    };\n\n    _this.onDismiss = function () {\n      _this.setState({\n        postData: {\n          visible: false\n        }\n      });\n    };\n\n    _this.state = {\n      data: [],\n      postData: {\n        notification: '',\n        isFetching: true,\n        status: '',\n        visible: true\n      },\n      cellEditProp: {\n        mode: 'click',\n        blurToSave: true,\n        afterSaveCell: _this.onAfterSaveCell // a hook for after saving cell\n\n      }\n    };\n    _this.onAfterSaveCell = _this.onAfterSaveCell.bind(_assertThisInitialized(_this));\n    _this.jobStatusValidator = _this.jobStatusValidator.bind(_assertThisInitialized(_this));\n    _this.statusType = _this.statusType.bind(_assertThisInitialized(_this));\n    _this.levelType = _this.levelType.bind(_assertThisInitialized(_this));\n    _this.onDismiss = _this.onDismiss.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"statusType\",\n    value: function statusType(cell) {\n      if (cell == 0) {\n        return React.createElement(Badge, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Off\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"On\");\n      }\n    }\n  }, {\n    key: \"levelType\",\n    value: function levelType(cell) {\n      if (cell == 0) {\n        return React.createElement(Badge, {\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"User\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Admin\");\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetchingDataAPI('user').then(function (result) {\n        _this2.setState({\n          data: result\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          cellEditProp = _this$state.cellEditProp,\n          data = _this$state.data,\n          postData = _this$state.postData;\n      var selectRowProp = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        showOnlySelected: true,\n        onlyUnselectVisible: true,\n        columnWidth: '60px',\n        bgColor: 'lightblue'\n      };\n      var options = {\n        paginationShowsTotal: this.renderShowsTotal,\n        exportCSVBtn: this.createCustomExportCSV,\n        showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n        onDeleteRow: this.onDeleteCell,\n        onRowClick: function onRowClick(row, columnIndex, rowIndex, e) {// alert(`Kamu menekan sekali baris dengan Device ID: ${row.id} ,${columnIndex},${rowIndex}`);\n        }\n      };\n      var user = usersData.find(function (user) {\n        return user.id.toString() === _this3.props.match.params.id;\n      });\n      var userDetails = user ? Object.entries(user) : [['id', React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"text-muted icon-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), \" Not found\")]];\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, postData.isFetching && React.createElement(Alert, {\n        color: postData.status,\n        isOpen: this.state.visible,\n        toggle: this.onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, postData.notification), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-info pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), \"User List\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(DateRangePicker, {\n        startDate: this.state.startDateDR,\n        endDate: this.state.endDate,\n        onEvent: this.handleChangeDatePicker,\n        showWeekNumbers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \" \", this.state.labelCal)))), React.createElement(BootstrapTable, {\n        data: data,\n        remote: this.remote,\n        selectRow: selectRowProp,\n        cellEdit: cellEditProp,\n        pagination: true,\n        scrollTop: 'Bottom',\n        hover: true,\n        condensed: true,\n        striped: true,\n        exportCSV: true,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        options: options,\n        deleteRow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        ref: \"id\",\n        dataField: \"id\",\n        isKey: true,\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        width: \"100px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"ID\"), React.createElement(TableHeaderColumn, {\n        ref: \"first_name\",\n        dataField: \"first_name\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(TableHeaderColumn, {\n        ref: \"last_name\",\n        dataField: \"last_name\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(TableHeaderColumn, {\n        ref: \"email\",\n        dataField: \"email\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Email\"), React.createElement(TableHeaderColumn, {\n        ref: \"status\",\n        width: \"150px\",\n        filter: {\n          type: 'TextFilter'\n        },\n        dataField: \"status\",\n        dataFormat: this.statusType,\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Status\"), React.createElement(TableHeaderColumn, {\n        ref: \"level\",\n        width: \"150px\",\n        dataField: \"level\",\n        dataFormat: this.levelType,\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Level\")))))));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nexport default User;","map":{"version":3,"sources":["/home/development/Documents/JunkProc/kbli-react/src/views/Users/Users.js"],"names":["React","Component","Badge","Card","CardBody","CardHeader","Col","Row","Table","Button","Alert","BootstrapTable","TableHeaderColumn","DateRangePicker","usersData","moment","fetchingDataAPI","putDataAPI","contentData","User","props","onDeleteCell","row","map","k","i","console","log","onAfterSaveCell","cellName","cellValue","id","status","then","setState","postData","isFetching","notification","catch","err","invalidJobStatus","cell","jobStatusValidator","value","arr","includes","parseInt","alert","onDismiss","visible","state","data","cellEditProp","mode","blurToSave","afterSaveCell","bind","statusType","levelType","result","selectRowProp","clickToSelect","showOnlySelected","onlyUnselectVisible","columnWidth","bgColor","options","paginationShowsTotal","renderShowsTotal","exportCSVBtn","createCustomExportCSV","showSelectedOnlyBtn","ShowSelectedOnlyButton","onDeleteRow","onRowClick","columnIndex","rowIndex","e","user","find","toString","match","params","userDetails","Object","entries","startDateDR","endDate","handleChangeDatePicker","onClick","labelCal","remote","isExpandableRow","expandComponent","type","validator"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Badge, Card, CardBody, CardHeader, Col, Row, Table, Button , Alert } from 'reactstrap';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport usersData from './UsersData'\nimport * as moment from 'moment/moment';\nimport { fetchingDataAPI , putDataAPI } from '../../utils/AxiosMethod';\nlet contentData = []\nclass User extends Component {\n constructor(props) {\n   super(props);\n   this.state = {\n        data : [],\n        postData : {\n          notification : '',\n          isFetching : true,\n          status : '',\n          visible: true,\n        },\n        cellEditProp : {\n          mode: 'click',\n          blurToSave: true,\n          afterSaveCell: this.onAfterSaveCell // a hook for after saving cell\n        },\n   };\n   this.onAfterSaveCell = this.onAfterSaveCell.bind(this)\n   this.jobStatusValidator = this.jobStatusValidator.bind(this)\n   this.statusType = this.statusType.bind(this)\n   this.levelType = this.levelType.bind(this)\n   this.onDismiss = this.onDismiss.bind(this)\n }\n  statusType(cell) {\n    if(cell == 0){\n      return (<Badge color=\"danger\">Off</Badge>)\n    }else{\n      return (<Badge color=\"success\">On</Badge>)\n    }\n  }\n  levelType(cell) {\n    if(cell == 0){\n      return (<Badge color=\"secondary\">User</Badge>)\n    }else{\n      return (<Badge color=\"primary\">Admin</Badge>)\n    }\n  }\n  onDeleteCell = async (row) => {\n   row.map((k,i)=>{\n      console.log('ssss',i)\n   })\n  }\n onAfterSaveCell = (row, cellName, cellValue) => {\n    const { id , status } = row\n    putDataAPI('user',row).then(\n    this.setState({\n          postData : {\n                isFetching : true,\n                status : 'success',\n                notification : 'Success Update Data'\n              }}\n          )).catch(err => console.log(err))\n  }\n  invalidJobStatus = (cell, row) => {\n    return 'invalid-jobstatus-class';\n  }\n  jobStatusValidator = (value) => {\n     const arr = [0,1]\n     if(!arr.includes(parseInt(value))){\n      return alert('0 For OFF , 1 For On');\n     }\n    return true;\n  }\n  onDismiss = () => {\n    this.setState({ postData : {visible: false} });\n  }\n componentDidMount(){\n    fetchingDataAPI('user').then(result => {\n      this.setState({\n        data : result\n      })\n    }).catch(err => console.log(err));\n }\n  render() {\n    const { cellEditProp , data , postData } = this.state\n    const selectRowProp = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      showOnlySelected: true,\n      onlyUnselectVisible: true,\n      columnWidth :'60px',\n      bgColor: 'lightblue',\n    };\n\n    const options = {\n      paginationShowsTotal: this.renderShowsTotal,\n      exportCSVBtn:this.createCustomExportCSV,\n      showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n      onDeleteRow  : this.onDeleteCell,\n      onRowClick: function(row, columnIndex, rowIndex, e){\n        // alert(`Kamu menekan sekali baris dengan Device ID: ${row.id} ,${columnIndex},${rowIndex}`);\n        }\n\n    };\n\n    const user = usersData.find( user => user.id.toString() === this.props.match.params.id)\n\n    const userDetails = user ? Object.entries(user) : [['id', (<span><i className=\"text-muted icon-ban\"></i> Not found</span>)]]\n\n    return (\n      <div className=\"animated fadeIn\">\n      {\n        postData.isFetching && <Alert color={postData.status} isOpen={this.state.visible} toggle={this.onDismiss}>\n             {postData.notification}\n            </Alert>\n      }\n\n        <Row>\n          <Col xs=\"12\" lg=\"12\">\n            <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>User List</strong>\n              </CardHeader>\n              <CardBody>\n                 <div className='form-group'>\n                  <DateRangePicker \n                    startDate={this.state.startDateDR} \n                    endDate={this.state.endDate}\n                    onEvent={this.handleChangeDatePicker}\n                    showWeekNumbers\n                    >\n                    <Button onClick={this.onClick}>\n                      <i className=\"fa fa-calendar\"/>\n                      <span> {this.state.labelCal}</span>                          \n                    </Button>            \n                  </DateRangePicker>\n                </div>\n                 {/*<button onClick={this.getSelectedRowKeys.bind(this)}>Get selected row keys</button>*/}\n                 <BootstrapTable data={ data } remote={ this.remote } selectRow={ selectRowProp } cellEdit={ cellEditProp } pagination scrollTop={ 'Bottom' } hover condensed striped exportCSV\n                   expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } options={ options } deleteRow={ true }>\n                  <TableHeaderColumn ref='id' dataField='id' isKey={ true } headerAlign='center'  dataAlign='center' width=\"100px\">ID</TableHeaderColumn>\n                  <TableHeaderColumn ref='first_name' dataField='first_name' filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='center'>First Name</TableHeaderColumn>\n                  <TableHeaderColumn ref='last_name' dataField='last_name' filter={ { type: 'TextFilter'} } headerAlign='center' dataAlign='center'>Last Name</TableHeaderColumn>\n                  <TableHeaderColumn ref='email' dataField='email' filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='center'>Email</TableHeaderColumn>\n                  <TableHeaderColumn ref='status' width=\"150px\" filter={ { type: 'TextFilter' } } dataField='status' dataFormat={ this.statusType } headerAlign='center' dataAlign='center' editable={ { type: 'textarea' , validator: this.jobStatusValidator } }>Status</TableHeaderColumn>\n                  <TableHeaderColumn ref='level' width=\"150px\" dataField='level' dataFormat={ this.levelType } filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='center' editable={ { type: 'textarea' , validator: this.jobStatusValidator } } >Level</TableHeaderColumn>\n                </BootstrapTable>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}