{"ast":null,"code":"import _classCallCheck from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/development/Documents/JunkProc/kbli-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/development/Documents/JunkProc/kbli-react/src/views/Users/Users.js\";\nimport React, { Component } from 'react';\nimport { Badge, Card, CardBody, CardHeader, Col, Row, Table, Button } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport usersData from './UsersData';\nimport * as moment from 'moment/moment';\nimport { fetchingDataAPI } from '../../utils/AxiosMethod';\nvar contentData = [];\n\nvar User =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(User, _Component);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this, props));\n\n    _this.onAfterSaveCell = function (row, cellName, cellValue) {\n      console.log(cellName, cellValue);\n    };\n\n    _this.invalidJobStatus = function (cell, row) {\n      return 'invalid-jobstatus-class';\n    };\n\n    _this.jobStatusValidator = function (value) {\n      var arr = [0, 1];\n\n      if (!arr.includes(parseInt(value))) {\n        return alert('0 For OFF , 1 For On');\n      }\n\n      return true;\n    };\n\n    _this.state = {\n      data: [],\n      cellEditProp: {\n        mode: 'click',\n        blurToSave: true,\n        afterSaveCell: _this.onAfterSaveCell // a hook for after saving cell\n\n      }\n    };\n    _this.onAfterSaveCell = _this.onAfterSaveCell.bind(_assertThisInitialized(_this));\n    _this.jobStatusValidator = _this.jobStatusValidator.bind(_assertThisInitialized(_this));\n    _this.statusType = _this.statusType.bind(_assertThisInitialized(_this));\n    _this.levelType = _this.levelType.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"statusType\",\n    value: function statusType(cell) {\n      if (cell === 0) {\n        return React.createElement(Badge, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Off\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"On\");\n      }\n    }\n  }, {\n    key: \"levelType\",\n    value: function levelType(cell) {\n      if (cell === 0) {\n        return React.createElement(Badge, {\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Users\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Admin\");\n      }\n    }\n  }, {\n    key: \"status\",\n    value: function status(row) {\n      console.log(row.status);\n      return [0, 1];\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetchingDataAPI('user').then(function (result) {\n        _this2.setState({\n          data: result\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          cellEditProp = _this$state.cellEditProp,\n          data = _this$state.data;\n      var selectRowProp = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        showOnlySelected: true,\n        onlyUnselectVisible: true,\n        columnWidth: '60px',\n        bgColor: 'lightblue'\n      };\n      var options = {\n        paginationShowsTotal: this.renderShowsTotal,\n        exportCSVBtn: this.createCustomExportCSV,\n        showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n        onDeleteRow: this.handleDeleteButtonClick,\n        onRowClick: function onRowClick(row, columnIndex, rowIndex, e) {\n          // alert(`Kamu menekan sekali baris dengan Device ID: ${row.id} ,${columnIndex},${rowIndex}`);\n          console.log(e);\n        }\n      };\n      var user = usersData.find(function (user) {\n        return user.id.toString() === _this3.props.match.params.id;\n      });\n      var userDetails = user ? Object.entries(user) : [['id', React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"text-muted icon-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), \" Not found\")]];\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-info pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), \"User id: \", this.props.match.params.id)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(DateRangePicker, {\n        startDate: this.state.startDateDR,\n        endDate: this.state.endDate,\n        onEvent: this.handleChangeDatePicker,\n        showWeekNumbers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \" \", this.state.labelCal)))), React.createElement(BootstrapTable, {\n        data: data,\n        remote: this.remote,\n        selectRow: selectRowProp,\n        cellEdit: cellEditProp,\n        pagination: true,\n        scrollTop: 'Bottom',\n        hover: true,\n        condensed: true,\n        striped: true,\n        exportCSV: true,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        options: options,\n        deleteRow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        ref: \"id\",\n        dataField: \"id\",\n        isKey: true,\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        width: \"100px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"ID\"), React.createElement(TableHeaderColumn, {\n        ref: \"first_name\",\n        dataField: \"first_name\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        invalidEditColumnClassName: \"invalid-jobstatus-class\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(TableHeaderColumn, {\n        ref: \"last_name\",\n        dataField: \"last_name\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        invalidEditColumnClassName: this.invalidJobStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(TableHeaderColumn, {\n        ref: \"email\",\n        dataField: \"email\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        invalidEditColumnClassName: this.invalidJobStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Email\"), React.createElement(TableHeaderColumn, {\n        ref: \"status\",\n        width: \"100px\",\n        filter: {\n          type: 'TextFilter'\n        },\n        dataField: \"status\",\n        dataFormat: this.statusType,\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Status\"), React.createElement(TableHeaderColumn, {\n        ref: \"level\",\n        width: \"100px\",\n        dataField: \"level\",\n        dataFormat: this.levelType,\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        editable: {\n          type: 'select',\n          validator: this.jobStatusValidator,\n          options: {\n            values: this.status\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Level\"), React.createElement(TableHeaderColumn, {\n        ref: \"created\",\n        dataField: \"created\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Createtime\")))))));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nexport default User;","map":{"version":3,"sources":["/home/development/Documents/JunkProc/kbli-react/src/views/Users/Users.js"],"names":["React","Component","Badge","Card","CardBody","CardHeader","Col","Row","Table","Button","BootstrapTable","TableHeaderColumn","DateRangePicker","usersData","moment","fetchingDataAPI","contentData","User","props","onAfterSaveCell","row","cellName","cellValue","console","log","invalidJobStatus","cell","jobStatusValidator","value","arr","includes","parseInt","alert","state","data","cellEditProp","mode","blurToSave","afterSaveCell","bind","statusType","levelType","status","then","result","setState","catch","err","selectRowProp","clickToSelect","showOnlySelected","onlyUnselectVisible","columnWidth","bgColor","options","paginationShowsTotal","renderShowsTotal","exportCSVBtn","createCustomExportCSV","showSelectedOnlyBtn","ShowSelectedOnlyButton","onDeleteRow","handleDeleteButtonClick","onRowClick","columnIndex","rowIndex","e","user","find","id","toString","match","params","userDetails","Object","entries","startDateDR","endDate","handleChangeDatePicker","onClick","labelCal","remote","isExpandableRow","expandComponent","type","validator","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Badge, Card, CardBody, CardHeader, Col, Row, Table, Button } from 'reactstrap';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport usersData from './UsersData'\nimport * as moment from 'moment/moment';\nimport { fetchingDataAPI } from '../../utils/AxiosMethod';\nlet contentData = []\nclass User extends Component {\n constructor(props) {\n   super(props);\n   this.state = {\n        data : [],\n        cellEditProp : {\n          mode: 'click',\n          blurToSave: true,\n          afterSaveCell: this.onAfterSaveCell // a hook for after saving cell\n        },\n   };\n   this.onAfterSaveCell = this.onAfterSaveCell.bind(this)\n   this.jobStatusValidator = this.jobStatusValidator.bind(this)\n   this.statusType = this.statusType.bind(this)\n   this.levelType = this.levelType.bind(this)\n }\n  statusType(cell) {\n    if(cell === 0){\n      return (<Badge color=\"danger\">Off</Badge>)\n    }else{\n      return (<Badge color=\"success\">On</Badge>)\n    }\n  }\n  levelType(cell) {\n    if(cell === 0){\n      return (<Badge color=\"secondary\">Users</Badge>)\n    }else{\n      return (<Badge color=\"primary\">Admin</Badge>)\n    }\n  }\n onAfterSaveCell = (row, cellName, cellValue) => {\n    console.log(cellName, cellValue)\n  }\n  invalidJobStatus = (cell, row) => {\n    return 'invalid-jobstatus-class';\n  }\n  jobStatusValidator = (value) => {\n     const arr = [0,1]\n     if(!arr.includes(parseInt(value))){\n      return alert('0 For OFF , 1 For On');\n     }\n    return true;\n  }\n  status(row) {\n    console.log(row.status)\n    return [0,1]\n  }\n componentDidMount(){\n    fetchingDataAPI('user').then(result => {\n      this.setState({\n        data : result\n      })\n    }).catch(err => console.log(err));\n }\n  render() {\n    const { cellEditProp , data } = this.state\n    const selectRowProp = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      showOnlySelected: true,\n      onlyUnselectVisible: true,\n      columnWidth :'60px',\n      bgColor: 'lightblue',\n    };\n\n    const options = {\n      paginationShowsTotal: this.renderShowsTotal,\n      exportCSVBtn:this.createCustomExportCSV,\n      showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n      onDeleteRow  : this.handleDeleteButtonClick,\n      onRowClick: function(row, columnIndex, rowIndex, e){\n        // alert(`Kamu menekan sekali baris dengan Device ID: ${row.id} ,${columnIndex},${rowIndex}`);\n        console.log(e);\n        }\n\n    };\n\n    const user = usersData.find( user => user.id.toString() === this.props.match.params.id)\n\n    const userDetails = user ? Object.entries(user) : [['id', (<span><i className=\"text-muted icon-ban\"></i> Not found</span>)]]\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\" lg=\"12\">\n            <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>User id: {this.props.match.params.id}</strong>\n              </CardHeader>\n              <CardBody>\n                 <div className='form-group'>\n                  <DateRangePicker \n                    startDate={this.state.startDateDR} \n                    endDate={this.state.endDate}\n                    onEvent={this.handleChangeDatePicker}\n                    showWeekNumbers\n                    >\n                    <Button onClick={this.onClick}>\n                      <i className=\"fa fa-calendar\"/>\n                      <span> {this.state.labelCal}</span>                          \n                    </Button>            \n                  </DateRangePicker>\n                </div>\n                 {/*<button onClick={this.getSelectedRowKeys.bind(this)}>Get selected row keys</button>*/}\n                 <BootstrapTable data={ data } remote={ this.remote } selectRow={ selectRowProp } cellEdit={ cellEditProp } pagination scrollTop={ 'Bottom' } hover condensed striped exportCSV\n                   expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } options={ options } deleteRow={ true }>\n                  <TableHeaderColumn ref='id' dataField='id' isKey={ true } headerAlign='center'  dataAlign='center' width=\"100px\">ID</TableHeaderColumn>\n                  <TableHeaderColumn ref='first_name' dataField='first_name' filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='center' editable={ { type: 'textarea' , validator: this.jobStatusValidator } } invalidEditColumnClassName=\"invalid-jobstatus-class\">First Name</TableHeaderColumn>\n                  <TableHeaderColumn ref='last_name' dataField='last_name' filter={ { type: 'TextFilter'} } headerAlign='center' dataAlign='center' editable={ { type: 'textarea' , validator: this.jobStatusValidator } } invalidEditColumnClassName={ this.invalidJobStatus }>Last Name</TableHeaderColumn>\n                  <TableHeaderColumn ref='email' dataField='email' filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='center'  editable={ { type: 'textarea' , validator: this.jobStatusValidator } } invalidEditColumnClassName={ this.invalidJobStatus }>Email</TableHeaderColumn>\n                  <TableHeaderColumn ref='status' width=\"100px\" filter={ { type: 'TextFilter' } } dataField='status' dataFormat={ this.statusType } headerAlign='center' dataAlign='center' editable={ { type: 'textarea' , validator: this.jobStatusValidator } }>Status</TableHeaderColumn>\n                  <TableHeaderColumn ref='level' width=\"100px\" dataField='level' dataFormat={ this.levelType } filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='center'  editable={ { type: 'select' , validator: this.jobStatusValidator , options: { values: this.status } } } >Level</TableHeaderColumn>\n                  <TableHeaderColumn ref='created' dataField='created' filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='center' >Createtime</TableHeaderColumn>\n                </BootstrapTable>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}