{"ast":null,"code":"import axios from 'axios';\nexport var SET_FETCHING = 'SET_FETCHING';\nexport var SET_TOKEN = 'SET_TOKEN';\nexport var DELETE_TOKEN = 'DELETE_TOKEN';\nexport var SET_USER = 'SET_USER';\nexport var DELETE_USER = 'DELETE_USER';\nexport var SET_AUTH = 'SET_AUTH';\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\nvar SECRET_KEY = '4sri';\n\nvar CryptoJS = require(\"crypto-js\");\n\nexport function setFetching(v) {\n  return {\n    type: SET_FETCHING,\n    state: v\n  };\n}\nexport function setUser(user) {\n  return {\n    type: SET_USER,\n    user: user\n  };\n}\nexport function setAuthenticated(auth) {\n  return {\n    type: SET_AUTH,\n    state: auth\n  };\n}\nexport function setToken(token) {\n  return {\n    type: SET_TOKEN,\n    token: token\n  };\n}\nexport function deleteUser() {\n  return {\n    type: DELETE_USER\n  };\n}\nexport function deleteToken() {\n  return {\n    type: DELETE_TOKEN\n  };\n}\nexport function actionCheckLogin(values) {\n  return function (dispatch) {\n    axios.get(\"http://127.0.0.1:4000/profile/\", {\n      headers: {\n        'Authorization': \"Bearer \".concat(values.token),\n        'Secret': \"\".concat(SECRET_KEY)\n      }\n    }).then(function (response) {\n      return response.data;\n    }).then(function (json) {\n      console.log(json);\n    });\n  };\n}\n;\nexport function actionGetUsername(values) {\n  console.log(values.token);\n  return function (dispatch) {\n    axios.get(\"http://127.0.0.1:4000/profile\", {\n      headers: {\n        'Authorization': \"\".concat(values.token),\n        'Secret': '4sri'\n      }\n    }).then(function (response) {\n      return response.data;\n    }).then(function (json) {\n      console.log(json); // dispatch(setUser(json.user));\n      // localStorage.setItem(\"user\", JSON.stringify(json.user));\n      // dispatch(setFetching(false));\n      // dispatch(setAuthenticated(true));\n    });\n  };\n}\n;\nexport function actionTryLogin(values) {\n  return function (dispatch) {\n    dispatch(setFetching(true));\n    axios.post('http://127.0.0.1:4000/login/', values).then(function (response) {\n      return response.data;\n    }).then(function (token) {\n      if (token !== null) {\n        dispatch(setToken({\n          token: token.token\n        }));\n        dispatch(actionGetUsername(token));\n        var data = {\n          token: token.token\n        };\n        var ciphertext = data;\n\n        if (token.token) {\n          ciphertext = CryptoJS.AES.encrypt(JSON.stringify(data), '4sri').toString();\n        }\n\n        localStorage.setItem(\"token\", ciphertext);\n      }\n    }).catch(function (err) {\n      dispatch(setFetching(false));\n      dispatch(setAuthenticated(false));\n    });\n  };\n}","map":{"version":3,"sources":["/home/development/Documents/JunkProc/kbli-react/src/utils/Action.js"],"names":["axios","SET_FETCHING","SET_TOKEN","DELETE_TOKEN","SET_USER","DELETE_USER","SET_AUTH","defaults","xsrfHeaderName","xsrfCookieName","SECRET_KEY","CryptoJS","require","setFetching","v","type","state","setUser","user","setAuthenticated","auth","setToken","token","deleteUser","deleteToken","actionCheckLogin","values","dispatch","get","headers","then","response","data","json","console","log","actionGetUsername","actionTryLogin","post","ciphertext","AES","encrypt","JSON","stringify","toString","localStorage","setItem","catch","err"],"mappings":"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","sourcesContent":["import axios from 'axios'\nexport const SET_FETCHING = 'SET_FETCHING';\nexport const SET_TOKEN= 'SET_TOKEN';\nexport const DELETE_TOKEN = 'DELETE_TOKEN';\nexport const SET_USER = 'SET_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const SET_AUTH = 'SET_AUTH';\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\nconst SECRET_KEY = '4sri'\nvar CryptoJS = require(\"crypto-js\");\n\nexport function setFetching(v) {\n  return { type: SET_FETCHING, state: v };\n}\n\nexport function setUser(user) {\n  return { type: SET_USER, user };\n}\n\nexport function setAuthenticated(auth) {\n  return { type: SET_AUTH, state: auth };\n}\n\nexport function setToken(token) {\n  return { type: SET_TOKEN , token };\n}\n\nexport function deleteUser() {\n  return { type: DELETE_USER };\n}\n\nexport function deleteToken() {\n  return { type: DELETE_TOKEN };\n}\n\nexport function actionCheckLogin(values) {\n   return dispatch => {\n     axios.get(\"http://127.0.0.1:4000/profile/\",{\n        headers: {\n          'Authorization': `Bearer ${values.token}`,\n          'Secret': `${SECRET_KEY}`,\n        }\n      })\n        .then(response => response.data)\n        .then(json => {\n          console.log(json)\n        });\n    }\n  };\n\nexport function actionGetUsername(values) {\n  console.log(values.token)\n   return dispatch => {\n     axios.get(\"http://127.0.0.1:4000/profile\",{\n        headers: {\n          'Authorization' : `${values.token}`,\n          'Secret' : '4sri',\n        }\n      })\n        .then(response => response.data)\n        .then(json => {\n          console.log(json)\n           // dispatch(setUser(json.user));\n           // localStorage.setItem(\"user\", JSON.stringify(json.user));\n           // dispatch(setFetching(false));\n           // dispatch(setAuthenticated(true));\n        });\n    }\n  };\n\nexport function actionTryLogin(values) {\n\n    return dispatch => {\n    dispatch(setFetching(true));\n    axios.post('http://127.0.0.1:4000/login/', values)\n    .then(response => response.data)\n    .then(token => {\n      if (token !== null) {\n        dispatch(setToken({ token : token.token}))\n        dispatch(actionGetUsername(token))\n        const data = { token : token.token}\n        let ciphertext = data\n        if(token.token){\n          ciphertext = CryptoJS.AES.encrypt(JSON.stringify(data), '4sri').toString();\n        }\n\n        localStorage.setItem(\"token\", ciphertext);\n      }\n    })\n    .catch(err => {\n      dispatch(setFetching(false));\n      dispatch(setAuthenticated(false));\n    });\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}