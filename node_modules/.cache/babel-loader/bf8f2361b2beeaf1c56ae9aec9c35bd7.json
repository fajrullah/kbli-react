{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\alqolam\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\alqolam\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\alqolam\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\alqolam\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\alqolam\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alqolam\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\alqolam\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\alqolam\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\alqolam\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\alqolam\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\kbli-react\\\\src\\\\views\\\\Users\\\\Users.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Badge, Card, CardBody, CardHeader, Col, Row, Table, Button, Alert, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport usersData from './UsersData';\nimport * as moment from 'moment/moment';\nimport { connect } from 'react-redux';\nimport { fetchingDataAPI, putDataAPI, deleteData, postingDataAPI } from '../../utils/AxiosMethod';\nimport { toDateTimeLocal, toDateTimeLocalDB } from '../../utils/Helper';\nimport { actionCheckExpired, deleteUser, deleteToken, setAuthenticated } from '../../utils/Action';\nimport { Redirect } from 'react-router-dom';\n\nrequire('../custom.css');\n\nvar contentData = [];\n\nvar CryptoJS = require(\"crypto-js\");\n\nvar User =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(User, _Component);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this, props));\n\n    _this.emailType = function (cell) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        color: \"warning\",\n        onClick: function onClick() {\n          return _this.togglePassword(cell);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), cell);\n    };\n\n    _this.statusType = function (cell) {\n      if (cell == 0) {\n        return React.createElement(Badge, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Off\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"On\");\n      }\n    };\n\n    _this.levelType = function (cell) {\n      if (cell == 0) {\n        return React.createElement(Badge, {\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"User\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Admin\");\n      }\n    };\n\n    _this.createdType = function (cell) {\n      return toDateTimeLocal(cell);\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var form = _this.state.form;\n      var re_password = form.re_password,\n          password = form.password,\n          email = form.email;\n\n      if (re_password === password && password !== undefined && password.length >= 6) {\n        putDataAPI('password', {\n          password: password,\n          email: email\n        }).then(function (result) {\n          if (result.response === 200) {\n            _this.setState({\n              postData: {\n                isFetching: true,\n                status: 'success',\n                notification: \"Success Generate New Password\"\n              }\n            });\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      } else {\n        _this.setState({\n          postData: {\n            isFetching: true,\n            status: 'danger',\n            notification: \"Password not Match / at Least 6 Character\"\n          }\n        });\n      }\n    };\n\n    _this.handleChange = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.onDeleteCell =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(row) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                row.map(function (k, i) {\n                  deleteData('user', {\n                    data: {\n                      id: k\n                    }\n                  }).then(function (result) {\n                    return result;\n                  }).catch(function (err) {\n                    return console.log(err);\n                  });\n                });\n                setTimeout(function () {\n                  _this.setState({\n                    postData: {\n                      isFetching: true,\n                      status: 'success',\n                      notification: 'Success Delete Data'\n                    }\n                  });\n                }, 2000);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onChangeDatePicker = function (event, picker) {\n      var dataTime = {\n        start: toDateTimeLocalDB(picker.startDate._d),\n        end: toDateTimeLocalDB(picker.endDate._d)\n      };\n\n      if (event.handleObj.type === 'apply') {\n        postingDataAPI('/user/createtime', dataTime).then(function (res) {\n          return res.data;\n        }).then(function (data) {\n          _this.setState({\n            data: data,\n            postData: {\n              isFetching: true,\n              status: 'info',\n              notification: \"Success Filtered Data From \".concat(dataTime.start, \" to \").concat(dataTime.end)\n            },\n            labelCal: \"\".concat(dataTime.start, \" s/d \").concat(dataTime.end)\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.onAfterSaveCell = function (row, cellName, cellValue) {\n      if (cellName !== 'email') {\n        putDataAPI('user', row).then(_this.setState({\n          postData: {\n            isFetching: true,\n            status: 'success',\n            notification: 'Success Update Data'\n          }\n        })).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.invalidJobStatus = function (cell, row) {\n      return 'invalid-jobstatus-class';\n    };\n\n    _this.jobStatusValidator = function (value) {\n      var arr = [0, 1];\n\n      if (!arr.includes(parseInt(value))) {\n        return alert('0 For OFF , 1 For On');\n      }\n\n      return true;\n    };\n\n    _this.onDismiss = function () {\n      _this.setState({\n        postData: {\n          visible: false\n        }\n      });\n    };\n\n    _this.state = {\n      data: [],\n      startDateDR: moment().subtract(30, 'days'),\n      endDate: moment(),\n      labelCal: 'Filter By Date',\n      modal: false,\n      token: '',\n      level: '',\n      form: {\n        password: '',\n        re_password: '',\n        email: ''\n      },\n      postData: {\n        notification: '',\n        isFetching: true,\n        status: '',\n        visible: true\n      },\n      cellEditProp: {\n        mode: 'click',\n        blurToSave: true,\n        afterSaveCell: _this.onAfterSaveCell // a hook for after saving cell\n\n      }\n    };\n    _this.onAfterSaveCell = _this.onAfterSaveCell.bind(_assertThisInitialized(_this));\n    _this.jobStatusValidator = _this.jobStatusValidator.bind(_assertThisInitialized(_this));\n    _this.statusType = _this.statusType.bind(_assertThisInitialized(_this));\n    _this.levelType = _this.levelType.bind(_assertThisInitialized(_this));\n    _this.emailType = _this.emailType.bind(_assertThisInitialized(_this));\n    _this.onDismiss = _this.onDismiss.bind(_assertThisInitialized(_this));\n    _this.togglePassword = _this.togglePassword.bind(_assertThisInitialized(_this));\n    _this.onChangeDatePicker = _this.onChangeDatePicker.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"togglePassword\",\n    value: function togglePassword(v) {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal,\n          form: {\n            email: v\n          }\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          token = _this$props.token,\n          isAuthenticated = _this$props.isAuthenticated;\n      this.props.checkToken(token.token);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          isAuthenticated = _this$props2.isAuthenticated,\n          level = _this$props2.level;\n\n      if (isAuthenticated) {\n        fetchingDataAPI('user').then(function (result) {\n          _this2.setState({\n            data: result,\n            level: level\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          cellEditProp = _this$state.cellEditProp,\n          data = _this$state.data,\n          postData = _this$state.postData,\n          form = _this$state.form;\n      var email = form.email,\n          password = form.password,\n          re_password = form.re_password;\n      var selectRowProp = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        showOnlySelected: true,\n        onlyUnselectVisible: true,\n        columnWidth: '60px',\n        bgColor: 'lightblue'\n      };\n      var options = {\n        paginationShowsTotal: this.renderShowsTotal,\n        exportCSVBtn: this.createCustomExportCSV,\n        showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\n        onDeleteRow: this.onDeleteCell,\n        onRowClick: function onRowClick(row, columnIndex, rowIndex, e) {// if(columnIndex === 3){\n          //     alert(`Kamu menekan sekali baris dengan Device ID: ${row.email} ,${columnIndex},${rowIndex}`);\n          // }\n        }\n      };\n      var user = usersData.find(function (user) {\n        return user.id.toString() === _this3.props.match.params.id;\n      });\n      var userDetails = user ? Object.entries(user) : [['id', React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"text-muted icon-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), \" Not found\")]];\n\n      if (!this.props.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.isAuthenticated && this.props.level !== 1) {\n        return React.createElement(Redirect, {\n          to: \"/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, postData.isFetching && React.createElement(Alert, {\n        color: postData.status,\n        isOpen: this.state.visible,\n        toggle: this.onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, postData.notification), React.createElement(Row, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"cardcustom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-info pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), \"User List\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(DateRangePicker, {\n        startDate: this.state.startDateDR,\n        endDate: this.state.endDate,\n        onEvent: this.onChangeDatePicker,\n        showWeekNumbers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \" \", this.state.labelCal)))), React.createElement(BootstrapTable, {\n        data: data,\n        remote: this.remote,\n        selectRow: selectRowProp,\n        cellEdit: cellEditProp,\n        pagination: true,\n        scrollTop: 'Bottom',\n        hover: true,\n        condensed: true,\n        striped: true,\n        exportCSV: true,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        options: options,\n        deleteRow: true,\n        width: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        ref: \"id\",\n        dataField: \"id\",\n        isKey: true,\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        width: \"50px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"ID\"), React.createElement(TableHeaderColumn, {\n        ref: \"first_name\",\n        dataField: \"first_name\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        width: \"100px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(TableHeaderColumn, {\n        ref: \"last_name\",\n        dataField: \"last_name\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        width: \"100px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(TableHeaderColumn, {\n        ref: \"email\",\n        dataFormat: this.emailType,\n        dataField: \"email\",\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Email\"), React.createElement(TableHeaderColumn, {\n        ref: \"status\",\n        filter: {\n          type: 'TextFilter'\n        },\n        dataField: \"status\",\n        dataFormat: this.statusType,\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        width: \"80px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Status\"), React.createElement(TableHeaderColumn, {\n        ref: \"level\",\n        dataField: \"level\",\n        dataFormat: this.levelType,\n        filter: {\n          type: 'TextFilter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        editable: {\n          type: 'textarea',\n          validator: this.jobStatusValidator\n        },\n        width: \"80px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Level\"), React.createElement(TableHeaderColumn, {\n        ref: \"created\",\n        dataField: \"created\",\n        filter: {\n          type: 'TextFilter'\n        },\n        dataFormat: this.createdType,\n        headerAlign: \"center\",\n        dataAlign: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Create Time\")))))), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        backdrop: true,\n        toggle: this.togglePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.togglePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \" Generate New Password \"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, postData.isFetching && React.createElement(Alert, {\n        color: postData.status,\n        isOpen: this.state.visible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, postData.notification), React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"email\",\n        onChange: this.handleChange,\n        readOnly: true,\n        name: \"email\",\n        defaultValue: email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"password\",\n        onChange: this.handleChange,\n        defaultValue: password,\n        name: \"password\",\n        placeholder: \"Password\",\n        autoComplete: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"password\",\n        onChange: this.handleChange,\n        defaultValue: re_password,\n        name: \"re_password\",\n        placeholder: \"Repeat password\",\n        autoComplete: \"new-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Generate New Password \", React.createElement(\"i\", {\n        className: \"icon-lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.isAuthenticated,\n    token: state.token,\n    level: state.user.level\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkToken: function checkToken(values) {\n      return dispatch(actionCheckExpired(values));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","map":{"version":3,"sources":["C:\\xampp\\htdocs\\kbli-react\\src\\views\\Users\\Users.js"],"names":["React","Component","Form","Input","Badge","Card","CardBody","CardHeader","Col","Row","Table","Button","Alert","Modal","ModalHeader","ModalBody","ModalFooter","InputGroup","InputGroupAddon","InputGroupText","BootstrapTable","TableHeaderColumn","DateRangePicker","usersData","moment","connect","fetchingDataAPI","putDataAPI","deleteData","postingDataAPI","toDateTimeLocal","toDateTimeLocalDB","actionCheckExpired","deleteUser","deleteToken","setAuthenticated","Redirect","require","contentData","CryptoJS","User","props","emailType","cell","togglePassword","statusType","levelType","createdType","handleSubmit","e","preventDefault","form","state","re_password","password","email","undefined","length","then","result","response","setState","postData","isFetching","status","notification","catch","err","console","log","handleChange","target","name","value","onDeleteCell","row","map","k","i","data","id","setTimeout","onChangeDatePicker","event","picker","dataTime","start","startDate","_d","end","endDate","handleObj","type","res","labelCal","onAfterSaveCell","cellName","cellValue","invalidJobStatus","jobStatusValidator","arr","includes","parseInt","alert","onDismiss","visible","startDateDR","subtract","modal","token","level","cellEditProp","mode","blurToSave","afterSaveCell","bind","v","prevState","isAuthenticated","checkToken","selectRowProp","clickToSelect","showOnlySelected","onlyUnselectVisible","columnWidth","bgColor","options","paginationShowsTotal","renderShowsTotal","exportCSVBtn","createCustomExportCSV","showSelectedOnlyBtn","ShowSelectedOnlyButton","onDeleteRow","onRowClick","columnIndex","rowIndex","user","find","toString","match","params","userDetails","Object","entries","onClick","remote","isExpandableRow","expandComponent","validator","mapStateToProps","mapDispatchToProps","dispatch","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Input, Badge, Card, CardBody, CardHeader, Col, Row, Table, Button , Alert, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup , InputGroupAddon , InputGroupText } from 'reactstrap';\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport 'bootstrap-daterangepicker/daterangepicker.css';\r\nimport usersData from './UsersData'\r\nimport * as moment from 'moment/moment';\r\nimport { connect } from 'react-redux';\r\nimport { fetchingDataAPI , putDataAPI , deleteData , postingDataAPI } from '../../utils/AxiosMethod';\r\nimport { toDateTimeLocal, toDateTimeLocalDB } from '../../utils/Helper';\r\nimport { actionCheckExpired , deleteUser, deleteToken, setAuthenticated  } from '../../utils/Action';\r\nimport { Redirect } from 'react-router-dom';\r\nrequire('../custom.css');\r\nlet contentData = []\r\nconst CryptoJS = require(\"crypto-js\");\r\nclass User extends Component {\r\n constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n        data : [],\r\n        startDateDR: moment().subtract(30, 'days'),\r\n        endDate: moment(),\r\n        labelCal: 'Filter By Date',\r\n        modal: false,\r\n        token : '',\r\n        level : '',\r\n        form : {\r\n            password : '',\r\n            re_password : '',\r\n            email : '',\r\n          },\r\n        postData : {\r\n          notification : '',\r\n          isFetching : true,\r\n          status : '',\r\n          visible: true,\r\n        },\r\n        cellEditProp : {\r\n          mode: 'click',\r\n          blurToSave: true,\r\n          afterSaveCell: this.onAfterSaveCell // a hook for after saving cell\r\n        },\r\n   };\r\n   this.onAfterSaveCell = this.onAfterSaveCell.bind(this)\r\n   this.jobStatusValidator = this.jobStatusValidator.bind(this)\r\n   this.statusType = this.statusType.bind(this)\r\n   this.levelType = this.levelType.bind(this)\r\n   this.emailType = this.emailType.bind(this)\r\n   this.onDismiss = this.onDismiss.bind(this)\r\n   this.togglePassword = this.togglePassword.bind(this);\r\n   this.onChangeDatePicker = this.onChangeDatePicker.bind(this);\r\n\r\n }\r\n  emailType = (cell) => {\r\n    return (<div><Badge color=\"warning\" onClick={ () => this.togglePassword(cell)}><i className=\"icon-lock\"/></Badge>{cell}</div>)\r\n  }\r\n  statusType = (cell) => {\r\n    if(cell == 0){\r\n      return (<Badge color=\"danger\">Off</Badge>)\r\n    }else{\r\n      return (<Badge color=\"success\">On</Badge>)\r\n    }\r\n  }\r\n  levelType = (cell) => {\r\n    if(cell == 0){\r\n      return (<Badge color=\"secondary\">User</Badge>)\r\n    }else{\r\n      return (<Badge color=\"primary\">Admin</Badge>)\r\n    }\r\n  }\r\n  createdType = (cell) => {\r\n    return toDateTimeLocal(cell)\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { form } = this.state\r\n    const { re_password , password , email } = form\r\n    if(re_password === password && password !== undefined && password.length >= 6){\r\n    putDataAPI('password',{password, email}).then(result => {\r\n      if(result.response === 200){\r\n        this.setState({\r\n                 postData : {\r\n                      isFetching : true,\r\n                      status : 'success',\r\n                      notification : `Success Generate New Password`\r\n                  }\r\n              })\r\n      }\r\n    }).catch( err => console.log(err))          \r\n        }else{\r\n              this.setState({\r\n                 postData : {\r\n                      isFetching : true,\r\n                      status : 'danger',\r\n                      notification : `Password not Match / at Least 6 Character`\r\n                  }\r\n              })\r\n        }\r\n  }\r\n  handleChange = (e) => {\r\n    e.preventDefault()\r\n    this.setState({\r\n      form :{\r\n        ...this.state.form,\r\n        [e.target.name] : e.target.value\r\n      }\r\n    })\r\n  }\r\n  onDeleteCell = async (row) => {\r\n   row.map((k,i) => {\r\n      deleteData('user',{ data: {id : k} })\r\n      .then(result => result)\r\n      .catch(err => console.log(err))\r\n   })\r\n      setTimeout( () => {\r\n           this.setState({\r\n            postData : {\r\n              isFetching : true,\r\n              status : 'success',\r\n              notification : 'Success Delete Data'\r\n          }}\r\n      )\r\n      },2000)\r\n  }\r\n  onChangeDatePicker = (event, picker) =>{\r\n      const dataTime = {\r\n          start : toDateTimeLocalDB(picker.startDate._d),\r\n          end : toDateTimeLocalDB(picker.endDate._d)\r\n      }\r\n      if(event.handleObj.type === 'apply'){\r\n        postingDataAPI('/user/createtime',dataTime).then(res => {\r\n          return res.data\r\n        })\r\n        .then(data => {\r\n          this.setState({data,\r\n                postData : {\r\n                  isFetching : true,\r\n                  status : 'info',\r\n                  notification : `Success Filtered Data From ${dataTime.start} to ${dataTime.end}`\r\n              },\r\n              labelCal: (`${dataTime.start} s/d ${dataTime.end}`)\r\n          })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  }\r\n onAfterSaveCell = (row, cellName, cellValue) => {\r\n\r\n    if(cellName !== 'email'){\r\n      putDataAPI('user',row).then(\r\n      this.setState({\r\n                postData : {\r\n                  isFetching : true,\r\n                  status : 'success',\r\n                  notification : 'Success Update Data'\r\n              }}\r\n      )).catch(err => console.log(err))\r\n    }\r\n  }\r\n  invalidJobStatus = (cell, row) => {\r\n    return 'invalid-jobstatus-class';\r\n  }\r\n  jobStatusValidator = (value) => {\r\n     const arr = [0,1]\r\n     if(!arr.includes(parseInt(value))){\r\n      return alert('0 For OFF , 1 For On');\r\n     }\r\n    return true;\r\n  }\r\n  togglePassword(v) {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n      form : {\r\n        email : v,\r\n      }\r\n    }));\r\n  }\r\n  onDismiss = () => {\r\n    this.setState({ postData : {visible: false} });\r\n  }\r\n componentWillUnmount(){\r\n\r\n }\r\n\r\n componentWillMount(){\r\n  const { token , isAuthenticated } = this.props\r\n  this.props.checkToken(token.token)\r\n}\r\n componentDidMount(){\r\n  const { isAuthenticated , level } = this.props\r\n  if(isAuthenticated){\r\n    fetchingDataAPI('user').then(result => {\r\n      this.setState({\r\n        data : result,\r\n        level : level\r\n      })\r\n    }).catch(err => console.log(err));\r\n  }\r\n }\r\n  render() {\r\n    const { cellEditProp , data , postData , form  } = this.state\r\n    const { email , password , re_password } = form\r\n    const selectRowProp = {\r\n      mode: 'checkbox',\r\n      clickToSelect: true,\r\n      showOnlySelected: true,\r\n      onlyUnselectVisible: true,\r\n      columnWidth :'60px',\r\n      bgColor: 'lightblue',\r\n    };\r\n\r\n    const options = {\r\n      paginationShowsTotal: this.renderShowsTotal,\r\n      exportCSVBtn:this.createCustomExportCSV,\r\n      showSelectedOnlyBtn: this.ShowSelectedOnlyButton,\r\n      onDeleteRow  : this.onDeleteCell,\r\n      onRowClick: function(row, columnIndex, rowIndex, e){\r\n          // if(columnIndex === 3){\r\n          //     alert(`Kamu menekan sekali baris dengan Device ID: ${row.email} ,${columnIndex},${rowIndex}`);\r\n          // }\r\n        }\r\n    };\r\n\r\n    const user = usersData.find( user => user.id.toString() === this.props.match.params.id)\r\n\r\n    const userDetails = user ? Object.entries(user) : [['id', (<span><i className=\"text-muted icon-ban\"></i> Not found</span>)]]\r\n     if (!this.props.isAuthenticated) {\r\n      return (<Redirect to=\"/login\" />);\r\n    }\r\n     if (this.props.isAuthenticated && this.props.level !== 1) {\r\n      return (<Redirect to=\"/dashboard\" />);\r\n    }\r\n    return (\r\n      \r\n      <div className=\"animated fadeIn\">\r\n      {\r\n        postData.isFetching && <Alert color={postData.status} isOpen={this.state.visible} toggle={this.onDismiss}>\r\n             {postData.notification}\r\n            </Alert>\r\n      }\r\n\r\n        <Row xs=\"12\" lg=\"12\">\r\n          <Col xs=\"12\" lg=\"12\">\r\n            <Card className=\"cardcustom\">\r\n              <CardHeader>\r\n                <strong><i className=\"icon-info pr-1\"></i>User List</strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                 <div className='form-group'>\r\n                  <DateRangePicker \r\n                    startDate={this.state.startDateDR} \r\n                    endDate={this.state.endDate}\r\n                    onEvent={this.onChangeDatePicker}\r\n                    showWeekNumbers\r\n                    >\r\n                    <Button onClick={this.onClick}>\r\n                      <i className=\"fa fa-calendar\"/>\r\n                      <span> {this.state.labelCal}</span>                          \r\n                    </Button>            \r\n                  </DateRangePicker>\r\n                </div>\r\n                 {/*<button onClick={this.getSelectedRowKeys.bind(this)}>Get selected row keys</button>*/}\r\n                 <BootstrapTable data={ data } remote={ this.remote } selectRow={ selectRowProp } cellEdit={ cellEditProp } pagination scrollTop={ 'Bottom' } hover condensed striped exportCSV\r\n                   expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } options={ options } deleteRow={ true } width=\"100%\">\r\n                  <TableHeaderColumn ref='id' dataField='id' isKey={ true } headerAlign='center'  dataAlign='center' width=\"50px\">ID</TableHeaderColumn>\r\n                  <TableHeaderColumn ref='first_name' dataField='first_name' filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='center' width=\"100px\">First Name</TableHeaderColumn>\r\n                  <TableHeaderColumn ref='last_name' dataField='last_name' filter={ { type: 'TextFilter'} } headerAlign='center' dataAlign='center' width=\"100px\">Last Name</TableHeaderColumn>\r\n                  <TableHeaderColumn ref='email' dataFormat={ this.emailType } dataField='email' filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='left'>Email</TableHeaderColumn>\r\n                  <TableHeaderColumn ref='status' filter={ { type: 'TextFilter' } } dataField='status' dataFormat={ this.statusType } headerAlign='center' dataAlign='center' editable={ { type: 'textarea' , validator: this.jobStatusValidator } } width=\"80px\">Status</TableHeaderColumn>\r\n                  <TableHeaderColumn ref='level'  dataField='level' dataFormat={ this.levelType } filter={ { type: 'TextFilter' } } headerAlign='center' dataAlign='center' editable={ { type: 'textarea' , validator: this.jobStatusValidator } } width=\"80px\">Level</TableHeaderColumn>\r\n                  <TableHeaderColumn ref='created' dataField='created' filter={ { type: 'TextFilter' } } dataFormat = {this.createdType} headerAlign='center' dataAlign='left'>Create Time</TableHeaderColumn>\r\n                </BootstrapTable>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={this.state.modal} backdrop={true} toggle={this.togglePassword}>\r\n          <Form onSubmit={this.handleSubmit}>\r\n          <ModalHeader toggle={this.togglePassword}> Generate New Password </ModalHeader>\r\n          <ModalBody>\r\n            {\r\n                postData.isFetching && <Alert color={postData.status} isOpen={this.state.visible}>\r\n                     {postData.notification}\r\n                    </Alert>\r\n              }\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>\r\n                  <i className=\"icon-user\"></i>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input type=\"email\" onChange={this.handleChange}  readOnly name=\"email\" defaultValue={email}/>\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>\r\n                  <i className=\"icon-lock\"></i>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input type=\"password\" onChange={this.handleChange} defaultValue={password}  name=\"password\" placeholder=\"Password\" autoComplete=\"password\" />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-4\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>\r\n                  <i className=\"icon-lock\"></i>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input type=\"password\" onChange={this.handleChange} defaultValue={re_password} name=\"re_password\" placeholder=\"Repeat password\" autoComplete=\"new-password\" />\r\n            </InputGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"warning\">Generate New Password <i className=\"icon-lock\" /></Button>\r\n          </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({  isAuthenticated : state.isAuthenticated, token : state.token , level : state.user.level });\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    checkToken : (values) => dispatch(actionCheckExpired(values)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}