{"ast":null,"code":"import axios from 'axios';\nexport var SET_FETCHING = 'SET_FETCHING';\nexport var SET_TOKEN = 'SET_TOKEN';\nexport var DELETE_TOKEN = 'DELETE_TOKEN';\nexport var SET_USER = 'SET_USER';\nexport var DELETE_USER = 'DELETE_USER';\nexport var SET_AUTH = 'SET_AUTH';\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\nexport function setFetching(v) {\n  return {\n    type: SET_FETCHING,\n    state: v\n  };\n}\nexport function setUser(user) {\n  return {\n    type: SET_USER,\n    user: user\n  };\n}\nexport function setAuthenticated(auth) {\n  return {\n    type: SET_AUTH,\n    state: auth\n  };\n}\nexport function setToken(token) {\n  return {\n    type: SET_TOKEN,\n    token: token\n  };\n}\nexport function deleteUser() {\n  return {\n    type: DELETE_USER\n  };\n}\nexport function deleteToken() {\n  return {\n    type: DELETE_TOKEN\n  };\n}\nexport function actionCheckExpired(values) {\n  return function (dispatch) {\n    axios.get(\"http://127.0.0.1:4000/profile/\", {\n      headers: {\n        'Authorization': \"\".concat(values),\n        'Secret': '4sri'\n      }\n    }).then(function (response) {\n      return response.data;\n    }).then(function (json) {\n      if (json.status !== 'on') {\n        localStorage.clear();\n        dispatch(deleteUser());\n        dispatch(deleteToken());\n        dispatch(setAuthenticated(false));\n      }\n    });\n  };\n}\n;\nexport function actionGetUsername(values) {\n  return function (dispatch) {\n    axios.post(\"http://127.0.0.1:4000/getUser/\", {\n      email: values.email\n    }, {\n      headers: {\n        'Authorization': \"Bearer \".concat(values.token)\n      }\n    }).then(function (response) {\n      return response.data;\n    }).then(function (json) {\n      dispatch(setUser(json.user));\n      localStorage.setItem(\"user\", JSON.stringify(json.user));\n      dispatch(setFetching(false));\n      dispatch(setAuthenticated(true));\n    });\n  };\n}\n;\nexport function actionTryLogin(values) {\n  return function (dispatch) {\n    dispatch(setFetching(true));\n    axios.post('http://127.0.0.1:4000/login/', values).then(function (response) {\n      return response.data;\n    }).then(function (data) {\n      var token = data;\n\n      if (token !== null) {\n        dispatch(setToken({\n          token: token.token\n        }));\n        dispatch(actionGetUsername(token));\n        localStorage.setItem(\"token\", JSON.stringify({\n          token: token.token\n        }));\n      }\n    }).catch(function (err) {\n      dispatch(setFetching(false));\n      dispatch(setAuthenticated(false));\n    });\n  };\n}","map":{"version":3,"sources":["/home/development/Documents/JunkProc/kbli-react/src/utils/Action.js"],"names":["axios","SET_FETCHING","SET_TOKEN","DELETE_TOKEN","SET_USER","DELETE_USER","SET_AUTH","defaults","xsrfHeaderName","xsrfCookieName","setFetching","v","type","state","setUser","user","setAuthenticated","auth","setToken","token","deleteUser","deleteToken","actionCheckExpired","values","dispatch","get","headers","then","response","data","json","status","localStorage","clear","actionGetUsername","post","email","setItem","JSON","stringify","actionTryLogin","catch","err"],"mappings":"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","sourcesContent":["import axios from 'axios'\nexport const SET_FETCHING = 'SET_FETCHING';\nexport const SET_TOKEN= 'SET_TOKEN';\nexport const DELETE_TOKEN = 'DELETE_TOKEN';\nexport const SET_USER = 'SET_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const SET_AUTH = 'SET_AUTH';\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\n\nexport function setFetching(v) {\n  return { type: SET_FETCHING, state: v };\n}\n\nexport function setUser(user) {\n  return { type: SET_USER, user };\n}\n\nexport function setAuthenticated(auth) {\n  return { type: SET_AUTH, state: auth };\n}\n\nexport function setToken(token) {\n  return { type: SET_TOKEN , token };\n}\n\nexport function deleteUser() {\n  return { type: DELETE_USER };\n}\n\nexport function deleteToken() {\n  return { type: DELETE_TOKEN };\n}\n\nexport function actionCheckExpired(values) {\n   return dispatch => {\n     axios.get(\"http://127.0.0.1:4000/profile/\", {\n        headers: {\n          'Authorization': `${values}`,\n          'Secret' : '4sri',\n        }\n      })\n        .then(response => response.data)\n        .then(json => {\n            if(json.status !== 'on'){\n                localStorage.clear();\n                dispatch(deleteUser());\n                dispatch(deleteToken());\n                dispatch(setAuthenticated(false));\n            }\n        });\n    }\n  };\n\nexport function actionGetUsername(values) {\n   return dispatch => {\n     axios.post(\"http://127.0.0.1:4000/getUser/\",{ email : values.email }, {\n        headers: {\n          'Authorization': `Bearer ${values.token}`,\n        }\n      })\n        .then(response => response.data)\n        .then(json => {\n           dispatch(setUser(json.user));\n           localStorage.setItem(\"user\", JSON.stringify(json.user));\n           dispatch(setFetching(false));\n           dispatch(setAuthenticated(true));\n        });\n    }\n  };\n\nexport function actionTryLogin(values) {\n    return dispatch => {\n    dispatch(setFetching(true));\n    axios.post('http://127.0.0.1:4000/login/', values)\n    .then(response => response.data)\n    .then(data => {\n      const token = data;\n      if (token !== null) {\n        dispatch(setToken({ token : token.token}));\n        dispatch(actionGetUsername(token));\n        localStorage.setItem(\"token\", JSON.stringify({token : token.token}));\n      }\n    })\n    .catch(err => {\n      dispatch(setFetching(false));\n      dispatch(setAuthenticated(false));\n    });\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}