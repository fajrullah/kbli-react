{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport { SET_FETCHING, SET_USER, DELETE_USER, SET_TOKEN, DELETE_TOKEN, SET_AUTH } from './Action';\nvar persistDefault = {};\nvar userDefault = {\n  user: ''\n};\nvar tokenDefault = {\n  token: ''\n};\n\nfunction user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userDefault;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER:\n      return Object.assign({}, state, {\n        user: action.user.email,\n        level: action.user.level\n      });\n\n    case DELETE_USER:\n      return userDefault;\n\n    default:\n      return state;\n  }\n}\n\nfunction token() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : tokenDefault;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_TOKEN:\n      return Object.assign({}, state, {\n        token: action.token.token\n      });\n\n    case DELETE_TOKEN:\n      return tokenDefault;\n\n    default:\n      return state;\n  }\n}\n\nfunction isFetching() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_FETCHING:\n      return action.state;\n\n    default:\n      return state;\n  }\n}\n\nfunction isAuthenticated() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_AUTH:\n      return action.state;\n\n    default:\n      return state;\n  }\n}\n\nfunction persistedState() {\n  try {\n    var serializedState = localStorage.getItem('state');\n    if (serializedState === null) return null;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return null;\n  }\n}\n\nvar persistedStates = persistedState == null ? persistDefault : persistedState;\nexport default combineReducers({\n  user: user,\n  token: token,\n  isFetching: isFetching,\n  isAuthenticated: isAuthenticated,\n  persistedStates: persistedStates,\n  form: formReducer\n});","map":{"version":3,"sources":["C:\\xampp\\htdocs\\kbli-react\\src\\utils\\Reducers.js"],"names":["combineReducers","reducer","formReducer","SET_FETCHING","SET_USER","DELETE_USER","SET_TOKEN","DELETE_TOKEN","SET_AUTH","persistDefault","userDefault","user","tokenDefault","token","state","action","type","Object","assign","email","level","isFetching","isAuthenticated","persistedState","serializedState","localStorage","getItem","JSON","parse","e","persistedStates","form"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,YAAvC;AACA,SACEC,YADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,YALF,EAMEC,QANF,QAOO,UAPP;AASA,IAAMC,cAAc,GAAG,EAAvB;AAGA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAG;AADW,CAApB;AAIA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAG;AADW,CAArB;;AAKA,SAASF,IAAT,GAA2C;AAAA,MAA7BG,KAA6B,uEAArBJ,WAAqB;AAAA,MAARK,MAAQ;;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,QAAL;AACE,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAuB;AAAEH,QAAAA,IAAI,EAAGI,MAAM,CAACJ,IAAP,CAAYQ,KAArB;AAA4BC,QAAAA,KAAK,EAAGL,MAAM,CAACJ,IAAP,CAAYS;AAAhD,OAAvB,CAAP;;AACF,SAAKf,WAAL;AACE,aAAOK,WAAP;;AACF;AACE,aAAOI,KAAP;AANJ;AAQD;;AAED,SAASD,KAAT,GAA6C;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,SAAL;AACE,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAuB;AAAED,QAAAA,KAAK,EAAGE,MAAM,CAACF,KAAP,CAAaA;AAAvB,OAAvB,CAAP;;AACF,SAAKN,YAAL;AACE,aAAOK,YAAP;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD;;AAED,SAASO,UAAT,GAA2C;AAAA,MAAvBP,KAAuB,uEAAf,KAAe;AAAA,MAARC,MAAQ;;AACvC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,YAAL;AACE,aAAOY,MAAM,CAACD,KAAd;;AACF;AACE,aAAOA,KAAP;AAJN;AAMH;;AAED,SAASQ,eAAT,GAAgD;AAAA,MAAvBR,KAAuB,uEAAf,KAAe;AAAA,MAARC,MAAQ;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,QAAL;AACE,aAAOO,MAAM,CAACD,KAAd;;AACF;AACE,aAAOA,KAAP;AAJN;AAMH;;AAED,SAASS,cAAT,GAA0B;AACxB,MAAI;AACF,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAIF,eAAe,KAAK,IAAxB,EAA8B,OAAO,IAAP;AAC9B,WAAOG,IAAI,CAACC,KAAL,CAAWJ,eAAX,CAAP;AACD,GAJD,CAIE,OAAMK,CAAN,EAAS;AACT,WAAO,IAAP;AACD;AACF;;AAED,IAAMC,eAAe,GAAGP,cAAc,IAAI,IAAlB,GAAyBd,cAAzB,GAA0Cc,cAAlE;AAEA,eAAevB,eAAe,CAAC;AAC3BW,EAAAA,IAAI,EAAJA,IAD2B;AAE3BE,EAAAA,KAAK,EAALA,KAF2B;AAG3BQ,EAAAA,UAAU,EAAVA,UAH2B;AAI3BC,EAAAA,eAAe,EAAfA,eAJ2B;AAK3BQ,EAAAA,eAAe,EAAfA,eAL2B;AAM3BC,EAAAA,IAAI,EAAE7B;AANqB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport {\r\n  SET_FETCHING,\r\n  SET_USER,\r\n  DELETE_USER,\r\n  SET_TOKEN,\r\n  DELETE_TOKEN,\r\n  SET_AUTH,\r\n} from './Action';\r\n\r\nconst persistDefault = {\r\n};\r\n\r\nconst userDefault = {\r\n  user : ''\r\n}\r\n\r\nconst tokenDefault = {\r\n  token : ''\r\n}\r\n\r\n\r\nfunction user(state = userDefault, action) {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return Object.assign({},state,{ user : action.user.email, level : action.user.level});\r\n    case DELETE_USER:\r\n      return userDefault;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction token(state = tokenDefault, action) {\r\n  switch (action.type) {\r\n    case SET_TOKEN:\r\n      return Object.assign({},state,{ token : action.token.token});\r\n    case DELETE_TOKEN:\r\n      return tokenDefault;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction isFetching(state = false, action) {\r\n    switch (action.type) {\r\n        case SET_FETCHING: \r\n          return action.state;\r\n        default: \r\n          return state;\r\n  }\r\n}\r\n\r\nfunction isAuthenticated(state = false, action) {\r\n    switch (action.type) {\r\n        case SET_AUTH: \r\n          return action.state;\r\n        default: \r\n          return state;\r\n  }\r\n}\r\n\r\nfunction persistedState() {\r\n  try {\r\n    const serializedState = localStorage.getItem('state')\r\n    if (serializedState === null) return null\r\n    return JSON.parse(serializedState)\r\n  } catch(e) {\r\n    return null\r\n  }\r\n}\r\n\r\nconst persistedStates = persistedState == null ? persistDefault : persistedState;\r\n\r\nexport default combineReducers({\r\n    user,\r\n    token,\r\n    isFetching,\r\n    isAuthenticated,\r\n    persistedStates,\r\n    form: formReducer\r\n});"]},"metadata":{},"sourceType":"module"}