{"map":"{\"version\":3,\"sources\":[\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/reactstrap/es/Card.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/reactstrap/es/CardBody.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_isKey.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_baseAssignValue.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/identity.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_isStrictComparable.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_matchesStrictComparable.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_baseGet.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_castPath.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_defineProperty.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_baseFor.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_createBaseFor.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_baseForOwn.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_baseIteratee.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_baseMatches.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_baseIsMatch.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_getMatchData.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_baseMatchesProperty.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/get.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/hasIn.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_baseHasIn.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_hasPath.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/property.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_baseProperty.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_basePropertyDeep.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/react-chartjs-2/es/index.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/chart.js/dist/Chart.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/isEqual.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/keyBy.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_createAggregator.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_arrayAggregator.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_baseAggregator.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_baseEach.js\",\"/home/development/Documents/JunkProc/kbli-react/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/home/development/Documents/JunkProc/kbli-react/node_modules/lodash/_createBaseEach.js\"],\"names\":[\"_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__\",\"__webpack_require__\",\"_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__\",\"react__WEBPACK_IMPORTED_MODULE_2__\",\"react__WEBPACK_IMPORTED_MODULE_2___default\",\"n\",\"prop_types__WEBPACK_IMPORTED_MODULE_3__\",\"prop_types__WEBPACK_IMPORTED_MODULE_3___default\",\"classnames__WEBPACK_IMPORTED_MODULE_4__\",\"classnames__WEBPACK_IMPORTED_MODULE_4___default\",\"_utils__WEBPACK_IMPORTED_MODULE_5__\",\"propTypes\",\"tag\",\"inverse\",\"a\",\"bool\",\"color\",\"string\",\"body\",\"outline\",\"className\",\"cssModule\",\"object\",\"innerRef\",\"oneOfType\",\"func\",\"Card\",\"props\",\"Tag\",\"attributes\",\"Object\",\"classes\",\"createElement\",\"ref\",\"defaultProps\",\"__webpack_exports__\",\"CardBody\",\"isArray\",\"isSymbol\",\"reIsDeepProp\",\"reIsPlainProp\",\"module\",\"exports\",\"value\",\"type\",\"test\",\"defineProperty\",\"key\",\"configurable\",\"enumerable\",\"writable\",\"isObject\",\"srcValue\",\"undefined\",\"castPath\",\"toKey\",\"path\",\"index\",\"length\",\"isKey\",\"stringToPath\",\"toString\",\"getNative\",\"e\",\"baseFor\",\"createBaseFor\",\"fromRight\",\"iteratee\",\"keysFunc\",\"iterable\",\"keys\",\"baseMatches\",\"baseMatchesProperty\",\"identity\",\"property\",\"baseIsMatch\",\"getMatchData\",\"matchesStrictComparable\",\"source\",\"matchData\",\"Stack\",\"baseIsEqual\",\"COMPARE_PARTIAL_FLAG\",\"COMPARE_UNORDERED_FLAG\",\"customizer\",\"noCustomizer\",\"data\",\"objValue\",\"stack\",\"result\",\"isStrictComparable\",\"get\",\"hasIn\",\"baseGet\",\"defaultValue\",\"baseHasIn\",\"hasPath\",\"isArguments\",\"isIndex\",\"isLength\",\"hasFunc\",\"baseProperty\",\"basePropertyDeep\",\"process\",\"d\",\"Doughnut\",\"Pie\",\"Line\",\"Bar\",\"Radar\",\"Polar\",\"react__WEBPACK_IMPORTED_MODULE_0__\",\"react__WEBPACK_IMPORTED_MODULE_0___default\",\"prop_types__WEBPACK_IMPORTED_MODULE_1__\",\"prop_types__WEBPACK_IMPORTED_MODULE_1___default\",\"chart_js__WEBPACK_IMPORTED_MODULE_2__\",\"chart_js__WEBPACK_IMPORTED_MODULE_2___default\",\"lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__\",\"lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default\",\"lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__\",\"lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default\",\"_extends\",\"assign\",\"target\",\"i\",\"arguments\",\"prototype\",\"hasOwnProperty\",\"call\",\"_objectWithoutProperties\",\"obj\",\"indexOf\",\"_classCallCheck\",\"instance\",\"Constructor\",\"TypeError\",\"_possibleConstructorReturn\",\"self\",\"ReferenceError\",\"_inherits\",\"subClass\",\"superClass\",\"create\",\"constructor\",\"setPrototypeOf\",\"__proto__\",\"NODE_ENV\",\"PUBLIC_URL\",\"ChartComponent\",\"_React$Component\",\"_temp\",\"_this\",\"this\",\"_len\",\"args\",\"Array\",\"_key\",\"apply\",\"concat\",\"handleOnClick\",\"event\",\"chartInstance\",\"_this$props\",\"getDatasetAtEvent\",\"getElementAtEvent\",\"getElementsAtEvent\",\"onElementsClick\",\"element\",\"componentWillMount\",\"componentDidMount\",\"renderChart\",\"componentDidUpdate\",\"redraw\",\"destroyChart\",\"updateChart\",\"shouldComponentUpdate\",\"nextProps\",\"_props\",\"options\",\"plugins\",\"legend\",\"height\",\"width\",\"nextData\",\"transformDataProp\",\"shadowDataProp\",\"componentWillUnmount\",\"memoizeDataProps\",\"datasets\",\"map\",\"set\",\"saveCurrentDatasets\",\"checkDatasets\",\"isDev\",\"usingCustomKeyProvider\",\"datasetKeyProvider\",\"getLabelAsKey\",\"multipleDatasets\",\"shouldWarn\",\"forEach\",\"dataset\",\"label\",\"console\",\"error\",\"getCurrentDatasets\",\"config\",\"_this2\",\"_this3\",\"helpers\",\"configMerge\",\"currentDatasets\",\"nextDatasets\",\"currentDatasetsIndexed\",\"next\",\"current\",\"splice\",\"point\",\"pid\",\"otherProps\",\"rest\",\"update\",\"_props2\",\"node\",\"values\",\"destroy\",\"render\",\"_props3\",\"id\",\"onClick\",\"Component\",\"isRequired\",\"number\",\"arrayOf\",\"propName\",\"componentName\",\"controllers\",\"Error\",\"display\",\"position\",\"_React$Component2\",\"_this5\",\"_ref\",\"_React$Component3\",\"_this7\",\"_ref2\",\"_React$Component4\",\"_this9\",\"_ref3\",\"_React$Component5\",\"_this11\",\"_ref4\",\"_React$Component6\",\"HorizontalBar\",\"_this13\",\"_ref5\",\"_React$Component7\",\"_this15\",\"_ref6\",\"_React$Component8\",\"_this17\",\"_ref7\",\"_React$Component9\",\"Bubble\",\"_this19\",\"_ref8\",\"_React$Component10\",\"Scatter\",\"_this21\",\"_ref9\",\"defaults\",\"moment\",\"conversions\",\"rgb2hsl\",\"rgb2hsv\",\"rgb2hwb\",\"rgb2cmyk\",\"rgb2keyword\",\"rgb2xyz\",\"rgb2lab\",\"rgb2lch\",\"lab2lch\",\"hsl2rgb\",\"hsl2hsv\",\"hsl\",\"h\",\"s\",\"l\",\"hsl2hwb\",\"hsl2cmyk\",\"hsl2keyword\",\"hsv2rgb\",\"hsv2hsl\",\"hsv\",\"sl\",\"v\",\"hsv2hwb\",\"hsv2cmyk\",\"hsv2keyword\",\"hwb2rgb\",\"hwb2hsl\",\"hwb2hsv\",\"hwb2cmyk\",\"hwb2keyword\",\"cmyk2rgb\",\"cmyk2hsl\",\"cmyk2hsv\",\"cmyk2hwb\",\"cmyk2keyword\",\"keyword2rgb\",\"keyword2hsl\",\"keyword2hsv\",\"keyword2hwb\",\"keyword2cmyk\",\"keyword2lab\",\"keyword2xyz\",\"xyz2rgb\",\"xyz2lab\",\"xyz2lch\",\"lab2xyz\",\"lab2rgb\",\"lch2lab\",\"lch2xyz\",\"lch2rgb\",\"rgb\",\"r\",\"g\",\"b\",\"min\",\"Math\",\"max\",\"delta\",\"w\",\"k\",\"reverseKeywords\",\"JSON\",\"stringify\",\"pow\",\"x\",\"y\",\"z\",\"xyz\",\"t1\",\"t2\",\"t3\",\"val\",\"hi\",\"floor\",\"f\",\"p\",\"q\",\"t\",\"hwb\",\"wh\",\"bl\",\"ratio\",\"cmyk\",\"c\",\"m\",\"lab\",\"y2\",\"hr\",\"atan2\",\"PI\",\"sqrt\",\"lch\",\"cos\",\"sin\",\"keyword\",\"cssKeywords\",\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkgrey\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkslategrey\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dimgrey\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"green\",\"greenyellow\",\"grey\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightgrey\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightslategrey\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"slategrey\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\",\"convert\",\"Converter\",\"arg\",\"slice\",\"pair\",\"exec\",\"from\",\"to\",\"round\",\"convs\",\"routeSpace\",\"space\",\"getValues\",\"setValues\",\"vals\",\"fspace\",\"colorConvert\",\"colorName\",\"colorString\",\"getRgba\",\"getHsla\",\"getRgb\",\"rgba\",\"getHsl\",\"hsla\",\"getHwb\",\"getAlpha\",\"hexString\",\"hexDouble\",\"rgbString\",\"alpha\",\"rgbaString\",\"percentString\",\"percentaString\",\"hslString\",\"hslaString\",\"hwbString\",\"reverseNames\",\"match\",\"hexAlpha\",\"parseInt\",\"parseFloat\",\"scale\",\"isNaN\",\"num\",\"str\",\"toUpperCase\",\"name\",\"Color\",\"valid\",\"lightness\",\"whiteness\",\"isValid\",\"setSpace\",\"rgbArray\",\"hslArray\",\"hsvArray\",\"hwbArray\",\"cmykArray\",\"rgbaArray\",\"hslaArray\",\"setChannel\",\"hue\",\"saturation\",\"saturationv\",\"blackness\",\"rgbNumber\",\"luminosity\",\"lum\",\"chan\",\"contrast\",\"color2\",\"lum1\",\"lum2\",\"level\",\"contrastRatio\",\"dark\",\"light\",\"negate\",\"lighten\",\"darken\",\"saturate\",\"desaturate\",\"whiten\",\"blacken\",\"greyscale\",\"clearer\",\"opaquer\",\"rotate\",\"degrees\",\"mix\",\"mixinColor\",\"weight\",\"w1\",\"w2\",\"toJSON\",\"clone\",\"prop\",\"spaces\",\"maxes\",\"charAt\",\"capped\",\"chans\",\"sname\",\"svalues\",\"window\",\"chartjsColor\",\"noop\",\"uid\",\"isNullOrUndef\",\"substr\",\"isFinite\",\"_isFinite\",\"_x\",\"Number\",\"valueOrDefault\",\"valueAtIndexOrDefault\",\"callback\",\"fn\",\"thisArg\",\"each\",\"loopable\",\"reverse\",\"len\",\"arrayEquals\",\"a0\",\"a1\",\"ilen\",\"v0\",\"v1\",\"klen\",\"_merger\",\"tval\",\"sval\",\"merge\",\"_mergerIf\",\"mergeIf\",\"sources\",\"merger\",\"extend\",\"setFn\",\"inherits\",\"extensions\",\"me\",\"ChartElement\",\"Surrogate\",\"__super__\",\"helpers_core\",\"callCallback\",\"array\",\"item\",\"fromIndex\",\"getValueOrDefault\",\"getValueAtIndexOrDefault\",\"effects\",\"linear\",\"easeInQuad\",\"easeOutQuad\",\"easeInOutQuad\",\"easeInCubic\",\"easeOutCubic\",\"easeInOutCubic\",\"easeInQuart\",\"easeOutQuart\",\"easeInOutQuart\",\"easeInQuint\",\"easeOutQuint\",\"easeInOutQuint\",\"easeInSine\",\"easeOutSine\",\"easeInOutSine\",\"easeInExpo\",\"easeOutExpo\",\"easeInOutExpo\",\"easeInCirc\",\"easeOutCirc\",\"easeInOutCirc\",\"easeInElastic\",\"asin\",\"easeOutElastic\",\"easeInOutElastic\",\"easeInBack\",\"easeOutBack\",\"easeInOutBack\",\"easeInBounce\",\"easeOutBounce\",\"easeInOutBounce\",\"helpers_easing\",\"easingEffects\",\"RAD_PER_DEG\",\"DOUBLE_PI\",\"HALF_PI\",\"QUARTER_PI\",\"TWO_THIRDS_PI\",\"exports$1\",\"clear\",\"chart\",\"ctx\",\"clearRect\",\"roundedRect\",\"radius\",\"left\",\"top\",\"right\",\"bottom\",\"moveTo\",\"arc\",\"closePath\",\"rect\",\"drawPoint\",\"style\",\"rotation\",\"xOffset\",\"yOffset\",\"size\",\"cornerRadius\",\"rad\",\"beginPath\",\"lineTo\",\"SQRT1_2\",\"fill\",\"stroke\",\"drawImage\",\"_isPointInArea\",\"area\",\"clipArea\",\"save\",\"clip\",\"unclipArea\",\"restore\",\"previous\",\"flip\",\"stepped\",\"steppedLine\",\"midpoint\",\"tension\",\"bezierCurveTo\",\"controlPointPreviousX\",\"controlPointNextX\",\"controlPointPreviousY\",\"controlPointNextY\",\"helpers_canvas\",\"drawRoundedRectangle\",\"_set\",\"scope\",\"defaultColor\",\"defaultFontColor\",\"defaultFontFamily\",\"defaultFontSize\",\"defaultFontStyle\",\"defaultLineHeight\",\"showLines\",\"core_defaults\",\"helpers_options\",\"toLineHeight\",\"matches\",\"toPadding\",\"_parseFont\",\"globalDefaults\",\"global\",\"fontSize\",\"font\",\"family\",\"fontFamily\",\"lineHeight\",\"fontStyle\",\"toFontString\",\"resolve\",\"inputs\",\"context\",\"helpers$1\",\"easing\",\"canvas\",\"Element\",\"configuration\",\"initialize\",\"hidden\",\"pivot\",\"_view\",\"_model\",\"_start\",\"transition\",\"ease\",\"model\",\"start\",\"view\",\"actual\",\"origin\",\"c0\",\"c1\",\"interpolate\",\"tooltipPosition\",\"hasValue\",\"isNumber\",\"core_element\",\"exports$2\",\"currentStep\",\"numSteps\",\"onAnimationProgress\",\"onAnimationComplete\",\"core_animation\",\"animation\",\"duration\",\"onProgress\",\"onComplete\",\"core_animations\",\"animations\",\"request\",\"addAnimation\",\"lazy\",\"startTime\",\"Date\",\"now\",\"animating\",\"push\",\"requestAnimationFrame\",\"cancelAnimation\",\"findIndex\",\"requestAnimFrame\",\"startDigest\",\"advance\",\"nextStep\",\"arrayEvents\",\"unlistenArrayEvents\",\"listener\",\"stub\",\"_chartjs\",\"listeners\",\"DatasetController\",\"datasetIndex\",\"datasetElementType\",\"dataElementType\",\"linkScales\",\"addElements\",\"updateIndex\",\"meta\",\"getMeta\",\"getDataset\",\"xAxisID\",\"scales\",\"xAxes\",\"yAxisID\",\"yAxes\",\"getDatasetMeta\",\"getScaleForId\",\"scaleID\",\"_getValueScaleId\",\"_getIndexScaleId\",\"_getValueScale\",\"_getIndexScale\",\"reset\",\"_data\",\"createMetaDataset\",\"_chart\",\"_datasetIndex\",\"createMetaData\",\"_index\",\"metaData\",\"addElementAndReset\",\"updateElement\",\"buildOrUpdateElements\",\"isExtensible\",\"method\",\"base\",\"res\",\"resyncElements\",\"easingValue\",\"elements\",\"draw\",\"removeHoverStyle\",\"$previousStyle\",\"setHoverStyle\",\"custom\",\"getHoverColor\",\"backgroundColor\",\"borderColor\",\"borderWidth\",\"hoverBackgroundColor\",\"hoverBorderColor\",\"hoverBorderWidth\",\"numMeta\",\"numData\",\"insertElements\",\"count\",\"onDataPush\",\"onDataPop\",\"pop\",\"onDataShift\",\"shift\",\"onDataSplice\",\"onDataUnshift\",\"core_datasetController\",\"borderAlign\",\"element_arc\",\"inLabelRange\",\"mouseX\",\"vm\",\"hoverRadius\",\"inRange\",\"chartX\",\"chartY\",\"pointRelativePosition\",\"getAngleFromPoint\",\"angle\",\"distance\",\"startAngle\",\"endAngle\",\"betweenAngles\",\"withinRadius\",\"innerRadius\",\"outerRadius\",\"getCenterPoint\",\"halfAngle\",\"halfRadius\",\"getArea\",\"centreAngle\",\"rangeFromCentre\",\"angleMargin\",\"sA\",\"eA\",\"pixelMargin\",\"fillStyle\",\"lineWidth\",\"lineJoin\",\"strokeStyle\",\"valueOrDefault$1\",\"line\",\"borderCapStyle\",\"borderDash\",\"borderDashOffset\",\"borderJoinStyle\",\"capBezierPoints\",\"element_line\",\"currentVM\",\"spanGaps\",\"points\",\"_children\",\"globalOptionLineElements\",\"lastDrawnIndex\",\"_loop\",\"lineCap\",\"setLineDash\",\"lineDashOffset\",\"previousItem\",\"skip\",\"valueOrDefault$2\",\"defaultColor$1\",\"xRange\",\"abs\",\"hitRadius\",\"pointStyle\",\"element_point\",\"mouseY\",\"inXRange\",\"inYRange\",\"padding\",\"chartArea\",\"defaultColor$2\",\"isVertical\",\"getBarBounds\",\"x1\",\"x2\",\"y1\",\"half\",\"swap\",\"orig\",\"v2\",\"parseBorderWidth\",\"maxW\",\"maxH\",\"edge\",\"borderSkipped\",\"horizontal\",\"parseBorderSkipped\",\"_inRange\",\"skipX\",\"skipY\",\"bounds\",\"rectangle\",\"element_rectangle\",\"rects\",\"border\",\"outer\",\"inner\",\"boundingRects\",\"fillRect\",\"Arc\",\"Point\",\"Rectangle\",\"resolve$1\",\"hover\",\"mode\",\"categoryPercentage\",\"barPercentage\",\"offset\",\"gridLines\",\"offsetGridLines\",\"controller_bar\",\"bar\",\"_ruler\",\"getRuler\",\"_resolveElementOptions\",\"_xScale\",\"_yScale\",\"datasetLabel\",\"labels\",\"_updateElementGeometry\",\"vscale\",\"getBasePixel\",\"isHorizontal\",\"ruler\",\"vpixels\",\"calculateBarValuePixels\",\"ipixels\",\"calculateBarIndexPixels\",\"head\",\"center\",\"_getStacks\",\"last\",\"stacked\",\"stacks\",\"isDatasetVisible\",\"getStackCount\",\"getStackIndex\",\"stackCount\",\"end\",\"pixels\",\"getPixelForValue\",\"barThickness\",\"prev\",\"curr\",\"ticks\",\"getTicks\",\"getPixelForTick\",\"computeMinSampleSize\",\"imeta\",\"ivalue\",\"getRightValue\",\"minBarLength\",\"controller\",\"range\",\"percent\",\"chunk\",\"computeFlexCategoryTraits\",\"thickness\",\"computeFitCategoryTraits\",\"stackIndex\",\"maxBarThickness\",\"Infinity\",\"dataIndex\",\"valueOrDefault$3\",\"resolve$2\",\"tooltips\",\"callbacks\",\"title\",\"dataPoint\",\"xLabel\",\"yLabel\",\"controller_bubble\",\"xScale\",\"yScale\",\"dsIndex\",\"getPixelForDecimal\",\"NaN\",\"_options\",\"resolve$3\",\"valueOrDefault$4\",\"animateRotate\",\"animateScale\",\"legendCallback\",\"text\",\"join\",\"generateLabels\",\"ds\",\"arcOpts\",\"bw\",\"legendItem\",\"cutoutPercentage\",\"circumference\",\"tooltipItem\",\"dataLabel\",\"controller_doughnut\",\"getRingIndex\",\"ringIndex\",\"j\",\"opts\",\"availableWidth\",\"availableHeight\",\"minSize\",\"arcs\",\"chartWeight\",\"_getRingWeight\",\"contains0\",\"contains90\",\"contains180\",\"contains270\",\"cutout\",\"getMaxBorderWidth\",\"radiusLength\",\"_getVisibleDatasetWeightTotal\",\"offsetX\",\"offsetY\",\"total\",\"calculateTotal\",\"_getRingWeightOffset\",\"animationOpts\",\"centerX\",\"centerY\",\"calculateCircumference\",\"hoverWidth\",\"ringWeightOffset\",\"dataSetIndex\",\"axis\",\"controller_horizontalBar\",\"valueOrDefault$5\",\"resolve$4\",\"isPointInArea\",\"lineEnabled\",\"showLine\",\"controller_line\",\"lineTension\",\"_scale\",\"_resolveLineOptions\",\"updateBezierControlPoints\",\"lineModel\",\"_resolvePointOptions\",\"calculatePointY\",\"ELEMENT_OPTIONS\",\"elementOptions\",\"dsMeta\",\"sumPos\",\"sumNeg\",\"stackedRightValue\",\"rightValue\",\"controlPoints\",\"capControlPoint\",\"pt\",\"filter\",\"cubicInterpolationMode\",\"splineCurveMonotone\",\"splineCurve\",\"nextItem\",\"halfBorderWidth\",\"resolve$5\",\"angleLines\",\"circular\",\"pointLabels\",\"beginAtZero\",\"controller_polarArea\",\"starts\",\"_starts\",\"angles\",\"_angles\",\"_updateRadius\",\"countVisibleElements\",\"_computeAngle\",\"getVisibleDatasetCount\",\"xCenter\",\"yCenter\",\"datasetStartAngle\",\"getDistanceFromCenterForValue\",\"resetRadius\",\"doughnut\",\"controller_pie\",\"valueOrDefault$6\",\"resolve$6\",\"controller_radar\",\"pointPosition\",\"getPointPositionForValue\",\"bubble\",\"horizontalBar\",\"polarArea\",\"pie\",\"radar\",\"scatter\",\"getRelativePosition\",\"native\",\"parseVisibleItems\",\"handler\",\"jlen\",\"getIntersectItems\",\"getNearestItems\",\"intersect\",\"distanceMetric\",\"minDistance\",\"POSITIVE_INFINITY\",\"nearestItems\",\"getDistanceMetricForAxis\",\"useX\",\"useY\",\"pt1\",\"pt2\",\"deltaX\",\"deltaY\",\"indexMode\",\"items\",\"core_interaction\",\"modes\",\"single\",\"x-axis\",\"nearest\",\"intersectsItem\",\"filterByPosition\",\"where\",\"sortByWeight\",\"_tmpIndex_\",\"sort\",\"addSizeByPosition\",\"boxes\",\"box\",\"layout\",\"core_layouts\",\"addBox\",\"fullWidth\",\"removeBox\",\"layoutItem\",\"configure\",\"layoutOptions\",\"leftPadding\",\"rightPadding\",\"topPadding\",\"bottomPadding\",\"leftBoxes\",\"rightBoxes\",\"topBoxes\",\"bottomBoxes\",\"chartAreaBoxes\",\"maxPadding\",\"verticalBoxes\",\"horizontalBoxes\",\"outerBoxes\",\"chartWidth\",\"chartHeight\",\"chartAreaWidth\",\"verticalBoxWidth\",\"maxChartAreaWidth\",\"maxChartAreaHeight\",\"outerBoxSizes\",\"minBoxSizes\",\"getPadding\",\"boxPadding\",\"findMaxPadding\",\"fitBox\",\"minBoxSize\",\"findNextWhere\",\"scaleMargin\",\"leftPaddingAddition\",\"topPaddingAddition\",\"newMaxChartAreaHeight\",\"newMaxChartAreaWidth\",\"placeBox\",\"minBox\",\"stylesheet\",\"freeze\",\"default\",\"EXPANDO_KEY\",\"CSS_SIZE_MONITOR\",\"CSS_PREFIX\",\"CSS_RENDER_MONITOR\",\"CSS_RENDER_ANIMATION\",\"ANIMATION_START_EVENTS\",\"EVENT_TYPES\",\"touchstart\",\"touchmove\",\"touchend\",\"pointerenter\",\"pointerdown\",\"pointermove\",\"pointerup\",\"pointerleave\",\"pointerout\",\"readUsedSize\",\"getStyle\",\"eventListenerOptions\",\"supports\",\"addEventListener\",\"passive\",\"addListener\",\"removeListener\",\"removeEventListener\",\"createEvent\",\"nativeEvent\",\"createDiv\",\"cls\",\"el\",\"document\",\"addResizeListener\",\"expando\",\"resizer\",\"expand\",\"shrink\",\"appendChild\",\"_reset\",\"scrollLeft\",\"scrollTop\",\"onScroll\",\"bind\",\"createResizer\",\"ticking\",\"throttled\",\"container\",\"maintainAspectRatio\",\"parentNode\",\"clientWidth\",\"proxy\",\"renderProxy\",\"animationName\",\"reflow\",\"offsetParent\",\"classList\",\"add\",\"watchForRender\",\"insertBefore\",\"firstChild\",\"removeResizeListener\",\"remove\",\"unwatchForRender\",\"removeChild\",\"platform_dom$2\",\"disableCSSInjection\",\"_enabled\",\"_ensureLoaded\",\"_loaded\",\"platform\",\"css\",\"_style\",\"setAttribute\",\"getElementsByTagName\",\"createTextNode\",\"injectCSS\",\"acquireContext\",\"getElementById\",\"getContext\",\"renderHeight\",\"getAttribute\",\"renderWidth\",\"initial\",\"displayWidth\",\"aspectRatio\",\"displayHeight\",\"initCanvas\",\"releaseContext\",\"removeAttribute\",\"proxies\",\"pos\",\"fromNativeEvent\",\"addEvent\",\"removeEvent\",\"implementation\",\"core_plugins\",\"_plugins\",\"_cacheId\",\"register\",\"plugin\",\"unregister\",\"idx\",\"getAll\",\"notify\",\"hook\",\"descriptor\",\"params\",\"descriptors\",\"cache\",\"$plugins\",\"_invalidate\",\"core_scaleService\",\"constructors\",\"registerScaleType\",\"scaleConstructor\",\"scaleDefaults\",\"getScaleConstructor\",\"getScaleDefaults\",\"updateScaleDefaults\",\"additions\",\"addScalesToLayout\",\"valueOrDefault$7\",\"enabled\",\"titleFontStyle\",\"titleSpacing\",\"titleMarginBottom\",\"titleFontColor\",\"titleAlign\",\"bodySpacing\",\"bodyFontColor\",\"bodyAlign\",\"footerFontStyle\",\"footerSpacing\",\"footerMarginTop\",\"footerFontColor\",\"footerAlign\",\"yPadding\",\"xPadding\",\"caretPadding\",\"caretSize\",\"multiKeyBackground\",\"displayColors\",\"beforeTitle\",\"tooltipItems\",\"labelCount\",\"afterTitle\",\"beforeBody\",\"beforeLabel\",\"labelColor\",\"activeElement\",\"labelTextColor\",\"afterLabel\",\"afterBody\",\"beforeFooter\",\"footer\",\"afterFooter\",\"positioners\",\"average\",\"eventPosition\",\"nearestElement\",\"distanceBetweenPoints\",\"tp\",\"pushOrConcat\",\"toPush\",\"splitNewlines\",\"String\",\"split\",\"createTooltipItem\",\"indexScale\",\"valueScale\",\"getLabelForIndex\",\"getBaseModel\",\"tooltipOpts\",\"xAlign\",\"yAlign\",\"_bodyFontFamily\",\"bodyFontFamily\",\"_bodyFontStyle\",\"bodyFontStyle\",\"_bodyAlign\",\"bodyFontSize\",\"_titleFontFamily\",\"titleFontFamily\",\"_titleFontStyle\",\"titleFontSize\",\"_titleAlign\",\"_footerFontFamily\",\"footerFontFamily\",\"_footerFontStyle\",\"footerFontSize\",\"_footerAlign\",\"opacity\",\"legendColorBackground\",\"getAlignedX\",\"align\",\"getBeforeAfterBodyLines\",\"exports$3\",\"_lastActive\",\"getTitle\",\"lines\",\"getBeforeBody\",\"getBody\",\"bodyItems\",\"bodyItem\",\"before\",\"after\",\"getAfterBody\",\"getFooter\",\"changed\",\"existingModel\",\"active\",\"_active\",\"alignment\",\"backgroundPoint\",\"tooltipSize\",\"caretX\",\"caretY\",\"labelColors\",\"labelTextColors\",\"_eventPosition\",\"itemSort\",\"dataPoints\",\"tooltip\",\"combinedBodyLength\",\"reduce\",\"titleLineCount\",\"footerLineCount\",\"widthPadding\",\"maxLineWidth\",\"measureText\",\"fontString\",\"getTooltipSize\",\"lf\",\"rf\",\"olf\",\"orf\",\"yf\",\"midX\",\"midY\",\"determineAlignment\",\"paddingAndSize\",\"radiusAndPadding\",\"getBackgroundPoint\",\"drawCaret\",\"tooltipPoint\",\"caretPosition\",\"getCaretPosition\",\"x3\",\"y3\",\"ptX\",\"ptY\",\"tmp\",\"drawTitle\",\"textAlign\",\"textBaseline\",\"fillText\",\"drawBody\",\"textColor\",\"drawColorBoxes\",\"xLinePadding\",\"colorX\",\"fillLineOfText\",\"strokeRect\",\"drawFooter\",\"drawBackground\",\"quadraticCurveTo\",\"hasTooltipContent\",\"globalAlpha\",\"handleEvent\",\"getElementsAtEventForMode\",\"positioners_1\",\"core_tooltip\",\"valueOrDefault$8\",\"mergeScaleConfig\",\"slen\",\"mergeConfig\",\"positionIsHorizontal\",\"events\",\"onHover\",\"animationDuration\",\"responsive\",\"responsiveAnimationDuration\",\"Chart\",\"construct\",\"initConfig\",\"_bufferedRender\",\"instances\",\"retinaScale\",\"devicePixelRatio\",\"bindEvents\",\"resize\",\"ensureScalesHaveIDs\",\"buildOrUpdateScales\",\"initToolTip\",\"stop\",\"silent\",\"newWidth\",\"getMaximumWidth\",\"newHeight\",\"getMaximumHeight\",\"newSize\",\"onResize\",\"scalesOptions\",\"scaleOptions\",\"xAxisOptions\",\"yAxisOptions\",\"updated\",\"dtype\",\"dposition\",\"isDefault\",\"scaleType\",\"scaleClass\",\"mergeTicksOptions\",\"hasUpdated\",\"buildOrUpdateControllers\",\"newControllers\",\"destroyDatasetMeta\",\"ControllerClass\",\"resetElements\",\"newOptions\",\"updateConfig\",\"updateLayout\",\"updateDatasets\",\"lastActive\",\"_bufferedRequest\",\"updateDataset\",\"animationOptions\",\"animationObject\",\"easingFunction\",\"stepDecimal\",\"drawDatasets\",\"_drawTooltip\",\"drawDataset\",\"getElementsAtXAxis\",\"_meta\",\"generateLegend\",\"unbindEvents\",\"toBase64Image\",\"toDataURL\",\"_chartInstance\",\"_listeners\",\"eventHandler\",\"updateHoverStyle\",\"bufferedRequest\",\"hoverOptions\",\"core_controller\",\"_abstract\",\"DateAdapter\",\"Controller\",\"types\",\"scaleMerge\",\"formats\",\"parse\",\"format\",\"diff\",\"startOf\",\"endOf\",\"_create\",\"override\",\"members\",\"core_adapters\",\"_date\",\"core_ticks\",\"formatters\",\"tickValue\",\"logDelta\",\"log10\",\"tickString\",\"maxTick\",\"logTick\",\"toExponential\",\"numDecimal\",\"toFixed\",\"logarithmic\",\"remain\",\"valueOrDefault$9\",\"labelsFromTicks\",\"computeTextSize\",\"tick\",\"longestText\",\"drawBorder\",\"drawOnChartArea\",\"drawTicks\",\"tickMarkLength\",\"zeroLineWidth\",\"zeroLineColor\",\"zeroLineBorderDash\",\"zeroLineBorderDashOffset\",\"scaleLabel\",\"labelString\",\"minRotation\",\"maxRotation\",\"mirror\",\"autoSkip\",\"autoSkipPadding\",\"labelOffset\",\"minor\",\"major\",\"core_scale\",\"paddingLeft\",\"paddingTop\",\"paddingRight\",\"paddingBottom\",\"_ticks\",\"beforeUpdate\",\"maxWidth\",\"maxHeight\",\"margins\",\"_maxLabelLines\",\"longestLabelWidth\",\"longestTextCache\",\"beforeSetDimensions\",\"setDimensions\",\"afterSetDimensions\",\"beforeDataLimits\",\"determineDataLimits\",\"afterDataLimits\",\"beforeBuildTicks\",\"buildTicks\",\"afterBuildTicks\",\"beforeTickToLabelConversion\",\"convertTicksToLabels\",\"afterTickToLabelConversion\",\"beforeCalculateTickRotation\",\"calculateTickRotation\",\"afterCalculateTickRotation\",\"beforeFit\",\"fit\",\"afterFit\",\"afterUpdate\",\"tickOpts\",\"userCallback\",\"tickFont\",\"labelRotation\",\"cosRotation\",\"originalLabelWidth\",\"labelWidth\",\"tickWidth\",\"angleRadians\",\"toRadians\",\"scaleLabelOpts\",\"gridLineOpts\",\"_isVisible\",\"parseFont\",\"isFullWidth\",\"scaleLabelFont\",\"scaleLabelPadding\",\"deltaHeight\",\"largestTextWidth\",\"tallestLabelHeightInLines\",\"numberOfLabelLines\",\"lineSpace\",\"tickPadding\",\"sinRotation\",\"labelHeight\",\"firstLabelWidth\",\"lastLabelWidth\",\"offsetLeft\",\"offsetRight\",\"handleMargins\",\"rawValue\",\"getValueForPixel\",\"innerWidth\",\"pixel\",\"finalVal\",\"innerHeight\",\"decimal\",\"valueOffset\",\"getBaseValue\",\"_autoSkip\",\"optionTicks\",\"tickCount\",\"skipRatio\",\"maxTicks\",\"maxTicksLimit\",\"ticksLength\",\"_tickSize\",\"axisLength\",\"PaddingBottom\",\"rot\",\"borderValue\",\"tickStart\",\"tickEnd\",\"optionMajorTicks\",\"isRotated\",\"isMirrored\",\"tickFontColor\",\"fontColor\",\"majorTickFontColor\",\"majorTickFont\",\"tl\",\"scaleLabelFontColor\",\"labelRotationRadians\",\"itemsToDraw\",\"axisWidth\",\"alignPixel\",\"_alignPixel\",\"lineColor\",\"tx1\",\"ty1\",\"tx2\",\"ty2\",\"labelX\",\"labelY\",\"textOffset\",\"zeroLineIndex\",\"lineValue\",\"getPixelForGridLine\",\"labelYOffset\",\"labelXOffset\",\"glWidth\",\"glColor\",\"glBorderDash\",\"glBorderDashOffset\",\"itemToDraw\",\"translate\",\"scaleLabelX\",\"scaleLabelY\",\"halfLineHeight\",\"isLeft\",\"firstLineWidth\",\"lastLineWidth\",\"scale_category\",\"getLabels\",\"xLabels\",\"yLabels\",\"minIndex\",\"maxIndex\",\"valueCategory\",\"offsetAmt\",\"valueWidth\",\"widthOffset\",\"valueHeight\",\"heightOffset\",\"horz\",\"valueDimension\",\"_defaults\",\"scale_linearbase\",\"handleTickRangeOptions\",\"minSign\",\"sign\",\"maxSign\",\"setMin\",\"suggestedMin\",\"setMax\",\"suggestedMax\",\"getTickLimit\",\"stepSize\",\"ceil\",\"_computeTickLimit\",\"handleDirectionalChanges\",\"numericGeneratorOptions\",\"precision\",\"fixedStepSize\",\"generationOptions\",\"dataRange\",\"factor\",\"niceMin\",\"niceMax\",\"numSpaces\",\"unit\",\"maxNumSpaces\",\"rmin\",\"rmax\",\"spacing\",\"niceNum\",\"_decimalPlaces\",\"almostWhole\",\"almostEquals\",\"generateTicks\",\"ticksAsNumbers\",\"defaultConfig$1\",\"scale_linear\",\"IDMatches\",\"hasStacks\",\"valuesPerStack\",\"positiveValues\",\"negativeValues\",\"relativePoints\",\"valuesForType\",\"minVal\",\"maxVal\",\"innerDimension\",\"_defaults$1\",\"valueOrDefault$a\",\"defaultConfig$2\",\"nonNegativeOrDefault\",\"scale_logarithmic\",\"minNotZero\",\"exp\",\"significand\",\"tickVal\",\"endExp\",\"endSignificand\",\"lastTick\",\"generateTicks$1\",\"tickValues\",\"_getFirstTickValue\",\"firstTickValue\",\"_defaults$2\",\"valueOrDefault$b\",\"valueAtIndexOrDefault$1\",\"resolve$7\",\"defaultConfig$3\",\"animate\",\"showLabelBackdrop\",\"backdropColor\",\"backdropPaddingY\",\"backdropPaddingX\",\"getValueCount\",\"getTickBackdropHeight\",\"determineLimits\",\"getTextAlignForAngle\",\"adjustPointPositionForLabelHeight\",\"textSize\",\"numberOrZero\",\"param\",\"scale_radialLinear\",\"drawingArea\",\"NEGATIVE_INFINITY\",\"plFont\",\"furthestLimits\",\"furthestAngles\",\"_pointLabelSizes\",\"valueCount\",\"getPointPosition\",\"getIndexAngle\",\"toDegrees\",\"hLimits\",\"vLimits\",\"setReductions\",\"fitWithPointLabels\",\"setCenterPoint\",\"largestPossibleRadius\",\"radiusReductionLeft\",\"radiusReductionRight\",\"radiusReductionTop\",\"radiusReductionBottom\",\"leftMovement\",\"rightMovement\",\"topMovement\",\"bottomMovement\",\"maxRight\",\"maxLeft\",\"maxTop\",\"maxBottom\",\"angleMultiplier\",\"startAngleRadians\",\"scalingFactor\",\"distanceFromCenter\",\"thisAngle\",\"getBasePosition\",\"angleLineOpts\",\"pointLabelOpts\",\"tickBackdropHeight\",\"outerDistance\",\"outerPosition\",\"extra\",\"pointLabelPosition\",\"pointLabelFontColor\",\"drawPointLabels\",\"yCenterOffset\",\"drawRadiusLine\",\"_defaults$3\",\"valueOrDefault$c\",\"MIN_INTEGER\",\"MIN_SAFE_INTEGER\",\"MAX_INTEGER\",\"MAX_SAFE_INTEGER\",\"INTERVALS\",\"millisecond\",\"common\",\"steps\",\"second\",\"minute\",\"hour\",\"day\",\"week\",\"month\",\"quarter\",\"year\",\"UNITS\",\"sorter\",\"arrayUnique\",\"hash\",\"out\",\"interpolate$1\",\"table\",\"skey\",\"tkey\",\"mid\",\"i0\",\"i1\",\"lo\",\"lookup\",\"span\",\"toTimestamp\",\"input\",\"adapter\",\"_adapter\",\"time\",\"parser\",\"determineMajorUnit\",\"generate\",\"capacity\",\"timeOpts\",\"minUnit\",\"interval\",\"determineUnitForAutoTicks\",\"unitStepSize\",\"weekday\",\"isoWeekday\",\"majorTicksEnabled\",\"first\",\"milliseconds\",\"determineStepSize\",\"scale_time\",\"adapters\",\"date\",\"warn\",\"displayFormats\",\"timestamp\",\"timestamps\",\"dataLabels\",\"_horizontal\",\"_table\",\"_timestamps\",\"getLabelCapacity\",\"_unit\",\"determineUnitForFormatting\",\"_majorUnit\",\"distribution\",\"buildLookupTable\",\"_offsets\",\"computeOffsets\",\"majorUnit\",\"ticksFromTimestamps\",\"tooltipFormat\",\"datetime\",\"tickFormatFunction\",\"minorFormat\",\"majorFormat\",\"majorTime\",\"majorTickOpts\",\"formatter\",\"getPixelForOffset\",\"isReverse\",\"getLabelWidth\",\"ticksOpts\",\"tickLabelWidth\",\"tickFontSize\",\"exampleTime\",\"exampleLabel\",\"_defaults$4\",\"displayFormat\",\"category\",\"radialLinear\",\"FORMATS\",\"_id\",\"valueOf\",\"_format\",\"amount\",\"as\",\"filler\",\"propagate\",\"mappers\",\"visible\",\"boundary\",\"decodeFill\",\"computeBoundary\",\"scaleBottom\",\"scaleTop\",\"scaleZero\",\"resolveTarget\",\"visited\",\"createMapper\",\"isDrawable\",\"drawArea\",\"curve0\",\"curve1\",\"len0\",\"len1\",\"plugin_filler\",\"afterDatasetsUpdate\",\"$filler\",\"mapper\",\"beforeDatasetDraw\",\"loop\",\"p0\",\"p1\",\"d0\",\"d1\",\"doFill\",\"noop$1\",\"valueOrDefault$d\",\"getBoxWidth\",\"labelOpts\",\"usePointStyle\",\"boxWidth\",\"ci\",\"onLeave\",\"lineDash\",\"Legend\",\"legendHitBoxes\",\"_hoveredItem\",\"doughnutMode\",\"beforeBuildLabels\",\"buildLabels\",\"afterBuildLabels\",\"legendItems\",\"labelFont\",\"hitboxes\",\"lineWidths\",\"totalHeight\",\"vPadding\",\"columnWidths\",\"totalWidth\",\"currentColWidth\",\"currentColHeight\",\"itemHeight\",\"itemWidth\",\"lineDefault\",\"legendWidth\",\"cursor\",\"textWidth\",\"SQRT2\",\"drawLegendBox\",\"halfFontSize\",\"xLeft\",\"yMiddle\",\"_getLegendItemAt\",\"hitBox\",\"lh\",\"hoveredItem\",\"createNewLegendAndAttach\",\"legendOpts\",\"plugin_legend\",\"_element\",\"beforeInit\",\"afterEvent\",\"noop$2\",\"Title\",\"lineCount\",\"fontOpts\",\"titleX\",\"titleY\",\"createNewTitleBlockAndAttach\",\"titleOpts\",\"titleBlock\",\"parseMaxStyle\",\"styleValue\",\"parentProperty\",\"valueInPixels\",\"isConstrainedValue\",\"getConstraintDimension\",\"domNode\",\"maxStyle\",\"percentageProperty\",\"defaultView\",\"_getParentNode\",\"constrainedNode\",\"getComputedStyle\",\"constrainedContainer\",\"hasCNode\",\"hasCContainer\",\"infinity\",\"collection\",\"filterCallback\",\"filtered\",\"arrayToSearch\",\"startIndex\",\"currentItem\",\"findPreviousWhere\",\"epsilon\",\"rounded\",\"exponent\",\"log\",\"LOG10E\",\"powerOf10\",\"isPowerOf10\",\"radians\",\"centrePoint\",\"anglePoint\",\"distanceFromXCenter\",\"distanceFromYCenter\",\"radialDistanceFromCenter\",\"aliasPixel\",\"pixelWidth\",\"currentDevicePixelRatio\",\"halfWidth\",\"firstPoint\",\"middlePoint\",\"afterPoint\",\"d01\",\"d12\",\"s01\",\"s12\",\"fa\",\"fb\",\"EPSILON\",\"pointBefore\",\"pointCurrent\",\"pointAfter\",\"alphaK\",\"betaK\",\"tauK\",\"squaredMagnitude\",\"pointsWithTangents\",\"deltaK\",\"mK\",\"pointsLen\",\"slopeDeltaX\",\"fraction\",\"webkitRequestAnimationFrame\",\"mozRequestAnimationFrame\",\"oRequestAnimationFrame\",\"msRequestAnimationFrame\",\"setTimeout\",\"evt\",\"originalEvent\",\"srcElement\",\"boundingRect\",\"getBoundingClientRect\",\"touches\",\"clientX\",\"clientY\",\"getConstraintWidth\",\"getConstraintHeight\",\"_calculatePadding\",\"parentDimension\",\"parent\",\"host\",\"cw\",\"clientHeight\",\"ch\",\"currentStyle\",\"getPropertyValue\",\"forceRatio\",\"pixelRatio\",\"pixelSize\",\"arrayOfThings\",\"gc\",\"garbageCollect\",\"longest\",\"thing\",\"nestedThing\",\"gcLen\",\"numberOfLines\",\"CanvasGradient\",\"colorValue\",\"CanvasPattern\",\"core_helpers\",\"_adapters\",\"Animation\",\"animationService\",\"Interaction\",\"layouts\",\"Scale\",\"scaleService\",\"Ticks\",\"Tooltip\",\"src\",\"pluginService\",\"PluginBase\",\"canvasHelpers\",\"layoutService\",\"LinearScaleBase\",\"klass\",\"cfg\",\"toLowerCase\",\"factory\",\"other\",\"baseAssignValue\",\"keyBy\",\"createAggregator\",\"arrayAggregator\",\"baseAggregator\",\"baseIteratee\",\"setter\",\"initializer\",\"accumulator\",\"baseEach\",\"baseForOwn\",\"createBaseEach\",\"isArrayLike\",\"eachFunc\"],\"mappings\":\"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\",\"sourcesContent\":[\"import _extends from \\\"@babel/runtime/helpers/esm/extends\\\";\\nimport _objectWithoutPropertiesLoose from \\\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\\\";\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames';\\nimport { mapToCssModules, tagPropType } from './utils';\\nvar propTypes = {\\n  tag: tagPropType,\\n  inverse: PropTypes.bool,\\n  color: PropTypes.string,\\n  body: PropTypes.bool,\\n  outline: PropTypes.bool,\\n  className: PropTypes.string,\\n  cssModule: PropTypes.object,\\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\\n};\\nvar defaultProps = {\\n  tag: 'div'\\n};\\n\\nvar Card = function Card(props) {\\n  var className = props.className,\\n      cssModule = props.cssModule,\\n      color = props.color,\\n      body = props.body,\\n      inverse = props.inverse,\\n      outline = props.outline,\\n      Tag = props.tag,\\n      innerRef = props.innerRef,\\n      attributes = _objectWithoutPropertiesLoose(props, [\\\"className\\\", \\\"cssModule\\\", \\\"color\\\", \\\"body\\\", \\\"inverse\\\", \\\"outline\\\", \\\"tag\\\", \\\"innerRef\\\"]);\\n\\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \\\"-\\\" + color : false), cssModule);\\n  return React.createElement(Tag, _extends({}, attributes, {\\n    className: classes,\\n    ref: innerRef\\n  }));\\n};\\n\\nCard.propTypes = propTypes;\\nCard.defaultProps = defaultProps;\\nexport default Card;\",\"import _extends from \\\"@babel/runtime/helpers/esm/extends\\\";\\nimport _objectWithoutPropertiesLoose from \\\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\\\";\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames';\\nimport { mapToCssModules, tagPropType } from './utils';\\nvar propTypes = {\\n  tag: tagPropType,\\n  className: PropTypes.string,\\n  cssModule: PropTypes.object,\\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\\n};\\nvar defaultProps = {\\n  tag: 'div'\\n};\\n\\nvar CardBody = function CardBody(props) {\\n  var className = props.className,\\n      cssModule = props.cssModule,\\n      innerRef = props.innerRef,\\n      Tag = props.tag,\\n      attributes = _objectWithoutPropertiesLoose(props, [\\\"className\\\", \\\"cssModule\\\", \\\"innerRef\\\", \\\"tag\\\"]);\\n\\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\\n  return React.createElement(Tag, _extends({}, attributes, {\\n    className: classes,\\n    ref: innerRef\\n  }));\\n};\\n\\nCardBody.propTypes = propTypes;\\nCardBody.defaultProps = defaultProps;\\nexport default CardBody;\",\"var isArray = require('./isArray'),\\n    isSymbol = require('./isSymbol');\\n/** Used to match property names within property paths. */\\n\\n\\nvar reIsDeepProp = /\\\\.|\\\\[(?:[^[\\\\]]*|([\\\"'])(?:(?!\\\\1)[^\\\\\\\\]|\\\\\\\\.)*?\\\\1)\\\\]/,\\n    reIsPlainProp = /^\\\\w*$/;\\n/**\\n * Checks if `value` is a property name and not a property path.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @param {Object} [object] The object to query keys on.\\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\\n */\\n\\nfunction isKey(value, object) {\\n  if (isArray(value)) {\\n    return false;\\n  }\\n\\n  var type = typeof value;\\n\\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\\n    return true;\\n  }\\n\\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\\n}\\n\\nmodule.exports = isKey;\",\"var defineProperty = require('./_defineProperty');\\n/**\\n * The base implementation of `assignValue` and `assignMergeValue` without\\n * value checks.\\n *\\n * @private\\n * @param {Object} object The object to modify.\\n * @param {string} key The key of the property to assign.\\n * @param {*} value The value to assign.\\n */\\n\\n\\nfunction baseAssignValue(object, key, value) {\\n  if (key == '__proto__' && defineProperty) {\\n    defineProperty(object, key, {\\n      'configurable': true,\\n      'enumerable': true,\\n      'value': value,\\n      'writable': true\\n    });\\n  } else {\\n    object[key] = value;\\n  }\\n}\\n\\nmodule.exports = baseAssignValue;\",\"/**\\n * This method returns the first argument it receives.\\n *\\n * @static\\n * @since 0.1.0\\n * @memberOf _\\n * @category Util\\n * @param {*} value Any value.\\n * @returns {*} Returns `value`.\\n * @example\\n *\\n * var object = { 'a': 1 };\\n *\\n * console.log(_.identity(object) === object);\\n * // => true\\n */\\nfunction identity(value) {\\n  return value;\\n}\\n\\nmodule.exports = identity;\",\"var isObject = require('./isObject');\\n/**\\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` if suitable for strict\\n *  equality comparisons, else `false`.\\n */\\n\\n\\nfunction isStrictComparable(value) {\\n  return value === value && !isObject(value);\\n}\\n\\nmodule.exports = isStrictComparable;\",\"/**\\n * A specialized version of `matchesProperty` for source values suitable\\n * for strict equality comparisons, i.e. `===`.\\n *\\n * @private\\n * @param {string} key The key of the property to get.\\n * @param {*} srcValue The value to match.\\n * @returns {Function} Returns the new spec function.\\n */\\nfunction matchesStrictComparable(key, srcValue) {\\n  return function (object) {\\n    if (object == null) {\\n      return false;\\n    }\\n\\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\\n  };\\n}\\n\\nmodule.exports = matchesStrictComparable;\",\"var castPath = require('./_castPath'),\\n    toKey = require('./_toKey');\\n/**\\n * The base implementation of `_.get` without support for default values.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {Array|string} path The path of the property to get.\\n * @returns {*} Returns the resolved value.\\n */\\n\\n\\nfunction baseGet(object, path) {\\n  path = castPath(path, object);\\n  var index = 0,\\n      length = path.length;\\n\\n  while (object != null && index < length) {\\n    object = object[toKey(path[index++])];\\n  }\\n\\n  return index && index == length ? object : undefined;\\n}\\n\\nmodule.exports = baseGet;\",\"var isArray = require('./isArray'),\\n    isKey = require('./_isKey'),\\n    stringToPath = require('./_stringToPath'),\\n    toString = require('./toString');\\n/**\\n * Casts `value` to a path array if it's not one.\\n *\\n * @private\\n * @param {*} value The value to inspect.\\n * @param {Object} [object] The object to query keys on.\\n * @returns {Array} Returns the cast property path array.\\n */\\n\\n\\nfunction castPath(value, object) {\\n  if (isArray(value)) {\\n    return value;\\n  }\\n\\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\\n}\\n\\nmodule.exports = castPath;\",\"var getNative = require('./_getNative');\\n\\nvar defineProperty = function () {\\n  try {\\n    var func = getNative(Object, 'defineProperty');\\n    func({}, '', {});\\n    return func;\\n  } catch (e) {}\\n}();\\n\\nmodule.exports = defineProperty;\",\"var createBaseFor = require('./_createBaseFor');\\n/**\\n * The base implementation of `baseForOwn` which iterates over `object`\\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\\n * Iteratee functions may exit iteration early by explicitly returning `false`.\\n *\\n * @private\\n * @param {Object} object The object to iterate over.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @param {Function} keysFunc The function to get the keys of `object`.\\n * @returns {Object} Returns `object`.\\n */\\n\\n\\nvar baseFor = createBaseFor();\\nmodule.exports = baseFor;\",\"/**\\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\\n *\\n * @private\\n * @param {boolean} [fromRight] Specify iterating from right to left.\\n * @returns {Function} Returns the new base function.\\n */\\nfunction createBaseFor(fromRight) {\\n  return function (object, iteratee, keysFunc) {\\n    var index = -1,\\n        iterable = Object(object),\\n        props = keysFunc(object),\\n        length = props.length;\\n\\n    while (length--) {\\n      var key = props[fromRight ? length : ++index];\\n\\n      if (iteratee(iterable[key], key, iterable) === false) {\\n        break;\\n      }\\n    }\\n\\n    return object;\\n  };\\n}\\n\\nmodule.exports = createBaseFor;\",\"var baseFor = require('./_baseFor'),\\n    keys = require('./keys');\\n/**\\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\\n *\\n * @private\\n * @param {Object} object The object to iterate over.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {Object} Returns `object`.\\n */\\n\\n\\nfunction baseForOwn(object, iteratee) {\\n  return object && baseFor(object, iteratee, keys);\\n}\\n\\nmodule.exports = baseForOwn;\",\"var baseMatches = require('./_baseMatches'),\\n    baseMatchesProperty = require('./_baseMatchesProperty'),\\n    identity = require('./identity'),\\n    isArray = require('./isArray'),\\n    property = require('./property');\\n/**\\n * The base implementation of `_.iteratee`.\\n *\\n * @private\\n * @param {*} [value=_.identity] The value to convert to an iteratee.\\n * @returns {Function} Returns the iteratee.\\n */\\n\\n\\nfunction baseIteratee(value) {\\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\\n  if (typeof value == 'function') {\\n    return value;\\n  }\\n\\n  if (value == null) {\\n    return identity;\\n  }\\n\\n  if (typeof value == 'object') {\\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\\n  }\\n\\n  return property(value);\\n}\\n\\nmodule.exports = baseIteratee;\",\"var baseIsMatch = require('./_baseIsMatch'),\\n    getMatchData = require('./_getMatchData'),\\n    matchesStrictComparable = require('./_matchesStrictComparable');\\n/**\\n * The base implementation of `_.matches` which doesn't clone `source`.\\n *\\n * @private\\n * @param {Object} source The object of property values to match.\\n * @returns {Function} Returns the new spec function.\\n */\\n\\n\\nfunction baseMatches(source) {\\n  var matchData = getMatchData(source);\\n\\n  if (matchData.length == 1 && matchData[0][2]) {\\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\\n  }\\n\\n  return function (object) {\\n    return object === source || baseIsMatch(object, source, matchData);\\n  };\\n}\\n\\nmodule.exports = baseMatches;\",\"var Stack = require('./_Stack'),\\n    baseIsEqual = require('./_baseIsEqual');\\n/** Used to compose bitmasks for value comparisons. */\\n\\n\\nvar COMPARE_PARTIAL_FLAG = 1,\\n    COMPARE_UNORDERED_FLAG = 2;\\n/**\\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\\n *\\n * @private\\n * @param {Object} object The object to inspect.\\n * @param {Object} source The object of property values to match.\\n * @param {Array} matchData The property names, values, and compare flags to match.\\n * @param {Function} [customizer] The function to customize comparisons.\\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\\n */\\n\\nfunction baseIsMatch(object, source, matchData, customizer) {\\n  var index = matchData.length,\\n      length = index,\\n      noCustomizer = !customizer;\\n\\n  if (object == null) {\\n    return !length;\\n  }\\n\\n  object = Object(object);\\n\\n  while (index--) {\\n    var data = matchData[index];\\n\\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\\n      return false;\\n    }\\n  }\\n\\n  while (++index < length) {\\n    data = matchData[index];\\n    var key = data[0],\\n        objValue = object[key],\\n        srcValue = data[1];\\n\\n    if (noCustomizer && data[2]) {\\n      if (objValue === undefined && !(key in object)) {\\n        return false;\\n      }\\n    } else {\\n      var stack = new Stack();\\n\\n      if (customizer) {\\n        var result = customizer(objValue, srcValue, key, object, source, stack);\\n      }\\n\\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\\n        return false;\\n      }\\n    }\\n  }\\n\\n  return true;\\n}\\n\\nmodule.exports = baseIsMatch;\",\"var isStrictComparable = require('./_isStrictComparable'),\\n    keys = require('./keys');\\n/**\\n * Gets the property names, values, and compare flags of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the match data of `object`.\\n */\\n\\n\\nfunction getMatchData(object) {\\n  var result = keys(object),\\n      length = result.length;\\n\\n  while (length--) {\\n    var key = result[length],\\n        value = object[key];\\n    result[length] = [key, value, isStrictComparable(value)];\\n  }\\n\\n  return result;\\n}\\n\\nmodule.exports = getMatchData;\",\"var baseIsEqual = require('./_baseIsEqual'),\\n    get = require('./get'),\\n    hasIn = require('./hasIn'),\\n    isKey = require('./_isKey'),\\n    isStrictComparable = require('./_isStrictComparable'),\\n    matchesStrictComparable = require('./_matchesStrictComparable'),\\n    toKey = require('./_toKey');\\n/** Used to compose bitmasks for value comparisons. */\\n\\n\\nvar COMPARE_PARTIAL_FLAG = 1,\\n    COMPARE_UNORDERED_FLAG = 2;\\n/**\\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\\n *\\n * @private\\n * @param {string} path The path of the property to get.\\n * @param {*} srcValue The value to match.\\n * @returns {Function} Returns the new spec function.\\n */\\n\\nfunction baseMatchesProperty(path, srcValue) {\\n  if (isKey(path) && isStrictComparable(srcValue)) {\\n    return matchesStrictComparable(toKey(path), srcValue);\\n  }\\n\\n  return function (object) {\\n    var objValue = get(object, path);\\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\\n  };\\n}\\n\\nmodule.exports = baseMatchesProperty;\",\"var baseGet = require('./_baseGet');\\n/**\\n * Gets the value at `path` of `object`. If the resolved value is\\n * `undefined`, the `defaultValue` is returned in its place.\\n *\\n * @static\\n * @memberOf _\\n * @since 3.7.0\\n * @category Object\\n * @param {Object} object The object to query.\\n * @param {Array|string} path The path of the property to get.\\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\\n * @returns {*} Returns the resolved value.\\n * @example\\n *\\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\\n *\\n * _.get(object, 'a[0].b.c');\\n * // => 3\\n *\\n * _.get(object, ['a', '0', 'b', 'c']);\\n * // => 3\\n *\\n * _.get(object, 'a.b.c', 'default');\\n * // => 'default'\\n */\\n\\n\\nfunction get(object, path, defaultValue) {\\n  var result = object == null ? undefined : baseGet(object, path);\\n  return result === undefined ? defaultValue : result;\\n}\\n\\nmodule.exports = get;\",\"var baseHasIn = require('./_baseHasIn'),\\n    hasPath = require('./_hasPath');\\n/**\\n * Checks if `path` is a direct or inherited property of `object`.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Object\\n * @param {Object} object The object to query.\\n * @param {Array|string} path The path to check.\\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\\n * @example\\n *\\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\\n *\\n * _.hasIn(object, 'a');\\n * // => true\\n *\\n * _.hasIn(object, 'a.b');\\n * // => true\\n *\\n * _.hasIn(object, ['a', 'b']);\\n * // => true\\n *\\n * _.hasIn(object, 'b');\\n * // => false\\n */\\n\\n\\nfunction hasIn(object, path) {\\n  return object != null && hasPath(object, path, baseHasIn);\\n}\\n\\nmodule.exports = hasIn;\",\"/**\\n * The base implementation of `_.hasIn` without support for deep paths.\\n *\\n * @private\\n * @param {Object} [object] The object to query.\\n * @param {Array|string} key The key to check.\\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\\n */\\nfunction baseHasIn(object, key) {\\n  return object != null && key in Object(object);\\n}\\n\\nmodule.exports = baseHasIn;\",\"var castPath = require('./_castPath'),\\n    isArguments = require('./isArguments'),\\n    isArray = require('./isArray'),\\n    isIndex = require('./_isIndex'),\\n    isLength = require('./isLength'),\\n    toKey = require('./_toKey');\\n/**\\n * Checks if `path` exists on `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {Array|string} path The path to check.\\n * @param {Function} hasFunc The function to check properties.\\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\\n */\\n\\n\\nfunction hasPath(object, path, hasFunc) {\\n  path = castPath(path, object);\\n  var index = -1,\\n      length = path.length,\\n      result = false;\\n\\n  while (++index < length) {\\n    var key = toKey(path[index]);\\n\\n    if (!(result = object != null && hasFunc(object, key))) {\\n      break;\\n    }\\n\\n    object = object[key];\\n  }\\n\\n  if (result || ++index != length) {\\n    return result;\\n  }\\n\\n  length = object == null ? 0 : object.length;\\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\\n}\\n\\nmodule.exports = hasPath;\",\"var baseProperty = require('./_baseProperty'),\\n    basePropertyDeep = require('./_basePropertyDeep'),\\n    isKey = require('./_isKey'),\\n    toKey = require('./_toKey');\\n/**\\n * Creates a function that returns the value at `path` of a given object.\\n *\\n * @static\\n * @memberOf _\\n * @since 2.4.0\\n * @category Util\\n * @param {Array|string} path The path of the property to get.\\n * @returns {Function} Returns the new accessor function.\\n * @example\\n *\\n * var objects = [\\n *   { 'a': { 'b': 2 } },\\n *   { 'a': { 'b': 1 } }\\n * ];\\n *\\n * _.map(objects, _.property('a.b'));\\n * // => [2, 1]\\n *\\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\\n * // => [1, 2]\\n */\\n\\n\\nfunction property(path) {\\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\\n}\\n\\nmodule.exports = property;\",\"/**\\n * The base implementation of `_.property` without support for deep paths.\\n *\\n * @private\\n * @param {string} key The key of the property to get.\\n * @returns {Function} Returns the new accessor function.\\n */\\nfunction baseProperty(key) {\\n  return function (object) {\\n    return object == null ? undefined : object[key];\\n  };\\n}\\n\\nmodule.exports = baseProperty;\",\"var baseGet = require('./_baseGet');\\n/**\\n * A specialized version of `baseProperty` which supports deep paths.\\n *\\n * @private\\n * @param {Array|string} path The path of the property to get.\\n * @returns {Function} Returns the new accessor function.\\n */\\n\\n\\nfunction basePropertyDeep(path) {\\n  return function (object) {\\n    return baseGet(object, path);\\n  };\\n}\\n\\nmodule.exports = basePropertyDeep;\",\"var _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];\\n\\n    for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }\\n\\n  return target;\\n};\\n\\nfunction _objectWithoutProperties(obj, keys) {\\n  var target = {};\\n\\n  for (var i in obj) {\\n    if (keys.indexOf(i) >= 0) continue;\\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\\n    target[i] = obj[i];\\n  }\\n\\n  return target;\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }\\n\\n  return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass);\\n  }\\n\\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\\n    constructor: {\\n      value: subClass,\\n      enumerable: false,\\n      writable: true,\\n      configurable: true\\n    }\\n  });\\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Chart from 'chart.js';\\nimport isEqual from 'lodash/isEqual';\\nimport keyBy from 'lodash/keyBy';\\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\\n\\nvar ChartComponent = function (_React$Component) {\\n  _inherits(ChartComponent, _React$Component);\\n\\n  function ChartComponent() {\\n    var _temp, _this, _ret;\\n\\n    _classCallCheck(this, ChartComponent);\\n\\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\\n      var instance = _this.chartInstance;\\n      var _this$props = _this.props,\\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\\n          getElementAtEvent = _this$props.getElementAtEvent,\\n          getElementsAtEvent = _this$props.getElementsAtEvent,\\n          onElementsClick = _this$props.onElementsClick;\\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\\n    }, _this.ref = function (element) {\\n      _this.element = element;\\n    }, _temp), _possibleConstructorReturn(_this, _ret);\\n  }\\n\\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\\n    this.chartInstance = undefined;\\n  };\\n\\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\\n    this.renderChart();\\n  };\\n\\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\\n    if (this.props.redraw) {\\n      this.destroyChart();\\n      this.renderChart();\\n      return;\\n    }\\n\\n    this.updateChart();\\n  };\\n\\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\\n    var _props = this.props,\\n        redraw = _props.redraw,\\n        type = _props.type,\\n        options = _props.options,\\n        plugins = _props.plugins,\\n        legend = _props.legend,\\n        height = _props.height,\\n        width = _props.width;\\n\\n    if (nextProps.redraw === true) {\\n      return true;\\n    }\\n\\n    if (height !== nextProps.height || width !== nextProps.width) {\\n      return true;\\n    }\\n\\n    if (type !== nextProps.type) {\\n      return true;\\n    }\\n\\n    if (!isEqual(legend, nextProps.legend)) {\\n      return true;\\n    }\\n\\n    if (!isEqual(options, nextProps.options)) {\\n      return true;\\n    }\\n\\n    var nextData = this.transformDataProp(nextProps);\\n\\n    if (!isEqual(this.shadowDataProp, nextData)) {\\n      return true;\\n    }\\n\\n    return !isEqual(plugins, nextProps.plugins);\\n  };\\n\\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\\n    this.destroyChart();\\n  };\\n\\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\\n    var data = props.data;\\n\\n    if (typeof data == 'function') {\\n      var node = this.element;\\n      return data(node);\\n    } else {\\n      return data;\\n    }\\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\\n  // this makes impossible to compare the current and next data changes\\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\\n\\n\\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\\n    if (!this.props.data) {\\n      return;\\n    }\\n\\n    var data = this.transformDataProp(this.props);\\n    this.shadowDataProp = _extends({}, data, {\\n      datasets: data.datasets && data.datasets.map(function (set) {\\n        return _extends({}, set);\\n      })\\n    });\\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\\n\\n    return data;\\n  };\\n\\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\\n    var multipleDatasets = datasets.length > 1;\\n\\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\\n      var shouldWarn = false;\\n      datasets.forEach(function (dataset) {\\n        if (!dataset.label) {\\n          shouldWarn = true;\\n        }\\n      });\\n\\n      if (shouldWarn) {\\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \\\"label\\\" property on each dataset is used. Alternatively, you may provide a \\\"datasetKeyProvider\\\" as a prop that returns a unique key.');\\n      }\\n    }\\n  };\\n\\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\\n  };\\n\\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\\n    var _this2 = this;\\n\\n    this.datasets = this.datasets || {};\\n    var currentDatasets = this.getCurrentDatasets();\\n    currentDatasets.forEach(function (d) {\\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\\n    });\\n  };\\n\\n  ChartComponent.prototype.updateChart = function updateChart() {\\n    var _this3 = this;\\n\\n    var options = this.props.options;\\n    var data = this.memoizeDataProps(this.props);\\n    if (!this.chartInstance) return;\\n\\n    if (options) {\\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\\n    } // Pipe datasets to chart instance datasets enabling\\n    // seamless transitions\\n\\n\\n    var currentDatasets = this.getCurrentDatasets();\\n    var nextDatasets = data.datasets || [];\\n    this.checkDatasets(currentDatasets);\\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\\n    // on each dataset.\\n\\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\\n\\n      if (current && current.type === next.type) {\\n        // The data array must be edited in place. As chart.js adds listeners to it.\\n        current.data.splice(next.data.length);\\n        next.data.forEach(function (point, pid) {\\n          current.data[pid] = next.data[pid];\\n        });\\n\\n        var _data = next.data,\\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\\n        // from next, it will be retained by current and never disappears.\\n        // Workaround is to set value to null or undefined in next.\\n\\n\\n        return _extends({}, current, otherProps);\\n      } else {\\n        return next;\\n      }\\n    });\\n\\n    var datasets = data.datasets,\\n        rest = _objectWithoutProperties(data, ['datasets']);\\n\\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\\n    this.chartInstance.update();\\n  };\\n\\n  ChartComponent.prototype.renderChart = function renderChart() {\\n    var _props2 = this.props,\\n        options = _props2.options,\\n        legend = _props2.legend,\\n        type = _props2.type,\\n        plugins = _props2.plugins;\\n    var node = this.element;\\n    var data = this.memoizeDataProps();\\n\\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\\n      options.legend = legend;\\n    }\\n\\n    this.chartInstance = new Chart(node, {\\n      type: type,\\n      data: data,\\n      options: options,\\n      plugins: plugins\\n    });\\n  };\\n\\n  ChartComponent.prototype.destroyChart = function destroyChart() {\\n    // Put all of the datasets that have existed in the chart back on the chart\\n    // so that the metadata associated with this chart get destroyed.\\n    // This allows the datasets to be used in another chart. This can happen,\\n    // for example, in a tabbed UI where the chart gets created each time the\\n    // tab gets switched to the chart and uses the same data).\\n    this.saveCurrentDatasets();\\n    var datasets = Object.values(this.datasets);\\n    this.chartInstance.config.data.datasets = datasets;\\n    this.chartInstance.destroy();\\n  };\\n\\n  ChartComponent.prototype.render = function render() {\\n    var _props3 = this.props,\\n        height = _props3.height,\\n        width = _props3.width,\\n        id = _props3.id;\\n    return React.createElement('canvas', {\\n      ref: this.ref,\\n      height: height,\\n      width: width,\\n      id: id,\\n      onClick: this.handleOnClick\\n    });\\n  };\\n\\n  return ChartComponent;\\n}(React.Component);\\n\\nChartComponent.getLabelAsKey = function (d) {\\n  return d.label;\\n};\\n\\nChartComponent.propTypes = {\\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\\n  getDatasetAtEvent: PropTypes.func,\\n  getElementAtEvent: PropTypes.func,\\n  getElementsAtEvent: PropTypes.func,\\n  height: PropTypes.number,\\n  legend: PropTypes.object,\\n  onElementsClick: PropTypes.func,\\n  options: PropTypes.object,\\n  plugins: PropTypes.arrayOf(PropTypes.object),\\n  redraw: PropTypes.bool,\\n  type: function type(props, propName, componentName) {\\n    if (!Chart.controllers[props[propName]]) {\\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\\n    }\\n  },\\n  width: PropTypes.number,\\n  datasetKeyProvider: PropTypes.func\\n};\\nChartComponent.defaultProps = {\\n  legend: {\\n    display: true,\\n    position: 'bottom'\\n  },\\n  type: 'doughnut',\\n  height: 150,\\n  width: 300,\\n  redraw: false,\\n  options: {},\\n  datasetKeyProvider: ChartComponent.getLabelAsKey\\n};\\nexport default ChartComponent;\\nexport var Doughnut = function (_React$Component2) {\\n  _inherits(Doughnut, _React$Component2);\\n\\n  function Doughnut() {\\n    _classCallCheck(this, Doughnut);\\n\\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\\n  }\\n\\n  Doughnut.prototype.render = function render() {\\n    var _this5 = this;\\n\\n    return React.createElement(ChartComponent, _extends({}, this.props, {\\n      ref: function ref(_ref) {\\n        return _this5.chartInstance = _ref && _ref.chartInstance;\\n      },\\n      type: 'doughnut'\\n    }));\\n  };\\n\\n  return Doughnut;\\n}(React.Component);\\nexport var Pie = function (_React$Component3) {\\n  _inherits(Pie, _React$Component3);\\n\\n  function Pie() {\\n    _classCallCheck(this, Pie);\\n\\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\\n  }\\n\\n  Pie.prototype.render = function render() {\\n    var _this7 = this;\\n\\n    return React.createElement(ChartComponent, _extends({}, this.props, {\\n      ref: function ref(_ref2) {\\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\\n      },\\n      type: 'pie'\\n    }));\\n  };\\n\\n  return Pie;\\n}(React.Component);\\nexport var Line = function (_React$Component4) {\\n  _inherits(Line, _React$Component4);\\n\\n  function Line() {\\n    _classCallCheck(this, Line);\\n\\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\\n  }\\n\\n  Line.prototype.render = function render() {\\n    var _this9 = this;\\n\\n    return React.createElement(ChartComponent, _extends({}, this.props, {\\n      ref: function ref(_ref3) {\\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\\n      },\\n      type: 'line'\\n    }));\\n  };\\n\\n  return Line;\\n}(React.Component);\\nexport var Bar = function (_React$Component5) {\\n  _inherits(Bar, _React$Component5);\\n\\n  function Bar() {\\n    _classCallCheck(this, Bar);\\n\\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\\n  }\\n\\n  Bar.prototype.render = function render() {\\n    var _this11 = this;\\n\\n    return React.createElement(ChartComponent, _extends({}, this.props, {\\n      ref: function ref(_ref4) {\\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\\n      },\\n      type: 'bar'\\n    }));\\n  };\\n\\n  return Bar;\\n}(React.Component);\\nexport var HorizontalBar = function (_React$Component6) {\\n  _inherits(HorizontalBar, _React$Component6);\\n\\n  function HorizontalBar() {\\n    _classCallCheck(this, HorizontalBar);\\n\\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\\n  }\\n\\n  HorizontalBar.prototype.render = function render() {\\n    var _this13 = this;\\n\\n    return React.createElement(ChartComponent, _extends({}, this.props, {\\n      ref: function ref(_ref5) {\\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\\n      },\\n      type: 'horizontalBar'\\n    }));\\n  };\\n\\n  return HorizontalBar;\\n}(React.Component);\\nexport var Radar = function (_React$Component7) {\\n  _inherits(Radar, _React$Component7);\\n\\n  function Radar() {\\n    _classCallCheck(this, Radar);\\n\\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\\n  }\\n\\n  Radar.prototype.render = function render() {\\n    var _this15 = this;\\n\\n    return React.createElement(ChartComponent, _extends({}, this.props, {\\n      ref: function ref(_ref6) {\\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\\n      },\\n      type: 'radar'\\n    }));\\n  };\\n\\n  return Radar;\\n}(React.Component);\\nexport var Polar = function (_React$Component8) {\\n  _inherits(Polar, _React$Component8);\\n\\n  function Polar() {\\n    _classCallCheck(this, Polar);\\n\\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\\n  }\\n\\n  Polar.prototype.render = function render() {\\n    var _this17 = this;\\n\\n    return React.createElement(ChartComponent, _extends({}, this.props, {\\n      ref: function ref(_ref7) {\\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\\n      },\\n      type: 'polarArea'\\n    }));\\n  };\\n\\n  return Polar;\\n}(React.Component);\\nexport var Bubble = function (_React$Component9) {\\n  _inherits(Bubble, _React$Component9);\\n\\n  function Bubble() {\\n    _classCallCheck(this, Bubble);\\n\\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\\n  }\\n\\n  Bubble.prototype.render = function render() {\\n    var _this19 = this;\\n\\n    return React.createElement(ChartComponent, _extends({}, this.props, {\\n      ref: function ref(_ref8) {\\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\\n      },\\n      type: 'bubble'\\n    }));\\n  };\\n\\n  return Bubble;\\n}(React.Component);\\nexport var Scatter = function (_React$Component10) {\\n  _inherits(Scatter, _React$Component10);\\n\\n  function Scatter() {\\n    _classCallCheck(this, Scatter);\\n\\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\\n  }\\n\\n  Scatter.prototype.render = function render() {\\n    var _this21 = this;\\n\\n    return React.createElement(ChartComponent, _extends({}, this.props, {\\n      ref: function ref(_ref9) {\\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\\n      },\\n      type: 'scatter'\\n    }));\\n  };\\n\\n  return Scatter;\\n}(React.Component);\\nexport var defaults = Chart.defaults;\\nexport { Chart };\",\"/*!\\n * Chart.js v2.8.0\\n * https://www.chartjs.org\\n * (c) 2019 Chart.js Contributors\\n * Released under the MIT License\\n */\\n(function (global, factory) {\\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\\n    try {\\n      return require('moment');\\n    } catch (e) {}\\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\\n    return factory(function () {\\n      try {\\n        return require('moment');\\n      } catch (e) {}\\n    }());\\n  }) : global.Chart = factory(global.moment);\\n})(this, function (moment) {\\n  'use strict';\\n\\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\\n  /* MIT license */\\n\\n  var conversions = {\\n    rgb2hsl: rgb2hsl,\\n    rgb2hsv: rgb2hsv,\\n    rgb2hwb: rgb2hwb,\\n    rgb2cmyk: rgb2cmyk,\\n    rgb2keyword: rgb2keyword,\\n    rgb2xyz: rgb2xyz,\\n    rgb2lab: rgb2lab,\\n    rgb2lch: rgb2lch,\\n    hsl2rgb: hsl2rgb,\\n    hsl2hsv: hsl2hsv,\\n    hsl2hwb: hsl2hwb,\\n    hsl2cmyk: hsl2cmyk,\\n    hsl2keyword: hsl2keyword,\\n    hsv2rgb: hsv2rgb,\\n    hsv2hsl: hsv2hsl,\\n    hsv2hwb: hsv2hwb,\\n    hsv2cmyk: hsv2cmyk,\\n    hsv2keyword: hsv2keyword,\\n    hwb2rgb: hwb2rgb,\\n    hwb2hsl: hwb2hsl,\\n    hwb2hsv: hwb2hsv,\\n    hwb2cmyk: hwb2cmyk,\\n    hwb2keyword: hwb2keyword,\\n    cmyk2rgb: cmyk2rgb,\\n    cmyk2hsl: cmyk2hsl,\\n    cmyk2hsv: cmyk2hsv,\\n    cmyk2hwb: cmyk2hwb,\\n    cmyk2keyword: cmyk2keyword,\\n    keyword2rgb: keyword2rgb,\\n    keyword2hsl: keyword2hsl,\\n    keyword2hsv: keyword2hsv,\\n    keyword2hwb: keyword2hwb,\\n    keyword2cmyk: keyword2cmyk,\\n    keyword2lab: keyword2lab,\\n    keyword2xyz: keyword2xyz,\\n    xyz2rgb: xyz2rgb,\\n    xyz2lab: xyz2lab,\\n    xyz2lch: xyz2lch,\\n    lab2xyz: lab2xyz,\\n    lab2rgb: lab2rgb,\\n    lab2lch: lab2lch,\\n    lch2lab: lch2lab,\\n    lch2xyz: lch2xyz,\\n    lch2rgb: lch2rgb\\n  };\\n\\n  function rgb2hsl(rgb) {\\n    var r = rgb[0] / 255,\\n        g = rgb[1] / 255,\\n        b = rgb[2] / 255,\\n        min = Math.min(r, g, b),\\n        max = Math.max(r, g, b),\\n        delta = max - min,\\n        h,\\n        s,\\n        l;\\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\\n    h = Math.min(h * 60, 360);\\n    if (h < 0) h += 360;\\n    l = (min + max) / 2;\\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\\n    return [h, s * 100, l * 100];\\n  }\\n\\n  function rgb2hsv(rgb) {\\n    var r = rgb[0],\\n        g = rgb[1],\\n        b = rgb[2],\\n        min = Math.min(r, g, b),\\n        max = Math.max(r, g, b),\\n        delta = max - min,\\n        h,\\n        s,\\n        v;\\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\\n    h = Math.min(h * 60, 360);\\n    if (h < 0) h += 360;\\n    v = max / 255 * 1000 / 10;\\n    return [h, s, v];\\n  }\\n\\n  function rgb2hwb(rgb) {\\n    var r = rgb[0],\\n        g = rgb[1],\\n        b = rgb[2],\\n        h = rgb2hsl(rgb)[0],\\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\\n    return [h, w * 100, b * 100];\\n  }\\n\\n  function rgb2cmyk(rgb) {\\n    var r = rgb[0] / 255,\\n        g = rgb[1] / 255,\\n        b = rgb[2] / 255,\\n        c,\\n        m,\\n        y,\\n        k;\\n    k = Math.min(1 - r, 1 - g, 1 - b);\\n    c = (1 - r - k) / (1 - k) || 0;\\n    m = (1 - g - k) / (1 - k) || 0;\\n    y = (1 - b - k) / (1 - k) || 0;\\n    return [c * 100, m * 100, y * 100, k * 100];\\n  }\\n\\n  function rgb2keyword(rgb) {\\n    return reverseKeywords[JSON.stringify(rgb)];\\n  }\\n\\n  function rgb2xyz(rgb) {\\n    var r = rgb[0] / 255,\\n        g = rgb[1] / 255,\\n        b = rgb[2] / 255; // assume sRGB\\n\\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\\n    return [x * 100, y * 100, z * 100];\\n  }\\n\\n  function rgb2lab(rgb) {\\n    var xyz = rgb2xyz(rgb),\\n        x = xyz[0],\\n        y = xyz[1],\\n        z = xyz[2],\\n        l,\\n        a,\\n        b;\\n    x /= 95.047;\\n    y /= 100;\\n    z /= 108.883;\\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\\n    l = 116 * y - 16;\\n    a = 500 * (x - y);\\n    b = 200 * (y - z);\\n    return [l, a, b];\\n  }\\n\\n  function rgb2lch(args) {\\n    return lab2lch(rgb2lab(args));\\n  }\\n\\n  function hsl2rgb(hsl) {\\n    var h = hsl[0] / 360,\\n        s = hsl[1] / 100,\\n        l = hsl[2] / 100,\\n        t1,\\n        t2,\\n        t3,\\n        rgb,\\n        val;\\n\\n    if (s == 0) {\\n      val = l * 255;\\n      return [val, val, val];\\n    }\\n\\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\\n    t1 = 2 * l - t2;\\n    rgb = [0, 0, 0];\\n\\n    for (var i = 0; i < 3; i++) {\\n      t3 = h + 1 / 3 * -(i - 1);\\n      t3 < 0 && t3++;\\n      t3 > 1 && t3--;\\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\\n      rgb[i] = val * 255;\\n    }\\n\\n    return rgb;\\n  }\\n\\n  function hsl2hsv(hsl) {\\n    var h = hsl[0],\\n        s = hsl[1] / 100,\\n        l = hsl[2] / 100,\\n        sv,\\n        v;\\n\\n    if (l === 0) {\\n      // no need to do calc on black\\n      // also avoids divide by 0 error\\n      return [0, 0, 0];\\n    }\\n\\n    l *= 2;\\n    s *= l <= 1 ? l : 2 - l;\\n    v = (l + s) / 2;\\n    sv = 2 * s / (l + s);\\n    return [h, sv * 100, v * 100];\\n  }\\n\\n  function hsl2hwb(args) {\\n    return rgb2hwb(hsl2rgb(args));\\n  }\\n\\n  function hsl2cmyk(args) {\\n    return rgb2cmyk(hsl2rgb(args));\\n  }\\n\\n  function hsl2keyword(args) {\\n    return rgb2keyword(hsl2rgb(args));\\n  }\\n\\n  function hsv2rgb(hsv) {\\n    var h = hsv[0] / 60,\\n        s = hsv[1] / 100,\\n        v = hsv[2] / 100,\\n        hi = Math.floor(h) % 6;\\n    var f = h - Math.floor(h),\\n        p = 255 * v * (1 - s),\\n        q = 255 * v * (1 - s * f),\\n        t = 255 * v * (1 - s * (1 - f)),\\n        v = 255 * v;\\n\\n    switch (hi) {\\n      case 0:\\n        return [v, t, p];\\n\\n      case 1:\\n        return [q, v, p];\\n\\n      case 2:\\n        return [p, v, t];\\n\\n      case 3:\\n        return [p, q, v];\\n\\n      case 4:\\n        return [t, p, v];\\n\\n      case 5:\\n        return [v, p, q];\\n    }\\n  }\\n\\n  function hsv2hsl(hsv) {\\n    var h = hsv[0],\\n        s = hsv[1] / 100,\\n        v = hsv[2] / 100,\\n        sl,\\n        l;\\n    l = (2 - s) * v;\\n    sl = s * v;\\n    sl /= l <= 1 ? l : 2 - l;\\n    sl = sl || 0;\\n    l /= 2;\\n    return [h, sl * 100, l * 100];\\n  }\\n\\n  function hsv2hwb(args) {\\n    return rgb2hwb(hsv2rgb(args));\\n  }\\n\\n  function hsv2cmyk(args) {\\n    return rgb2cmyk(hsv2rgb(args));\\n  }\\n\\n  function hsv2keyword(args) {\\n    return rgb2keyword(hsv2rgb(args));\\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\\n\\n\\n  function hwb2rgb(hwb) {\\n    var h = hwb[0] / 360,\\n        wh = hwb[1] / 100,\\n        bl = hwb[2] / 100,\\n        ratio = wh + bl,\\n        i,\\n        v,\\n        f,\\n        n; // wh + bl cant be > 1\\n\\n    if (ratio > 1) {\\n      wh /= ratio;\\n      bl /= ratio;\\n    }\\n\\n    i = Math.floor(6 * h);\\n    v = 1 - bl;\\n    f = 6 * h - i;\\n\\n    if ((i & 0x01) != 0) {\\n      f = 1 - f;\\n    }\\n\\n    n = wh + f * (v - wh); // linear interpolation\\n\\n    switch (i) {\\n      default:\\n      case 6:\\n      case 0:\\n        r = v;\\n        g = n;\\n        b = wh;\\n        break;\\n\\n      case 1:\\n        r = n;\\n        g = v;\\n        b = wh;\\n        break;\\n\\n      case 2:\\n        r = wh;\\n        g = v;\\n        b = n;\\n        break;\\n\\n      case 3:\\n        r = wh;\\n        g = n;\\n        b = v;\\n        break;\\n\\n      case 4:\\n        r = n;\\n        g = wh;\\n        b = v;\\n        break;\\n\\n      case 5:\\n        r = v;\\n        g = wh;\\n        b = n;\\n        break;\\n    }\\n\\n    return [r * 255, g * 255, b * 255];\\n  }\\n\\n  function hwb2hsl(args) {\\n    return rgb2hsl(hwb2rgb(args));\\n  }\\n\\n  function hwb2hsv(args) {\\n    return rgb2hsv(hwb2rgb(args));\\n  }\\n\\n  function hwb2cmyk(args) {\\n    return rgb2cmyk(hwb2rgb(args));\\n  }\\n\\n  function hwb2keyword(args) {\\n    return rgb2keyword(hwb2rgb(args));\\n  }\\n\\n  function cmyk2rgb(cmyk) {\\n    var c = cmyk[0] / 100,\\n        m = cmyk[1] / 100,\\n        y = cmyk[2] / 100,\\n        k = cmyk[3] / 100,\\n        r,\\n        g,\\n        b;\\n    r = 1 - Math.min(1, c * (1 - k) + k);\\n    g = 1 - Math.min(1, m * (1 - k) + k);\\n    b = 1 - Math.min(1, y * (1 - k) + k);\\n    return [r * 255, g * 255, b * 255];\\n  }\\n\\n  function cmyk2hsl(args) {\\n    return rgb2hsl(cmyk2rgb(args));\\n  }\\n\\n  function cmyk2hsv(args) {\\n    return rgb2hsv(cmyk2rgb(args));\\n  }\\n\\n  function cmyk2hwb(args) {\\n    return rgb2hwb(cmyk2rgb(args));\\n  }\\n\\n  function cmyk2keyword(args) {\\n    return rgb2keyword(cmyk2rgb(args));\\n  }\\n\\n  function xyz2rgb(xyz) {\\n    var x = xyz[0] / 100,\\n        y = xyz[1] / 100,\\n        z = xyz[2] / 100,\\n        r,\\n        g,\\n        b;\\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\\n\\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\\n    r = Math.min(Math.max(0, r), 1);\\n    g = Math.min(Math.max(0, g), 1);\\n    b = Math.min(Math.max(0, b), 1);\\n    return [r * 255, g * 255, b * 255];\\n  }\\n\\n  function xyz2lab(xyz) {\\n    var x = xyz[0],\\n        y = xyz[1],\\n        z = xyz[2],\\n        l,\\n        a,\\n        b;\\n    x /= 95.047;\\n    y /= 100;\\n    z /= 108.883;\\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\\n    l = 116 * y - 16;\\n    a = 500 * (x - y);\\n    b = 200 * (y - z);\\n    return [l, a, b];\\n  }\\n\\n  function xyz2lch(args) {\\n    return lab2lch(xyz2lab(args));\\n  }\\n\\n  function lab2xyz(lab) {\\n    var l = lab[0],\\n        a = lab[1],\\n        b = lab[2],\\n        x,\\n        y,\\n        z,\\n        y2;\\n\\n    if (l <= 8) {\\n      y = l * 100 / 903.3;\\n      y2 = 7.787 * (y / 100) + 16 / 116;\\n    } else {\\n      y = 100 * Math.pow((l + 16) / 116, 3);\\n      y2 = Math.pow(y / 100, 1 / 3);\\n    }\\n\\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\\n    return [x, y, z];\\n  }\\n\\n  function lab2lch(lab) {\\n    var l = lab[0],\\n        a = lab[1],\\n        b = lab[2],\\n        hr,\\n        h,\\n        c;\\n    hr = Math.atan2(b, a);\\n    h = hr * 360 / 2 / Math.PI;\\n\\n    if (h < 0) {\\n      h += 360;\\n    }\\n\\n    c = Math.sqrt(a * a + b * b);\\n    return [l, c, h];\\n  }\\n\\n  function lab2rgb(args) {\\n    return xyz2rgb(lab2xyz(args));\\n  }\\n\\n  function lch2lab(lch) {\\n    var l = lch[0],\\n        c = lch[1],\\n        h = lch[2],\\n        a,\\n        b,\\n        hr;\\n    hr = h / 360 * 2 * Math.PI;\\n    a = c * Math.cos(hr);\\n    b = c * Math.sin(hr);\\n    return [l, a, b];\\n  }\\n\\n  function lch2xyz(args) {\\n    return lab2xyz(lch2lab(args));\\n  }\\n\\n  function lch2rgb(args) {\\n    return lab2rgb(lch2lab(args));\\n  }\\n\\n  function keyword2rgb(keyword) {\\n    return cssKeywords[keyword];\\n  }\\n\\n  function keyword2hsl(args) {\\n    return rgb2hsl(keyword2rgb(args));\\n  }\\n\\n  function keyword2hsv(args) {\\n    return rgb2hsv(keyword2rgb(args));\\n  }\\n\\n  function keyword2hwb(args) {\\n    return rgb2hwb(keyword2rgb(args));\\n  }\\n\\n  function keyword2cmyk(args) {\\n    return rgb2cmyk(keyword2rgb(args));\\n  }\\n\\n  function keyword2lab(args) {\\n    return rgb2lab(keyword2rgb(args));\\n  }\\n\\n  function keyword2xyz(args) {\\n    return rgb2xyz(keyword2rgb(args));\\n  }\\n\\n  var cssKeywords = {\\n    aliceblue: [240, 248, 255],\\n    antiquewhite: [250, 235, 215],\\n    aqua: [0, 255, 255],\\n    aquamarine: [127, 255, 212],\\n    azure: [240, 255, 255],\\n    beige: [245, 245, 220],\\n    bisque: [255, 228, 196],\\n    black: [0, 0, 0],\\n    blanchedalmond: [255, 235, 205],\\n    blue: [0, 0, 255],\\n    blueviolet: [138, 43, 226],\\n    brown: [165, 42, 42],\\n    burlywood: [222, 184, 135],\\n    cadetblue: [95, 158, 160],\\n    chartreuse: [127, 255, 0],\\n    chocolate: [210, 105, 30],\\n    coral: [255, 127, 80],\\n    cornflowerblue: [100, 149, 237],\\n    cornsilk: [255, 248, 220],\\n    crimson: [220, 20, 60],\\n    cyan: [0, 255, 255],\\n    darkblue: [0, 0, 139],\\n    darkcyan: [0, 139, 139],\\n    darkgoldenrod: [184, 134, 11],\\n    darkgray: [169, 169, 169],\\n    darkgreen: [0, 100, 0],\\n    darkgrey: [169, 169, 169],\\n    darkkhaki: [189, 183, 107],\\n    darkmagenta: [139, 0, 139],\\n    darkolivegreen: [85, 107, 47],\\n    darkorange: [255, 140, 0],\\n    darkorchid: [153, 50, 204],\\n    darkred: [139, 0, 0],\\n    darksalmon: [233, 150, 122],\\n    darkseagreen: [143, 188, 143],\\n    darkslateblue: [72, 61, 139],\\n    darkslategray: [47, 79, 79],\\n    darkslategrey: [47, 79, 79],\\n    darkturquoise: [0, 206, 209],\\n    darkviolet: [148, 0, 211],\\n    deeppink: [255, 20, 147],\\n    deepskyblue: [0, 191, 255],\\n    dimgray: [105, 105, 105],\\n    dimgrey: [105, 105, 105],\\n    dodgerblue: [30, 144, 255],\\n    firebrick: [178, 34, 34],\\n    floralwhite: [255, 250, 240],\\n    forestgreen: [34, 139, 34],\\n    fuchsia: [255, 0, 255],\\n    gainsboro: [220, 220, 220],\\n    ghostwhite: [248, 248, 255],\\n    gold: [255, 215, 0],\\n    goldenrod: [218, 165, 32],\\n    gray: [128, 128, 128],\\n    green: [0, 128, 0],\\n    greenyellow: [173, 255, 47],\\n    grey: [128, 128, 128],\\n    honeydew: [240, 255, 240],\\n    hotpink: [255, 105, 180],\\n    indianred: [205, 92, 92],\\n    indigo: [75, 0, 130],\\n    ivory: [255, 255, 240],\\n    khaki: [240, 230, 140],\\n    lavender: [230, 230, 250],\\n    lavenderblush: [255, 240, 245],\\n    lawngreen: [124, 252, 0],\\n    lemonchiffon: [255, 250, 205],\\n    lightblue: [173, 216, 230],\\n    lightcoral: [240, 128, 128],\\n    lightcyan: [224, 255, 255],\\n    lightgoldenrodyellow: [250, 250, 210],\\n    lightgray: [211, 211, 211],\\n    lightgreen: [144, 238, 144],\\n    lightgrey: [211, 211, 211],\\n    lightpink: [255, 182, 193],\\n    lightsalmon: [255, 160, 122],\\n    lightseagreen: [32, 178, 170],\\n    lightskyblue: [135, 206, 250],\\n    lightslategray: [119, 136, 153],\\n    lightslategrey: [119, 136, 153],\\n    lightsteelblue: [176, 196, 222],\\n    lightyellow: [255, 255, 224],\\n    lime: [0, 255, 0],\\n    limegreen: [50, 205, 50],\\n    linen: [250, 240, 230],\\n    magenta: [255, 0, 255],\\n    maroon: [128, 0, 0],\\n    mediumaquamarine: [102, 205, 170],\\n    mediumblue: [0, 0, 205],\\n    mediumorchid: [186, 85, 211],\\n    mediumpurple: [147, 112, 219],\\n    mediumseagreen: [60, 179, 113],\\n    mediumslateblue: [123, 104, 238],\\n    mediumspringgreen: [0, 250, 154],\\n    mediumturquoise: [72, 209, 204],\\n    mediumvioletred: [199, 21, 133],\\n    midnightblue: [25, 25, 112],\\n    mintcream: [245, 255, 250],\\n    mistyrose: [255, 228, 225],\\n    moccasin: [255, 228, 181],\\n    navajowhite: [255, 222, 173],\\n    navy: [0, 0, 128],\\n    oldlace: [253, 245, 230],\\n    olive: [128, 128, 0],\\n    olivedrab: [107, 142, 35],\\n    orange: [255, 165, 0],\\n    orangered: [255, 69, 0],\\n    orchid: [218, 112, 214],\\n    palegoldenrod: [238, 232, 170],\\n    palegreen: [152, 251, 152],\\n    paleturquoise: [175, 238, 238],\\n    palevioletred: [219, 112, 147],\\n    papayawhip: [255, 239, 213],\\n    peachpuff: [255, 218, 185],\\n    peru: [205, 133, 63],\\n    pink: [255, 192, 203],\\n    plum: [221, 160, 221],\\n    powderblue: [176, 224, 230],\\n    purple: [128, 0, 128],\\n    rebeccapurple: [102, 51, 153],\\n    red: [255, 0, 0],\\n    rosybrown: [188, 143, 143],\\n    royalblue: [65, 105, 225],\\n    saddlebrown: [139, 69, 19],\\n    salmon: [250, 128, 114],\\n    sandybrown: [244, 164, 96],\\n    seagreen: [46, 139, 87],\\n    seashell: [255, 245, 238],\\n    sienna: [160, 82, 45],\\n    silver: [192, 192, 192],\\n    skyblue: [135, 206, 235],\\n    slateblue: [106, 90, 205],\\n    slategray: [112, 128, 144],\\n    slategrey: [112, 128, 144],\\n    snow: [255, 250, 250],\\n    springgreen: [0, 255, 127],\\n    steelblue: [70, 130, 180],\\n    tan: [210, 180, 140],\\n    teal: [0, 128, 128],\\n    thistle: [216, 191, 216],\\n    tomato: [255, 99, 71],\\n    turquoise: [64, 224, 208],\\n    violet: [238, 130, 238],\\n    wheat: [245, 222, 179],\\n    white: [255, 255, 255],\\n    whitesmoke: [245, 245, 245],\\n    yellow: [255, 255, 0],\\n    yellowgreen: [154, 205, 50]\\n  };\\n  var reverseKeywords = {};\\n\\n  for (var key in cssKeywords) {\\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\\n  }\\n\\n  var convert = function convert() {\\n    return new Converter();\\n  };\\n\\n  for (var func in conversions) {\\n    // export Raw versions\\n    convert[func + \\\"Raw\\\"] = function (func) {\\n      // accept array or plain args\\n      return function (arg) {\\n        if (typeof arg == \\\"number\\\") arg = Array.prototype.slice.call(arguments);\\n        return conversions[func](arg);\\n      };\\n    }(func);\\n\\n    var pair = /(\\\\w+)2(\\\\w+)/.exec(func),\\n        from = pair[1],\\n        to = pair[2]; // export rgb2hsl and [\\\"rgb\\\"][\\\"hsl\\\"]\\n\\n    convert[from] = convert[from] || {};\\n\\n    convert[from][to] = convert[func] = function (func) {\\n      return function (arg) {\\n        if (typeof arg == \\\"number\\\") arg = Array.prototype.slice.call(arguments);\\n        var val = conversions[func](arg);\\n        if (typeof val == \\\"string\\\" || val === undefined) return val; // keyword\\n\\n        for (var i = 0; i < val.length; i++) {\\n          val[i] = Math.round(val[i]);\\n        }\\n\\n        return val;\\n      };\\n    }(func);\\n  }\\n  /* Converter does lazy conversion and caching */\\n\\n\\n  var Converter = function Converter() {\\n    this.convs = {};\\n  };\\n  /* Either get the values for a space or\\n    set the values for a space, depending on args */\\n\\n\\n  Converter.prototype.routeSpace = function (space, args) {\\n    var values = args[0];\\n\\n    if (values === undefined) {\\n      // color.rgb()\\n      return this.getValues(space);\\n    } // color.rgb(10, 10, 10)\\n\\n\\n    if (typeof values == \\\"number\\\") {\\n      values = Array.prototype.slice.call(args);\\n    }\\n\\n    return this.setValues(space, values);\\n  };\\n  /* Set the values for a space, invalidating cache */\\n\\n\\n  Converter.prototype.setValues = function (space, values) {\\n    this.space = space;\\n    this.convs = {};\\n    this.convs[space] = values;\\n    return this;\\n  };\\n  /* Get the values for a space. If there's already\\n    a conversion for the space, fetch it, otherwise\\n    compute it */\\n\\n\\n  Converter.prototype.getValues = function (space) {\\n    var vals = this.convs[space];\\n\\n    if (!vals) {\\n      var fspace = this.space,\\n          from = this.convs[fspace];\\n      vals = convert[fspace][space](from);\\n      this.convs[space] = vals;\\n    }\\n\\n    return vals;\\n  };\\n\\n  [\\\"rgb\\\", \\\"hsl\\\", \\\"hsv\\\", \\\"cmyk\\\", \\\"keyword\\\"].forEach(function (space) {\\n    Converter.prototype[space] = function (vals) {\\n      return this.routeSpace(space, arguments);\\n    };\\n  });\\n  var colorConvert = convert;\\n  var colorName = {\\n    \\\"aliceblue\\\": [240, 248, 255],\\n    \\\"antiquewhite\\\": [250, 235, 215],\\n    \\\"aqua\\\": [0, 255, 255],\\n    \\\"aquamarine\\\": [127, 255, 212],\\n    \\\"azure\\\": [240, 255, 255],\\n    \\\"beige\\\": [245, 245, 220],\\n    \\\"bisque\\\": [255, 228, 196],\\n    \\\"black\\\": [0, 0, 0],\\n    \\\"blanchedalmond\\\": [255, 235, 205],\\n    \\\"blue\\\": [0, 0, 255],\\n    \\\"blueviolet\\\": [138, 43, 226],\\n    \\\"brown\\\": [165, 42, 42],\\n    \\\"burlywood\\\": [222, 184, 135],\\n    \\\"cadetblue\\\": [95, 158, 160],\\n    \\\"chartreuse\\\": [127, 255, 0],\\n    \\\"chocolate\\\": [210, 105, 30],\\n    \\\"coral\\\": [255, 127, 80],\\n    \\\"cornflowerblue\\\": [100, 149, 237],\\n    \\\"cornsilk\\\": [255, 248, 220],\\n    \\\"crimson\\\": [220, 20, 60],\\n    \\\"cyan\\\": [0, 255, 255],\\n    \\\"darkblue\\\": [0, 0, 139],\\n    \\\"darkcyan\\\": [0, 139, 139],\\n    \\\"darkgoldenrod\\\": [184, 134, 11],\\n    \\\"darkgray\\\": [169, 169, 169],\\n    \\\"darkgreen\\\": [0, 100, 0],\\n    \\\"darkgrey\\\": [169, 169, 169],\\n    \\\"darkkhaki\\\": [189, 183, 107],\\n    \\\"darkmagenta\\\": [139, 0, 139],\\n    \\\"darkolivegreen\\\": [85, 107, 47],\\n    \\\"darkorange\\\": [255, 140, 0],\\n    \\\"darkorchid\\\": [153, 50, 204],\\n    \\\"darkred\\\": [139, 0, 0],\\n    \\\"darksalmon\\\": [233, 150, 122],\\n    \\\"darkseagreen\\\": [143, 188, 143],\\n    \\\"darkslateblue\\\": [72, 61, 139],\\n    \\\"darkslategray\\\": [47, 79, 79],\\n    \\\"darkslategrey\\\": [47, 79, 79],\\n    \\\"darkturquoise\\\": [0, 206, 209],\\n    \\\"darkviolet\\\": [148, 0, 211],\\n    \\\"deeppink\\\": [255, 20, 147],\\n    \\\"deepskyblue\\\": [0, 191, 255],\\n    \\\"dimgray\\\": [105, 105, 105],\\n    \\\"dimgrey\\\": [105, 105, 105],\\n    \\\"dodgerblue\\\": [30, 144, 255],\\n    \\\"firebrick\\\": [178, 34, 34],\\n    \\\"floralwhite\\\": [255, 250, 240],\\n    \\\"forestgreen\\\": [34, 139, 34],\\n    \\\"fuchsia\\\": [255, 0, 255],\\n    \\\"gainsboro\\\": [220, 220, 220],\\n    \\\"ghostwhite\\\": [248, 248, 255],\\n    \\\"gold\\\": [255, 215, 0],\\n    \\\"goldenrod\\\": [218, 165, 32],\\n    \\\"gray\\\": [128, 128, 128],\\n    \\\"green\\\": [0, 128, 0],\\n    \\\"greenyellow\\\": [173, 255, 47],\\n    \\\"grey\\\": [128, 128, 128],\\n    \\\"honeydew\\\": [240, 255, 240],\\n    \\\"hotpink\\\": [255, 105, 180],\\n    \\\"indianred\\\": [205, 92, 92],\\n    \\\"indigo\\\": [75, 0, 130],\\n    \\\"ivory\\\": [255, 255, 240],\\n    \\\"khaki\\\": [240, 230, 140],\\n    \\\"lavender\\\": [230, 230, 250],\\n    \\\"lavenderblush\\\": [255, 240, 245],\\n    \\\"lawngreen\\\": [124, 252, 0],\\n    \\\"lemonchiffon\\\": [255, 250, 205],\\n    \\\"lightblue\\\": [173, 216, 230],\\n    \\\"lightcoral\\\": [240, 128, 128],\\n    \\\"lightcyan\\\": [224, 255, 255],\\n    \\\"lightgoldenrodyellow\\\": [250, 250, 210],\\n    \\\"lightgray\\\": [211, 211, 211],\\n    \\\"lightgreen\\\": [144, 238, 144],\\n    \\\"lightgrey\\\": [211, 211, 211],\\n    \\\"lightpink\\\": [255, 182, 193],\\n    \\\"lightsalmon\\\": [255, 160, 122],\\n    \\\"lightseagreen\\\": [32, 178, 170],\\n    \\\"lightskyblue\\\": [135, 206, 250],\\n    \\\"lightslategray\\\": [119, 136, 153],\\n    \\\"lightslategrey\\\": [119, 136, 153],\\n    \\\"lightsteelblue\\\": [176, 196, 222],\\n    \\\"lightyellow\\\": [255, 255, 224],\\n    \\\"lime\\\": [0, 255, 0],\\n    \\\"limegreen\\\": [50, 205, 50],\\n    \\\"linen\\\": [250, 240, 230],\\n    \\\"magenta\\\": [255, 0, 255],\\n    \\\"maroon\\\": [128, 0, 0],\\n    \\\"mediumaquamarine\\\": [102, 205, 170],\\n    \\\"mediumblue\\\": [0, 0, 205],\\n    \\\"mediumorchid\\\": [186, 85, 211],\\n    \\\"mediumpurple\\\": [147, 112, 219],\\n    \\\"mediumseagreen\\\": [60, 179, 113],\\n    \\\"mediumslateblue\\\": [123, 104, 238],\\n    \\\"mediumspringgreen\\\": [0, 250, 154],\\n    \\\"mediumturquoise\\\": [72, 209, 204],\\n    \\\"mediumvioletred\\\": [199, 21, 133],\\n    \\\"midnightblue\\\": [25, 25, 112],\\n    \\\"mintcream\\\": [245, 255, 250],\\n    \\\"mistyrose\\\": [255, 228, 225],\\n    \\\"moccasin\\\": [255, 228, 181],\\n    \\\"navajowhite\\\": [255, 222, 173],\\n    \\\"navy\\\": [0, 0, 128],\\n    \\\"oldlace\\\": [253, 245, 230],\\n    \\\"olive\\\": [128, 128, 0],\\n    \\\"olivedrab\\\": [107, 142, 35],\\n    \\\"orange\\\": [255, 165, 0],\\n    \\\"orangered\\\": [255, 69, 0],\\n    \\\"orchid\\\": [218, 112, 214],\\n    \\\"palegoldenrod\\\": [238, 232, 170],\\n    \\\"palegreen\\\": [152, 251, 152],\\n    \\\"paleturquoise\\\": [175, 238, 238],\\n    \\\"palevioletred\\\": [219, 112, 147],\\n    \\\"papayawhip\\\": [255, 239, 213],\\n    \\\"peachpuff\\\": [255, 218, 185],\\n    \\\"peru\\\": [205, 133, 63],\\n    \\\"pink\\\": [255, 192, 203],\\n    \\\"plum\\\": [221, 160, 221],\\n    \\\"powderblue\\\": [176, 224, 230],\\n    \\\"purple\\\": [128, 0, 128],\\n    \\\"rebeccapurple\\\": [102, 51, 153],\\n    \\\"red\\\": [255, 0, 0],\\n    \\\"rosybrown\\\": [188, 143, 143],\\n    \\\"royalblue\\\": [65, 105, 225],\\n    \\\"saddlebrown\\\": [139, 69, 19],\\n    \\\"salmon\\\": [250, 128, 114],\\n    \\\"sandybrown\\\": [244, 164, 96],\\n    \\\"seagreen\\\": [46, 139, 87],\\n    \\\"seashell\\\": [255, 245, 238],\\n    \\\"sienna\\\": [160, 82, 45],\\n    \\\"silver\\\": [192, 192, 192],\\n    \\\"skyblue\\\": [135, 206, 235],\\n    \\\"slateblue\\\": [106, 90, 205],\\n    \\\"slategray\\\": [112, 128, 144],\\n    \\\"slategrey\\\": [112, 128, 144],\\n    \\\"snow\\\": [255, 250, 250],\\n    \\\"springgreen\\\": [0, 255, 127],\\n    \\\"steelblue\\\": [70, 130, 180],\\n    \\\"tan\\\": [210, 180, 140],\\n    \\\"teal\\\": [0, 128, 128],\\n    \\\"thistle\\\": [216, 191, 216],\\n    \\\"tomato\\\": [255, 99, 71],\\n    \\\"turquoise\\\": [64, 224, 208],\\n    \\\"violet\\\": [238, 130, 238],\\n    \\\"wheat\\\": [245, 222, 179],\\n    \\\"white\\\": [255, 255, 255],\\n    \\\"whitesmoke\\\": [245, 245, 245],\\n    \\\"yellow\\\": [255, 255, 0],\\n    \\\"yellowgreen\\\": [154, 205, 50]\\n  };\\n  /* MIT license */\\n\\n  var colorString = {\\n    getRgba: getRgba,\\n    getHsla: getHsla,\\n    getRgb: getRgb,\\n    getHsl: getHsl,\\n    getHwb: getHwb,\\n    getAlpha: getAlpha,\\n    hexString: hexString,\\n    rgbString: rgbString,\\n    rgbaString: rgbaString,\\n    percentString: percentString,\\n    percentaString: percentaString,\\n    hslString: hslString,\\n    hslaString: hslaString,\\n    hwbString: hwbString,\\n    keyword: keyword\\n  };\\n\\n  function getRgba(string) {\\n    if (!string) {\\n      return;\\n    }\\n\\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\\n        rgba = /^rgba?\\\\(\\\\s*([+-]?\\\\d+)\\\\s*,\\\\s*([+-]?\\\\d+)\\\\s*,\\\\s*([+-]?\\\\d+)\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$/i,\\n        per = /^rgba?\\\\(\\\\s*([+-]?[\\\\d\\\\.]+)\\\\%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$/i,\\n        keyword = /(\\\\w+)/;\\n    var rgb = [0, 0, 0],\\n        a = 1,\\n        match = string.match(abbr),\\n        hexAlpha = \\\"\\\";\\n\\n    if (match) {\\n      match = match[1];\\n      hexAlpha = match[3];\\n\\n      for (var i = 0; i < rgb.length; i++) {\\n        rgb[i] = parseInt(match[i] + match[i], 16);\\n      }\\n\\n      if (hexAlpha) {\\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\\n      }\\n    } else if (match = string.match(hex)) {\\n      hexAlpha = match[2];\\n      match = match[1];\\n\\n      for (var i = 0; i < rgb.length; i++) {\\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\\n      }\\n\\n      if (hexAlpha) {\\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\\n      }\\n    } else if (match = string.match(rgba)) {\\n      for (var i = 0; i < rgb.length; i++) {\\n        rgb[i] = parseInt(match[i + 1]);\\n      }\\n\\n      a = parseFloat(match[4]);\\n    } else if (match = string.match(per)) {\\n      for (var i = 0; i < rgb.length; i++) {\\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\\n      }\\n\\n      a = parseFloat(match[4]);\\n    } else if (match = string.match(keyword)) {\\n      if (match[1] == \\\"transparent\\\") {\\n        return [0, 0, 0, 0];\\n      }\\n\\n      rgb = colorName[match[1]];\\n\\n      if (!rgb) {\\n        return;\\n      }\\n    }\\n\\n    for (var i = 0; i < rgb.length; i++) {\\n      rgb[i] = scale(rgb[i], 0, 255);\\n    }\\n\\n    if (!a && a != 0) {\\n      a = 1;\\n    } else {\\n      a = scale(a, 0, 1);\\n    }\\n\\n    rgb[3] = a;\\n    return rgb;\\n  }\\n\\n  function getHsla(string) {\\n    if (!string) {\\n      return;\\n    }\\n\\n    var hsl = /^hsla?\\\\(\\\\s*([+-]?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)/;\\n    var match = string.match(hsl);\\n\\n    if (match) {\\n      var alpha = parseFloat(match[4]);\\n      var h = scale(parseInt(match[1]), 0, 360),\\n          s = scale(parseFloat(match[2]), 0, 100),\\n          l = scale(parseFloat(match[3]), 0, 100),\\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\\n      return [h, s, l, a];\\n    }\\n  }\\n\\n  function getHwb(string) {\\n    if (!string) {\\n      return;\\n    }\\n\\n    var hwb = /^hwb\\\\(\\\\s*([+-]?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)/;\\n    var match = string.match(hwb);\\n\\n    if (match) {\\n      var alpha = parseFloat(match[4]);\\n      var h = scale(parseInt(match[1]), 0, 360),\\n          w = scale(parseFloat(match[2]), 0, 100),\\n          b = scale(parseFloat(match[3]), 0, 100),\\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\\n      return [h, w, b, a];\\n    }\\n  }\\n\\n  function getRgb(string) {\\n    var rgba = getRgba(string);\\n    return rgba && rgba.slice(0, 3);\\n  }\\n\\n  function getHsl(string) {\\n    var hsla = getHsla(string);\\n    return hsla && hsla.slice(0, 3);\\n  }\\n\\n  function getAlpha(string) {\\n    var vals = getRgba(string);\\n\\n    if (vals) {\\n      return vals[3];\\n    } else if (vals = getHsla(string)) {\\n      return vals[3];\\n    } else if (vals = getHwb(string)) {\\n      return vals[3];\\n    }\\n  } // generators\\n\\n\\n  function hexString(rgba, a) {\\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\\n    return \\\"#\\\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \\\"\\\");\\n  }\\n\\n  function rgbString(rgba, alpha) {\\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\\n      return rgbaString(rgba, alpha);\\n    }\\n\\n    return \\\"rgb(\\\" + rgba[0] + \\\", \\\" + rgba[1] + \\\", \\\" + rgba[2] + \\\")\\\";\\n  }\\n\\n  function rgbaString(rgba, alpha) {\\n    if (alpha === undefined) {\\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\\n    }\\n\\n    return \\\"rgba(\\\" + rgba[0] + \\\", \\\" + rgba[1] + \\\", \\\" + rgba[2] + \\\", \\\" + alpha + \\\")\\\";\\n  }\\n\\n  function percentString(rgba, alpha) {\\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\\n      return percentaString(rgba, alpha);\\n    }\\n\\n    var r = Math.round(rgba[0] / 255 * 100),\\n        g = Math.round(rgba[1] / 255 * 100),\\n        b = Math.round(rgba[2] / 255 * 100);\\n    return \\\"rgb(\\\" + r + \\\"%, \\\" + g + \\\"%, \\\" + b + \\\"%)\\\";\\n  }\\n\\n  function percentaString(rgba, alpha) {\\n    var r = Math.round(rgba[0] / 255 * 100),\\n        g = Math.round(rgba[1] / 255 * 100),\\n        b = Math.round(rgba[2] / 255 * 100);\\n    return \\\"rgba(\\\" + r + \\\"%, \\\" + g + \\\"%, \\\" + b + \\\"%, \\\" + (alpha || rgba[3] || 1) + \\\")\\\";\\n  }\\n\\n  function hslString(hsla, alpha) {\\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\\n      return hslaString(hsla, alpha);\\n    }\\n\\n    return \\\"hsl(\\\" + hsla[0] + \\\", \\\" + hsla[1] + \\\"%, \\\" + hsla[2] + \\\"%)\\\";\\n  }\\n\\n  function hslaString(hsla, alpha) {\\n    if (alpha === undefined) {\\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\\n    }\\n\\n    return \\\"hsla(\\\" + hsla[0] + \\\", \\\" + hsla[1] + \\\"%, \\\" + hsla[2] + \\\"%, \\\" + alpha + \\\")\\\";\\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\\n  // (hwb have alpha optional & 1 is default value)\\n\\n\\n  function hwbString(hwb, alpha) {\\n    if (alpha === undefined) {\\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\\n    }\\n\\n    return \\\"hwb(\\\" + hwb[0] + \\\", \\\" + hwb[1] + \\\"%, \\\" + hwb[2] + \\\"%\\\" + (alpha !== undefined && alpha !== 1 ? \\\", \\\" + alpha : \\\"\\\") + \\\")\\\";\\n  }\\n\\n  function keyword(rgb) {\\n    return reverseNames[rgb.slice(0, 3)];\\n  } // helpers\\n\\n\\n  function scale(num, min, max) {\\n    return Math.min(Math.max(min, num), max);\\n  }\\n\\n  function hexDouble(num) {\\n    var str = num.toString(16).toUpperCase();\\n    return str.length < 2 ? \\\"0\\\" + str : str;\\n  } //create a list of reverse color names\\n\\n\\n  var reverseNames = {};\\n\\n  for (var name in colorName) {\\n    reverseNames[colorName[name]] = name;\\n  }\\n  /* MIT license */\\n\\n\\n  var Color = function Color(obj) {\\n    if (obj instanceof Color) {\\n      return obj;\\n    }\\n\\n    if (!(this instanceof Color)) {\\n      return new Color(obj);\\n    }\\n\\n    this.valid = false;\\n    this.values = {\\n      rgb: [0, 0, 0],\\n      hsl: [0, 0, 0],\\n      hsv: [0, 0, 0],\\n      hwb: [0, 0, 0],\\n      cmyk: [0, 0, 0, 0],\\n      alpha: 1\\n    }; // parse Color() argument\\n\\n    var vals;\\n\\n    if (typeof obj === 'string') {\\n      vals = colorString.getRgba(obj);\\n\\n      if (vals) {\\n        this.setValues('rgb', vals);\\n      } else if (vals = colorString.getHsla(obj)) {\\n        this.setValues('hsl', vals);\\n      } else if (vals = colorString.getHwb(obj)) {\\n        this.setValues('hwb', vals);\\n      }\\n    } else if (typeof obj === 'object') {\\n      vals = obj;\\n\\n      if (vals.r !== undefined || vals.red !== undefined) {\\n        this.setValues('rgb', vals);\\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\\n        this.setValues('hsl', vals);\\n      } else if (vals.v !== undefined || vals.value !== undefined) {\\n        this.setValues('hsv', vals);\\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\\n        this.setValues('hwb', vals);\\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\\n        this.setValues('cmyk', vals);\\n      }\\n    }\\n  };\\n\\n  Color.prototype = {\\n    isValid: function isValid() {\\n      return this.valid;\\n    },\\n    rgb: function rgb() {\\n      return this.setSpace('rgb', arguments);\\n    },\\n    hsl: function hsl() {\\n      return this.setSpace('hsl', arguments);\\n    },\\n    hsv: function hsv() {\\n      return this.setSpace('hsv', arguments);\\n    },\\n    hwb: function hwb() {\\n      return this.setSpace('hwb', arguments);\\n    },\\n    cmyk: function cmyk() {\\n      return this.setSpace('cmyk', arguments);\\n    },\\n    rgbArray: function rgbArray() {\\n      return this.values.rgb;\\n    },\\n    hslArray: function hslArray() {\\n      return this.values.hsl;\\n    },\\n    hsvArray: function hsvArray() {\\n      return this.values.hsv;\\n    },\\n    hwbArray: function hwbArray() {\\n      var values = this.values;\\n\\n      if (values.alpha !== 1) {\\n        return values.hwb.concat([values.alpha]);\\n      }\\n\\n      return values.hwb;\\n    },\\n    cmykArray: function cmykArray() {\\n      return this.values.cmyk;\\n    },\\n    rgbaArray: function rgbaArray() {\\n      var values = this.values;\\n      return values.rgb.concat([values.alpha]);\\n    },\\n    hslaArray: function hslaArray() {\\n      var values = this.values;\\n      return values.hsl.concat([values.alpha]);\\n    },\\n    alpha: function alpha(val) {\\n      if (val === undefined) {\\n        return this.values.alpha;\\n      }\\n\\n      this.setValues('alpha', val);\\n      return this;\\n    },\\n    red: function red(val) {\\n      return this.setChannel('rgb', 0, val);\\n    },\\n    green: function green(val) {\\n      return this.setChannel('rgb', 1, val);\\n    },\\n    blue: function blue(val) {\\n      return this.setChannel('rgb', 2, val);\\n    },\\n    hue: function hue(val) {\\n      if (val) {\\n        val %= 360;\\n        val = val < 0 ? 360 + val : val;\\n      }\\n\\n      return this.setChannel('hsl', 0, val);\\n    },\\n    saturation: function saturation(val) {\\n      return this.setChannel('hsl', 1, val);\\n    },\\n    lightness: function lightness(val) {\\n      return this.setChannel('hsl', 2, val);\\n    },\\n    saturationv: function saturationv(val) {\\n      return this.setChannel('hsv', 1, val);\\n    },\\n    whiteness: function whiteness(val) {\\n      return this.setChannel('hwb', 1, val);\\n    },\\n    blackness: function blackness(val) {\\n      return this.setChannel('hwb', 2, val);\\n    },\\n    value: function value(val) {\\n      return this.setChannel('hsv', 2, val);\\n    },\\n    cyan: function cyan(val) {\\n      return this.setChannel('cmyk', 0, val);\\n    },\\n    magenta: function magenta(val) {\\n      return this.setChannel('cmyk', 1, val);\\n    },\\n    yellow: function yellow(val) {\\n      return this.setChannel('cmyk', 2, val);\\n    },\\n    black: function black(val) {\\n      return this.setChannel('cmyk', 3, val);\\n    },\\n    hexString: function hexString() {\\n      return colorString.hexString(this.values.rgb);\\n    },\\n    rgbString: function rgbString() {\\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\\n    },\\n    rgbaString: function rgbaString() {\\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\\n    },\\n    percentString: function percentString() {\\n      return colorString.percentString(this.values.rgb, this.values.alpha);\\n    },\\n    hslString: function hslString() {\\n      return colorString.hslString(this.values.hsl, this.values.alpha);\\n    },\\n    hslaString: function hslaString() {\\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\\n    },\\n    hwbString: function hwbString() {\\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\\n    },\\n    keyword: function keyword() {\\n      return colorString.keyword(this.values.rgb, this.values.alpha);\\n    },\\n    rgbNumber: function rgbNumber() {\\n      var rgb = this.values.rgb;\\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\\n    },\\n    luminosity: function luminosity() {\\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\\n      var rgb = this.values.rgb;\\n      var lum = [];\\n\\n      for (var i = 0; i < rgb.length; i++) {\\n        var chan = rgb[i] / 255;\\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\\n      }\\n\\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\\n    },\\n    contrast: function contrast(color2) {\\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\\n      var lum1 = this.luminosity();\\n      var lum2 = color2.luminosity();\\n\\n      if (lum1 > lum2) {\\n        return (lum1 + 0.05) / (lum2 + 0.05);\\n      }\\n\\n      return (lum2 + 0.05) / (lum1 + 0.05);\\n    },\\n    level: function level(color2) {\\n      var contrastRatio = this.contrast(color2);\\n\\n      if (contrastRatio >= 7.1) {\\n        return 'AAA';\\n      }\\n\\n      return contrastRatio >= 4.5 ? 'AA' : '';\\n    },\\n    dark: function dark() {\\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\\n      var rgb = this.values.rgb;\\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\\n      return yiq < 128;\\n    },\\n    light: function light() {\\n      return !this.dark();\\n    },\\n    negate: function negate() {\\n      var rgb = [];\\n\\n      for (var i = 0; i < 3; i++) {\\n        rgb[i] = 255 - this.values.rgb[i];\\n      }\\n\\n      this.setValues('rgb', rgb);\\n      return this;\\n    },\\n    lighten: function lighten(ratio) {\\n      var hsl = this.values.hsl;\\n      hsl[2] += hsl[2] * ratio;\\n      this.setValues('hsl', hsl);\\n      return this;\\n    },\\n    darken: function darken(ratio) {\\n      var hsl = this.values.hsl;\\n      hsl[2] -= hsl[2] * ratio;\\n      this.setValues('hsl', hsl);\\n      return this;\\n    },\\n    saturate: function saturate(ratio) {\\n      var hsl = this.values.hsl;\\n      hsl[1] += hsl[1] * ratio;\\n      this.setValues('hsl', hsl);\\n      return this;\\n    },\\n    desaturate: function desaturate(ratio) {\\n      var hsl = this.values.hsl;\\n      hsl[1] -= hsl[1] * ratio;\\n      this.setValues('hsl', hsl);\\n      return this;\\n    },\\n    whiten: function whiten(ratio) {\\n      var hwb = this.values.hwb;\\n      hwb[1] += hwb[1] * ratio;\\n      this.setValues('hwb', hwb);\\n      return this;\\n    },\\n    blacken: function blacken(ratio) {\\n      var hwb = this.values.hwb;\\n      hwb[2] += hwb[2] * ratio;\\n      this.setValues('hwb', hwb);\\n      return this;\\n    },\\n    greyscale: function greyscale() {\\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\\n\\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\\n      this.setValues('rgb', [val, val, val]);\\n      return this;\\n    },\\n    clearer: function clearer(ratio) {\\n      var alpha = this.values.alpha;\\n      this.setValues('alpha', alpha - alpha * ratio);\\n      return this;\\n    },\\n    opaquer: function opaquer(ratio) {\\n      var alpha = this.values.alpha;\\n      this.setValues('alpha', alpha + alpha * ratio);\\n      return this;\\n    },\\n    rotate: function rotate(degrees) {\\n      var hsl = this.values.hsl;\\n      var hue = (hsl[0] + degrees) % 360;\\n      hsl[0] = hue < 0 ? 360 + hue : hue;\\n      this.setValues('hsl', hsl);\\n      return this;\\n    },\\n\\n    /**\\n     * Ported from sass implementation in C\\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\\n     */\\n    mix: function mix(mixinColor, weight) {\\n      var color1 = this;\\n      var color2 = mixinColor;\\n      var p = weight === undefined ? 0.5 : weight;\\n      var w = 2 * p - 1;\\n      var a = color1.alpha() - color2.alpha();\\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\\n      var w2 = 1 - w1;\\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\\n    },\\n    toJSON: function toJSON() {\\n      return this.rgb();\\n    },\\n    clone: function clone() {\\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\\n      // except 'alpha' which is a number.\\n      var result = new Color();\\n      var source = this.values;\\n      var target = result.values;\\n      var value, type;\\n\\n      for (var prop in source) {\\n        if (source.hasOwnProperty(prop)) {\\n          value = source[prop];\\n          type = {}.toString.call(value);\\n\\n          if (type === '[object Array]') {\\n            target[prop] = value.slice(0);\\n          } else if (type === '[object Number]') {\\n            target[prop] = value;\\n          } else {\\n            console.error('unexpected color value:', value);\\n          }\\n        }\\n      }\\n\\n      return result;\\n    }\\n  };\\n  Color.prototype.spaces = {\\n    rgb: ['red', 'green', 'blue'],\\n    hsl: ['hue', 'saturation', 'lightness'],\\n    hsv: ['hue', 'saturation', 'value'],\\n    hwb: ['hue', 'whiteness', 'blackness'],\\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\\n  };\\n  Color.prototype.maxes = {\\n    rgb: [255, 255, 255],\\n    hsl: [360, 100, 100],\\n    hsv: [360, 100, 100],\\n    hwb: [360, 100, 100],\\n    cmyk: [100, 100, 100, 100]\\n  };\\n\\n  Color.prototype.getValues = function (space) {\\n    var values = this.values;\\n    var vals = {};\\n\\n    for (var i = 0; i < space.length; i++) {\\n      vals[space.charAt(i)] = values[space][i];\\n    }\\n\\n    if (values.alpha !== 1) {\\n      vals.a = values.alpha;\\n    } // {r: 255, g: 255, b: 255, a: 0.4}\\n\\n\\n    return vals;\\n  };\\n\\n  Color.prototype.setValues = function (space, vals) {\\n    var values = this.values;\\n    var spaces = this.spaces;\\n    var maxes = this.maxes;\\n    var alpha = 1;\\n    var i;\\n    this.valid = true;\\n\\n    if (space === 'alpha') {\\n      alpha = vals;\\n    } else if (vals.length) {\\n      // [10, 10, 10]\\n      values[space] = vals.slice(0, space.length);\\n      alpha = vals[space.length];\\n    } else if (vals[space.charAt(0)] !== undefined) {\\n      // {r: 10, g: 10, b: 10}\\n      for (i = 0; i < space.length; i++) {\\n        values[space][i] = vals[space.charAt(i)];\\n      }\\n\\n      alpha = vals.a;\\n    } else if (vals[spaces[space][0]] !== undefined) {\\n      // {red: 10, green: 10, blue: 10}\\n      var chans = spaces[space];\\n\\n      for (i = 0; i < space.length; i++) {\\n        values[space][i] = vals[chans[i]];\\n      }\\n\\n      alpha = vals.alpha;\\n    }\\n\\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\\n\\n    if (space === 'alpha') {\\n      return false;\\n    }\\n\\n    var capped; // cap values of the space prior converting all values\\n\\n    for (i = 0; i < space.length; i++) {\\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\\n      values[space][i] = Math.round(capped);\\n    } // convert to all the other color spaces\\n\\n\\n    for (var sname in spaces) {\\n      if (sname !== space) {\\n        values[sname] = colorConvert[space][sname](values[space]);\\n      }\\n    }\\n\\n    return true;\\n  };\\n\\n  Color.prototype.setSpace = function (space, args) {\\n    var vals = args[0];\\n\\n    if (vals === undefined) {\\n      // color.rgb()\\n      return this.getValues(space);\\n    } // color.rgb(10, 10, 10)\\n\\n\\n    if (typeof vals === 'number') {\\n      vals = Array.prototype.slice.call(args);\\n    }\\n\\n    this.setValues(space, vals);\\n    return this;\\n  };\\n\\n  Color.prototype.setChannel = function (space, index, val) {\\n    var svalues = this.values[space];\\n\\n    if (val === undefined) {\\n      // color.red()\\n      return svalues[index];\\n    } else if (val === svalues[index]) {\\n      // color.red(color.red())\\n      return this;\\n    } // color.red(100)\\n\\n\\n    svalues[index] = val;\\n    this.setValues(space, svalues);\\n    return this;\\n  };\\n\\n  if (typeof window !== 'undefined') {\\n    window.Color = Color;\\n  }\\n\\n  var chartjsColor = Color;\\n  /**\\n   * @namespace Chart.helpers\\n   */\\n\\n  var helpers = {\\n    /**\\n     * An empty function that can be used, for example, for optional callback.\\n     */\\n    noop: function noop() {},\\n\\n    /**\\n     * Returns a unique id, sequentially generated from a global variable.\\n     * @returns {number}\\n     * @function\\n     */\\n    uid: function () {\\n      var id = 0;\\n      return function () {\\n        return id++;\\n      };\\n    }(),\\n\\n    /**\\n     * Returns true if `value` is neither null nor undefined, else returns false.\\n     * @param {*} value - The value to test.\\n     * @returns {boolean}\\n     * @since 2.7.0\\n     */\\n    isNullOrUndef: function isNullOrUndef(value) {\\n      return value === null || typeof value === 'undefined';\\n    },\\n\\n    /**\\n     * Returns true if `value` is an array (including typed arrays), else returns false.\\n     * @param {*} value - The value to test.\\n     * @returns {boolean}\\n     * @function\\n     */\\n    isArray: function isArray(value) {\\n      if (Array.isArray && Array.isArray(value)) {\\n        return true;\\n      }\\n\\n      var type = Object.prototype.toString.call(value);\\n\\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\\n        return true;\\n      }\\n\\n      return false;\\n    },\\n\\n    /**\\n     * Returns true if `value` is an object (excluding null), else returns false.\\n     * @param {*} value - The value to test.\\n     * @returns {boolean}\\n     * @since 2.7.0\\n     */\\n    isObject: function isObject(value) {\\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\\n    },\\n\\n    /**\\n     * Returns true if `value` is a finite number, else returns false\\n     * @param {*} value  - The value to test.\\n     * @returns {boolean}\\n     */\\n    isFinite: function (_isFinite) {\\n      function isFinite(_x) {\\n        return _isFinite.apply(this, arguments);\\n      }\\n\\n      isFinite.toString = function () {\\n        return _isFinite.toString();\\n      };\\n\\n      return isFinite;\\n    }(function (value) {\\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\\n    }),\\n\\n    /**\\n     * Returns `value` if defined, else returns `defaultValue`.\\n     * @param {*} value - The value to return if defined.\\n     * @param {*} defaultValue - The value to return if `value` is undefined.\\n     * @returns {*}\\n     */\\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\\n      return typeof value === 'undefined' ? defaultValue : value;\\n    },\\n\\n    /**\\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\\n     * @param {Array} value - The array to lookup for value at `index`.\\n     * @param {number} index - The index in `value` to lookup for value.\\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\\n     * @returns {*}\\n     */\\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\\n    },\\n\\n    /**\\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\\n     * @param {function} fn - The function to call.\\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\\n     * @returns {*}\\n     */\\n    callback: function callback(fn, args, thisArg) {\\n      if (fn && typeof fn.call === 'function') {\\n        return fn.apply(thisArg, args);\\n      }\\n    },\\n\\n    /**\\n     * Note(SB) for performance sake, this method should only be used when loopable type\\n     * is unknown or in none intensive code (not called often and small loopable). Else\\n     * it's preferable to use a regular for() loop and save extra function calls.\\n     * @param {object|Array} loopable - The object or array to be iterated.\\n     * @param {function} fn - The function to call for each item.\\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\\n     */\\n    each: function each(loopable, fn, thisArg, reverse) {\\n      var i, len, keys;\\n\\n      if (helpers.isArray(loopable)) {\\n        len = loopable.length;\\n\\n        if (reverse) {\\n          for (i = len - 1; i >= 0; i--) {\\n            fn.call(thisArg, loopable[i], i);\\n          }\\n        } else {\\n          for (i = 0; i < len; i++) {\\n            fn.call(thisArg, loopable[i], i);\\n          }\\n        }\\n      } else if (helpers.isObject(loopable)) {\\n        keys = Object.keys(loopable);\\n        len = keys.length;\\n\\n        for (i = 0; i < len; i++) {\\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\\n        }\\n      }\\n    },\\n\\n    /**\\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\\n     * @see https://stackoverflow.com/a/14853974\\n     * @param {Array} a0 - The array to compare\\n     * @param {Array} a1 - The array to compare\\n     * @returns {boolean}\\n     */\\n    arrayEquals: function arrayEquals(a0, a1) {\\n      var i, ilen, v0, v1;\\n\\n      if (!a0 || !a1 || a0.length !== a1.length) {\\n        return false;\\n      }\\n\\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\\n        v0 = a0[i];\\n        v1 = a1[i];\\n\\n        if (v0 instanceof Array && v1 instanceof Array) {\\n          if (!helpers.arrayEquals(v0, v1)) {\\n            return false;\\n          }\\n        } else if (v0 !== v1) {\\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\\n          return false;\\n        }\\n      }\\n\\n      return true;\\n    },\\n\\n    /**\\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\\n     * @param {*} source - The value to clone.\\n     * @returns {*}\\n     */\\n    clone: function clone(source) {\\n      if (helpers.isArray(source)) {\\n        return source.map(helpers.clone);\\n      }\\n\\n      if (helpers.isObject(source)) {\\n        var target = {};\\n        var keys = Object.keys(source);\\n        var klen = keys.length;\\n        var k = 0;\\n\\n        for (; k < klen; ++k) {\\n          target[keys[k]] = helpers.clone(source[keys[k]]);\\n        }\\n\\n        return target;\\n      }\\n\\n      return source;\\n    },\\n\\n    /**\\n     * The default merger when Chart.helpers.merge is called without merger option.\\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\\n     * @private\\n     */\\n    _merger: function _merger(key, target, source, options) {\\n      var tval = target[key];\\n      var sval = source[key];\\n\\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\\n        helpers.merge(tval, sval, options);\\n      } else {\\n        target[key] = helpers.clone(sval);\\n      }\\n    },\\n\\n    /**\\n     * Merges source[key] in target[key] only if target[key] is undefined.\\n     * @private\\n     */\\n    _mergerIf: function _mergerIf(key, target, source) {\\n      var tval = target[key];\\n      var sval = source[key];\\n\\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\\n        helpers.mergeIf(tval, sval);\\n      } else if (!target.hasOwnProperty(key)) {\\n        target[key] = helpers.clone(sval);\\n      }\\n    },\\n\\n    /**\\n     * Recursively deep copies `source` properties into `target` with the given `options`.\\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\\n     * @param {object} target - The target object in which all sources are merged into.\\n     * @param {object|object[]} source - Object(s) to merge into `target`.\\n     * @param {object} [options] - Merging options:\\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\\n     * @returns {object} The `target` object.\\n     */\\n    merge: function merge(target, source, options) {\\n      var sources = helpers.isArray(source) ? source : [source];\\n      var ilen = sources.length;\\n      var merge, i, keys, klen, k;\\n\\n      if (!helpers.isObject(target)) {\\n        return target;\\n      }\\n\\n      options = options || {};\\n      merge = options.merger || helpers._merger;\\n\\n      for (i = 0; i < ilen; ++i) {\\n        source = sources[i];\\n\\n        if (!helpers.isObject(source)) {\\n          continue;\\n        }\\n\\n        keys = Object.keys(source);\\n\\n        for (k = 0, klen = keys.length; k < klen; ++k) {\\n          merge(keys[k], target, source, options);\\n        }\\n      }\\n\\n      return target;\\n    },\\n\\n    /**\\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\\n     * @param {object} target - The target object in which all sources are merged into.\\n     * @param {object|object[]} source - Object(s) to merge into `target`.\\n     * @returns {object} The `target` object.\\n     */\\n    mergeIf: function mergeIf(target, source) {\\n      return helpers.merge(target, source, {\\n        merger: helpers._mergerIf\\n      });\\n    },\\n\\n    /**\\n     * Applies the contents of two or more objects together into the first object.\\n     * @param {object} target - The target object in which all objects are merged into.\\n     * @param {object} arg1 - Object containing additional properties to merge in target.\\n     * @param {object} argN - Additional objects containing properties to merge in target.\\n     * @returns {object} The `target` object.\\n     */\\n    extend: function extend(target) {\\n      var setFn = function setFn(value, key) {\\n        target[key] = value;\\n      };\\n\\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\\n        helpers.each(arguments[i], setFn);\\n      }\\n\\n      return target;\\n    },\\n\\n    /**\\n     * Basic javascript inheritance based on the model created in Backbone.js\\n     */\\n    inherits: function inherits(extensions) {\\n      var me = this;\\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\\n        return me.apply(this, arguments);\\n      };\\n\\n      var Surrogate = function Surrogate() {\\n        this.constructor = ChartElement;\\n      };\\n\\n      Surrogate.prototype = me.prototype;\\n      ChartElement.prototype = new Surrogate();\\n      ChartElement.extend = helpers.inherits;\\n\\n      if (extensions) {\\n        helpers.extend(ChartElement.prototype, extensions);\\n      }\\n\\n      ChartElement.__super__ = me.prototype;\\n      return ChartElement;\\n    }\\n  };\\n  var helpers_core = helpers; // DEPRECATIONS\\n\\n  /**\\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\\n   * @function Chart.helpers.callCallback\\n   * @deprecated since version 2.6.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  helpers.callCallback = helpers.callback;\\n  /**\\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\\n   * @function Chart.helpers.indexOf\\n   * @deprecated since version 2.7.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  helpers.indexOf = function (array, item, fromIndex) {\\n    return Array.prototype.indexOf.call(array, item, fromIndex);\\n  };\\n  /**\\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\\n   * @function Chart.helpers.getValueOrDefault\\n   * @deprecated since version 2.7.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n\\n  helpers.getValueOrDefault = helpers.valueOrDefault;\\n  /**\\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\\n   * @function Chart.helpers.getValueAtIndexOrDefault\\n   * @deprecated since version 2.7.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\\n  /**\\n   * Easing functions adapted from Robert Penner's easing equations.\\n   * @namespace Chart.helpers.easingEffects\\n   * @see http://www.robertpenner.com/easing/\\n   */\\n\\n  var effects = {\\n    linear: function linear(t) {\\n      return t;\\n    },\\n    easeInQuad: function easeInQuad(t) {\\n      return t * t;\\n    },\\n    easeOutQuad: function easeOutQuad(t) {\\n      return -t * (t - 2);\\n    },\\n    easeInOutQuad: function easeInOutQuad(t) {\\n      if ((t /= 0.5) < 1) {\\n        return 0.5 * t * t;\\n      }\\n\\n      return -0.5 * (--t * (t - 2) - 1);\\n    },\\n    easeInCubic: function easeInCubic(t) {\\n      return t * t * t;\\n    },\\n    easeOutCubic: function easeOutCubic(t) {\\n      return (t = t - 1) * t * t + 1;\\n    },\\n    easeInOutCubic: function easeInOutCubic(t) {\\n      if ((t /= 0.5) < 1) {\\n        return 0.5 * t * t * t;\\n      }\\n\\n      return 0.5 * ((t -= 2) * t * t + 2);\\n    },\\n    easeInQuart: function easeInQuart(t) {\\n      return t * t * t * t;\\n    },\\n    easeOutQuart: function easeOutQuart(t) {\\n      return -((t = t - 1) * t * t * t - 1);\\n    },\\n    easeInOutQuart: function easeInOutQuart(t) {\\n      if ((t /= 0.5) < 1) {\\n        return 0.5 * t * t * t * t;\\n      }\\n\\n      return -0.5 * ((t -= 2) * t * t * t - 2);\\n    },\\n    easeInQuint: function easeInQuint(t) {\\n      return t * t * t * t * t;\\n    },\\n    easeOutQuint: function easeOutQuint(t) {\\n      return (t = t - 1) * t * t * t * t + 1;\\n    },\\n    easeInOutQuint: function easeInOutQuint(t) {\\n      if ((t /= 0.5) < 1) {\\n        return 0.5 * t * t * t * t * t;\\n      }\\n\\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\\n    },\\n    easeInSine: function easeInSine(t) {\\n      return -Math.cos(t * (Math.PI / 2)) + 1;\\n    },\\n    easeOutSine: function easeOutSine(t) {\\n      return Math.sin(t * (Math.PI / 2));\\n    },\\n    easeInOutSine: function easeInOutSine(t) {\\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\\n    },\\n    easeInExpo: function easeInExpo(t) {\\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\\n    },\\n    easeOutExpo: function easeOutExpo(t) {\\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\\n    },\\n    easeInOutExpo: function easeInOutExpo(t) {\\n      if (t === 0) {\\n        return 0;\\n      }\\n\\n      if (t === 1) {\\n        return 1;\\n      }\\n\\n      if ((t /= 0.5) < 1) {\\n        return 0.5 * Math.pow(2, 10 * (t - 1));\\n      }\\n\\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\\n    },\\n    easeInCirc: function easeInCirc(t) {\\n      if (t >= 1) {\\n        return t;\\n      }\\n\\n      return -(Math.sqrt(1 - t * t) - 1);\\n    },\\n    easeOutCirc: function easeOutCirc(t) {\\n      return Math.sqrt(1 - (t = t - 1) * t);\\n    },\\n    easeInOutCirc: function easeInOutCirc(t) {\\n      if ((t /= 0.5) < 1) {\\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\\n      }\\n\\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\\n    },\\n    easeInElastic: function easeInElastic(t) {\\n      var s = 1.70158;\\n      var p = 0;\\n      var a = 1;\\n\\n      if (t === 0) {\\n        return 0;\\n      }\\n\\n      if (t === 1) {\\n        return 1;\\n      }\\n\\n      if (!p) {\\n        p = 0.3;\\n      }\\n\\n      if (a < 1) {\\n        a = 1;\\n        s = p / 4;\\n      } else {\\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\\n      }\\n\\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\\n    },\\n    easeOutElastic: function easeOutElastic(t) {\\n      var s = 1.70158;\\n      var p = 0;\\n      var a = 1;\\n\\n      if (t === 0) {\\n        return 0;\\n      }\\n\\n      if (t === 1) {\\n        return 1;\\n      }\\n\\n      if (!p) {\\n        p = 0.3;\\n      }\\n\\n      if (a < 1) {\\n        a = 1;\\n        s = p / 4;\\n      } else {\\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\\n      }\\n\\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\\n    },\\n    easeInOutElastic: function easeInOutElastic(t) {\\n      var s = 1.70158;\\n      var p = 0;\\n      var a = 1;\\n\\n      if (t === 0) {\\n        return 0;\\n      }\\n\\n      if ((t /= 0.5) === 2) {\\n        return 1;\\n      }\\n\\n      if (!p) {\\n        p = 0.45;\\n      }\\n\\n      if (a < 1) {\\n        a = 1;\\n        s = p / 4;\\n      } else {\\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\\n      }\\n\\n      if (t < 1) {\\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\\n      }\\n\\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\\n    },\\n    easeInBack: function easeInBack(t) {\\n      var s = 1.70158;\\n      return t * t * ((s + 1) * t - s);\\n    },\\n    easeOutBack: function easeOutBack(t) {\\n      var s = 1.70158;\\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\\n    },\\n    easeInOutBack: function easeInOutBack(t) {\\n      var s = 1.70158;\\n\\n      if ((t /= 0.5) < 1) {\\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\\n      }\\n\\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\\n    },\\n    easeInBounce: function easeInBounce(t) {\\n      return 1 - effects.easeOutBounce(1 - t);\\n    },\\n    easeOutBounce: function easeOutBounce(t) {\\n      if (t < 1 / 2.75) {\\n        return 7.5625 * t * t;\\n      }\\n\\n      if (t < 2 / 2.75) {\\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\\n      }\\n\\n      if (t < 2.5 / 2.75) {\\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\\n      }\\n\\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\\n    },\\n    easeInOutBounce: function easeInOutBounce(t) {\\n      if (t < 0.5) {\\n        return effects.easeInBounce(t * 2) * 0.5;\\n      }\\n\\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\\n    }\\n  };\\n  var helpers_easing = {\\n    effects: effects\\n  }; // DEPRECATIONS\\n\\n  /**\\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\\n   * @function Chart.helpers.easingEffects\\n   * @deprecated since version 2.7.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  helpers_core.easingEffects = effects;\\n  var PI = Math.PI;\\n  var RAD_PER_DEG = PI / 180;\\n  var DOUBLE_PI = PI * 2;\\n  var HALF_PI = PI / 2;\\n  var QUARTER_PI = PI / 4;\\n  var TWO_THIRDS_PI = PI * 2 / 3;\\n  /**\\n   * @namespace Chart.helpers.canvas\\n   */\\n\\n  var exports$1 = {\\n    /**\\n     * Clears the entire canvas associated to the given `chart`.\\n     * @param {Chart} chart - The chart for which to clear the canvas.\\n     */\\n    clear: function clear(chart) {\\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\\n    },\\n\\n    /**\\n     * Creates a \\\"path\\\" for a rectangle with rounded corners at position (x, y) with a\\n     * given size (width, height) and the same `radius` for all corners.\\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\\n     * @param {number} width - The rectangle's width.\\n     * @param {number} height - The rectangle's height.\\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\\n     */\\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\\n      if (radius) {\\n        var r = Math.min(radius, height / 2, width / 2);\\n        var left = x + r;\\n        var top = y + r;\\n        var right = x + width - r;\\n        var bottom = y + height - r;\\n        ctx.moveTo(x, top);\\n\\n        if (left < right && top < bottom) {\\n          ctx.arc(left, top, r, -PI, -HALF_PI);\\n          ctx.arc(right, top, r, -HALF_PI, 0);\\n          ctx.arc(right, bottom, r, 0, HALF_PI);\\n          ctx.arc(left, bottom, r, HALF_PI, PI);\\n        } else if (left < right) {\\n          ctx.moveTo(left, y);\\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\\n        } else if (top < bottom) {\\n          ctx.arc(left, top, r, -PI, 0);\\n          ctx.arc(left, bottom, r, 0, PI);\\n        } else {\\n          ctx.arc(left, top, r, -PI, PI);\\n        }\\n\\n        ctx.closePath();\\n        ctx.moveTo(x, y);\\n      } else {\\n        ctx.rect(x, y, width, height);\\n      }\\n    },\\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\\n      var type, xOffset, yOffset, size, cornerRadius;\\n      var rad = (rotation || 0) * RAD_PER_DEG;\\n\\n      if (style && typeof style === 'object') {\\n        type = style.toString();\\n\\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\\n          return;\\n        }\\n      }\\n\\n      if (isNaN(radius) || radius <= 0) {\\n        return;\\n      }\\n\\n      ctx.beginPath();\\n\\n      switch (style) {\\n        // Default includes circle\\n        default:\\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\\n          ctx.closePath();\\n          break;\\n\\n        case 'triangle':\\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\\n          rad += TWO_THIRDS_PI;\\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\\n          rad += TWO_THIRDS_PI;\\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\\n          ctx.closePath();\\n          break;\\n\\n        case 'rectRounded':\\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\\n          // `quadraticCurveTo` since it generates better results when rect is\\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\\n          // closer proportion to the previous impl and it is inscribed in the\\n          // circle with `radius`. For more details, see the following PRs:\\n          // https://github.com/chartjs/Chart.js/issues/5597\\n          // https://github.com/chartjs/Chart.js/issues/5858\\n          cornerRadius = radius * 0.516;\\n          size = radius - cornerRadius;\\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\\n          ctx.closePath();\\n          break;\\n\\n        case 'rect':\\n          if (!rotation) {\\n            size = Math.SQRT1_2 * radius;\\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\\n            break;\\n          }\\n\\n          rad += QUARTER_PI;\\n\\n        /* falls through */\\n\\n        case 'rectRot':\\n          xOffset = Math.cos(rad) * radius;\\n          yOffset = Math.sin(rad) * radius;\\n          ctx.moveTo(x - xOffset, y - yOffset);\\n          ctx.lineTo(x + yOffset, y - xOffset);\\n          ctx.lineTo(x + xOffset, y + yOffset);\\n          ctx.lineTo(x - yOffset, y + xOffset);\\n          ctx.closePath();\\n          break;\\n\\n        case 'crossRot':\\n          rad += QUARTER_PI;\\n\\n        /* falls through */\\n\\n        case 'cross':\\n          xOffset = Math.cos(rad) * radius;\\n          yOffset = Math.sin(rad) * radius;\\n          ctx.moveTo(x - xOffset, y - yOffset);\\n          ctx.lineTo(x + xOffset, y + yOffset);\\n          ctx.moveTo(x + yOffset, y - xOffset);\\n          ctx.lineTo(x - yOffset, y + xOffset);\\n          break;\\n\\n        case 'star':\\n          xOffset = Math.cos(rad) * radius;\\n          yOffset = Math.sin(rad) * radius;\\n          ctx.moveTo(x - xOffset, y - yOffset);\\n          ctx.lineTo(x + xOffset, y + yOffset);\\n          ctx.moveTo(x + yOffset, y - xOffset);\\n          ctx.lineTo(x - yOffset, y + xOffset);\\n          rad += QUARTER_PI;\\n          xOffset = Math.cos(rad) * radius;\\n          yOffset = Math.sin(rad) * radius;\\n          ctx.moveTo(x - xOffset, y - yOffset);\\n          ctx.lineTo(x + xOffset, y + yOffset);\\n          ctx.moveTo(x + yOffset, y - xOffset);\\n          ctx.lineTo(x - yOffset, y + xOffset);\\n          break;\\n\\n        case 'line':\\n          xOffset = Math.cos(rad) * radius;\\n          yOffset = Math.sin(rad) * radius;\\n          ctx.moveTo(x - xOffset, y - yOffset);\\n          ctx.lineTo(x + xOffset, y + yOffset);\\n          break;\\n\\n        case 'dash':\\n          ctx.moveTo(x, y);\\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\\n          break;\\n      }\\n\\n      ctx.fill();\\n      ctx.stroke();\\n    },\\n\\n    /**\\n     * Returns true if the point is inside the rectangle\\n     * @param {object} point - The point to test\\n     * @param {object} area - The rectangle\\n     * @returns {boolean}\\n     * @private\\n     */\\n    _isPointInArea: function _isPointInArea(point, area) {\\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\\n\\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\\n    },\\n    clipArea: function clipArea(ctx, area) {\\n      ctx.save();\\n      ctx.beginPath();\\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\\n      ctx.clip();\\n    },\\n    unclipArea: function unclipArea(ctx) {\\n      ctx.restore();\\n    },\\n    lineTo: function lineTo(ctx, previous, target, flip) {\\n      var stepped = target.steppedLine;\\n\\n      if (stepped) {\\n        if (stepped === 'middle') {\\n          var midpoint = (previous.x + target.x) / 2.0;\\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\\n          ctx.lineTo(previous.x, target.y);\\n        } else {\\n          ctx.lineTo(target.x, previous.y);\\n        }\\n\\n        ctx.lineTo(target.x, target.y);\\n        return;\\n      }\\n\\n      if (!target.tension) {\\n        ctx.lineTo(target.x, target.y);\\n        return;\\n      }\\n\\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\\n    }\\n  };\\n  var helpers_canvas = exports$1; // DEPRECATIONS\\n\\n  /**\\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\\n   * @namespace Chart.helpers.clear\\n   * @deprecated since version 2.7.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  helpers_core.clear = exports$1.clear;\\n  /**\\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\\n   * @namespace Chart.helpers.drawRoundedRectangle\\n   * @deprecated since version 2.7.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  helpers_core.drawRoundedRectangle = function (ctx) {\\n    ctx.beginPath();\\n    exports$1.roundedRect.apply(exports$1, arguments);\\n  };\\n\\n  var defaults = {\\n    /**\\n     * @private\\n     */\\n    _set: function _set(scope, values) {\\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\\n    }\\n  };\\n\\n  defaults._set('global', {\\n    defaultColor: 'rgba(0,0,0,0.1)',\\n    defaultFontColor: '#666',\\n    defaultFontFamily: \\\"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\\\",\\n    defaultFontSize: 12,\\n    defaultFontStyle: 'normal',\\n    defaultLineHeight: 1.2,\\n    showLines: true\\n  });\\n\\n  var core_defaults = defaults;\\n  var valueOrDefault = helpers_core.valueOrDefault;\\n  /**\\n   * Converts the given font object into a CSS font string.\\n   * @param {object} font - A font object.\\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\\n   * @private\\n   */\\n\\n  function toFontString(font) {\\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\\n      return null;\\n    }\\n\\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\\n  }\\n  /**\\n   * @alias Chart.helpers.options\\n   * @namespace\\n   */\\n\\n\\n  var helpers_options = {\\n    /**\\n     * Converts the given line height `value` in pixels for a specific font `size`.\\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\\n     * @since 2.7.0\\n     */\\n    toLineHeight: function toLineHeight(value, size) {\\n      var matches = ('' + value).match(/^(normal|(\\\\d+(?:\\\\.\\\\d+)?)(px|em|%)?)$/);\\n\\n      if (!matches || matches[1] === 'normal') {\\n        return size * 1.2;\\n      }\\n\\n      value = +matches[2];\\n\\n      switch (matches[3]) {\\n        case 'px':\\n          return value;\\n\\n        case '%':\\n          value /= 100;\\n          break;\\n\\n        default:\\n          break;\\n      }\\n\\n      return size * value;\\n    },\\n\\n    /**\\n     * Converts the given value into a padding object with pre-computed width/height.\\n     * @param {number|object} value - If a number, set the value to all TRBL component,\\n     *  else, if and object, use defined properties and sets undefined ones to 0.\\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\\n     * @since 2.7.0\\n     */\\n    toPadding: function toPadding(value) {\\n      var t, r, b, l;\\n\\n      if (helpers_core.isObject(value)) {\\n        t = +value.top || 0;\\n        r = +value.right || 0;\\n        b = +value.bottom || 0;\\n        l = +value.left || 0;\\n      } else {\\n        t = r = b = l = +value || 0;\\n      }\\n\\n      return {\\n        top: t,\\n        right: r,\\n        bottom: b,\\n        left: l,\\n        height: t + b,\\n        width: l + r\\n      };\\n    },\\n\\n    /**\\n     * Parses font options and returns the font object.\\n     * @param {object} options - A object that contains font options to be parsed.\\n     * @return {object} The font object.\\n     * @todo Support font.* options and renamed to toFont().\\n     * @private\\n     */\\n    _parseFont: function _parseFont(options) {\\n      var globalDefaults = core_defaults.global;\\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\\n      var font = {\\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\\n        size: size,\\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\\n        weight: null,\\n        string: ''\\n      };\\n      font.string = toFontString(font);\\n      return font;\\n    },\\n\\n    /**\\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\\n     * @param {Array} inputs - An array of values, falling back to the last value.\\n     * @param {object} [context] - If defined and the current value is a function, the value\\n     * is called with `context` as first argument and the result becomes the new input.\\n     * @param {number} [index] - If defined and the current value is an array, the value\\n     * at `index` become the new input.\\n     * @since 2.7.0\\n     */\\n    resolve: function resolve(inputs, context, index) {\\n      var i, ilen, value;\\n\\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\\n        value = inputs[i];\\n\\n        if (value === undefined) {\\n          continue;\\n        }\\n\\n        if (context !== undefined && typeof value === 'function') {\\n          value = value(context);\\n        }\\n\\n        if (index !== undefined && helpers_core.isArray(value)) {\\n          value = value[index];\\n        }\\n\\n        if (value !== undefined) {\\n          return value;\\n        }\\n      }\\n    }\\n  };\\n  var helpers$1 = helpers_core;\\n  var easing = helpers_easing;\\n  var canvas = helpers_canvas;\\n  var options = helpers_options;\\n  helpers$1.easing = easing;\\n  helpers$1.canvas = canvas;\\n  helpers$1.options = options;\\n\\n  function interpolate(start, view, model, ease) {\\n    var keys = Object.keys(model);\\n    var i, ilen, key, actual, origin, target, type, c0, c1;\\n\\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\\n      key = keys[i];\\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\\n      // doesn't contain it, so let's initialize the view to the target value.\\n\\n      if (!view.hasOwnProperty(key)) {\\n        view[key] = target;\\n      }\\n\\n      actual = view[key];\\n\\n      if (actual === target || key[0] === '_') {\\n        continue;\\n      }\\n\\n      if (!start.hasOwnProperty(key)) {\\n        start[key] = actual;\\n      }\\n\\n      origin = start[key];\\n      type = typeof target;\\n\\n      if (type === typeof origin) {\\n        if (type === 'string') {\\n          c0 = chartjsColor(origin);\\n\\n          if (c0.valid) {\\n            c1 = chartjsColor(target);\\n\\n            if (c1.valid) {\\n              view[key] = c1.mix(c0, ease).rgbString();\\n              continue;\\n            }\\n          }\\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\\n          view[key] = origin + (target - origin) * ease;\\n          continue;\\n        }\\n      }\\n\\n      view[key] = target;\\n    }\\n  }\\n\\n  var Element = function Element(configuration) {\\n    helpers$1.extend(this, configuration);\\n    this.initialize.apply(this, arguments);\\n  };\\n\\n  helpers$1.extend(Element.prototype, {\\n    initialize: function initialize() {\\n      this.hidden = false;\\n    },\\n    pivot: function pivot() {\\n      var me = this;\\n\\n      if (!me._view) {\\n        me._view = helpers$1.clone(me._model);\\n      }\\n\\n      me._start = {};\\n      return me;\\n    },\\n    transition: function transition(ease) {\\n      var me = this;\\n      var model = me._model;\\n      var start = me._start;\\n      var view = me._view; // No animation -> No Transition\\n\\n      if (!model || ease === 1) {\\n        me._view = model;\\n        me._start = null;\\n        return me;\\n      }\\n\\n      if (!view) {\\n        view = me._view = {};\\n      }\\n\\n      if (!start) {\\n        start = me._start = {};\\n      }\\n\\n      interpolate(start, view, model, ease);\\n      return me;\\n    },\\n    tooltipPosition: function tooltipPosition() {\\n      return {\\n        x: this._model.x,\\n        y: this._model.y\\n      };\\n    },\\n    hasValue: function hasValue() {\\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\\n    }\\n  });\\n  Element.extend = helpers$1.inherits;\\n  var core_element = Element;\\n  var exports$2 = core_element.extend({\\n    chart: null,\\n    // the animation associated chart instance\\n    currentStep: 0,\\n    // the current animation step\\n    numSteps: 60,\\n    // default number of steps\\n    easing: '',\\n    // the easing to use for this animation\\n    render: null,\\n    // render function used by the animation service\\n    onAnimationProgress: null,\\n    // user specified callback to fire on each step of the animation\\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\\n\\n  });\\n  var core_animation = exports$2; // DEPRECATIONS\\n\\n  /**\\n   * Provided for backward compatibility, use Chart.Animation instead\\n   * @prop Chart.Animation#animationObject\\n   * @deprecated since version 2.6.0\\n   * @todo remove at version 3\\n   */\\n\\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\\n    get: function get() {\\n      return this;\\n    }\\n  });\\n  /**\\n   * Provided for backward compatibility, use Chart.Animation#chart instead\\n   * @prop Chart.Animation#chartInstance\\n   * @deprecated since version 2.6.0\\n   * @todo remove at version 3\\n   */\\n\\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\\n    get: function get() {\\n      return this.chart;\\n    },\\n    set: function set(value) {\\n      this.chart = value;\\n    }\\n  });\\n\\n  core_defaults._set('global', {\\n    animation: {\\n      duration: 1000,\\n      easing: 'easeOutQuart',\\n      onProgress: helpers$1.noop,\\n      onComplete: helpers$1.noop\\n    }\\n  });\\n\\n  var core_animations = {\\n    animations: [],\\n    request: null,\\n\\n    /**\\n     * @param {Chart} chart - The chart to animate.\\n     * @param {Chart.Animation} animation - The animation that we will animate.\\n     * @param {number} duration - The animation duration in ms.\\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\\n     */\\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\\n      var animations = this.animations;\\n      var i, ilen;\\n      animation.chart = chart;\\n      animation.startTime = Date.now();\\n      animation.duration = duration;\\n\\n      if (!lazy) {\\n        chart.animating = true;\\n      }\\n\\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\\n        if (animations[i].chart === chart) {\\n          animations[i] = animation;\\n          return;\\n        }\\n      }\\n\\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\\n\\n      if (animations.length === 1) {\\n        this.requestAnimationFrame();\\n      }\\n    },\\n    cancelAnimation: function cancelAnimation(chart) {\\n      var index = helpers$1.findIndex(this.animations, function (animation) {\\n        return animation.chart === chart;\\n      });\\n\\n      if (index !== -1) {\\n        this.animations.splice(index, 1);\\n        chart.animating = false;\\n      }\\n    },\\n    requestAnimationFrame: function requestAnimationFrame() {\\n      var me = this;\\n\\n      if (me.request === null) {\\n        // Skip animation frame requests until the active one is executed.\\n        // This can happen when processing mouse events, e.g. 'mousemove'\\n        // and 'mouseout' events will trigger multiple renders.\\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\\n          me.request = null;\\n          me.startDigest();\\n        });\\n      }\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    startDigest: function startDigest() {\\n      var me = this;\\n      me.advance(); // Do we have more stuff to animate?\\n\\n      if (me.animations.length > 0) {\\n        me.requestAnimationFrame();\\n      }\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    advance: function advance() {\\n      var animations = this.animations;\\n      var animation, chart, numSteps, nextStep;\\n      var i = 0; // 1 animation per chart, so we are looping charts here\\n\\n      while (i < animations.length) {\\n        animation = animations[i];\\n        chart = animation.chart;\\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\\n        // https://github.com/chartjs/Chart.js/issues/6104\\n\\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\\n        animation.currentStep = Math.min(nextStep, numSteps);\\n        helpers$1.callback(animation.render, [chart, animation], chart);\\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\\n\\n        if (animation.currentStep >= numSteps) {\\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\\n          chart.animating = false;\\n          animations.splice(i, 1);\\n        } else {\\n          ++i;\\n        }\\n      }\\n    }\\n  };\\n  var resolve = helpers$1.options.resolve;\\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\\n  /**\\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\\n   */\\n\\n  function listenArrayEvents(array, listener) {\\n    if (array._chartjs) {\\n      array._chartjs.listeners.push(listener);\\n\\n      return;\\n    }\\n\\n    Object.defineProperty(array, '_chartjs', {\\n      configurable: true,\\n      enumerable: false,\\n      value: {\\n        listeners: [listener]\\n      }\\n    });\\n    arrayEvents.forEach(function (key) {\\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\\n      var base = array[key];\\n      Object.defineProperty(array, key, {\\n        configurable: true,\\n        enumerable: false,\\n        value: function value() {\\n          var args = Array.prototype.slice.call(arguments);\\n          var res = base.apply(this, args);\\n          helpers$1.each(array._chartjs.listeners, function (object) {\\n            if (typeof object[method] === 'function') {\\n              object[method].apply(object, args);\\n            }\\n          });\\n          return res;\\n        }\\n      });\\n    });\\n  }\\n  /**\\n   * Removes the given array event listener and cleanup extra attached properties (such as\\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\\n   */\\n\\n\\n  function unlistenArrayEvents(array, listener) {\\n    var stub = array._chartjs;\\n\\n    if (!stub) {\\n      return;\\n    }\\n\\n    var listeners = stub.listeners;\\n    var index = listeners.indexOf(listener);\\n\\n    if (index !== -1) {\\n      listeners.splice(index, 1);\\n    }\\n\\n    if (listeners.length > 0) {\\n      return;\\n    }\\n\\n    arrayEvents.forEach(function (key) {\\n      delete array[key];\\n    });\\n    delete array._chartjs;\\n  } // Base class for all dataset controllers (line, bar, etc)\\n\\n\\n  var DatasetController = function DatasetController(chart, datasetIndex) {\\n    this.initialize(chart, datasetIndex);\\n  };\\n\\n  helpers$1.extend(DatasetController.prototype, {\\n    /**\\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\\n     * @type {Chart.core.element}\\n     */\\n    datasetElementType: null,\\n\\n    /**\\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\\n     * @type {Chart.core.element}\\n     */\\n    dataElementType: null,\\n    initialize: function initialize(chart, datasetIndex) {\\n      var me = this;\\n      me.chart = chart;\\n      me.index = datasetIndex;\\n      me.linkScales();\\n      me.addElements();\\n    },\\n    updateIndex: function updateIndex(datasetIndex) {\\n      this.index = datasetIndex;\\n    },\\n    linkScales: function linkScales() {\\n      var me = this;\\n      var meta = me.getMeta();\\n      var dataset = me.getDataset();\\n\\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\\n      }\\n\\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\\n      }\\n    },\\n    getDataset: function getDataset() {\\n      return this.chart.data.datasets[this.index];\\n    },\\n    getMeta: function getMeta() {\\n      return this.chart.getDatasetMeta(this.index);\\n    },\\n    getScaleForId: function getScaleForId(scaleID) {\\n      return this.chart.scales[scaleID];\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _getValueScaleId: function _getValueScaleId() {\\n      return this.getMeta().yAxisID;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _getIndexScaleId: function _getIndexScaleId() {\\n      return this.getMeta().xAxisID;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _getValueScale: function _getValueScale() {\\n      return this.getScaleForId(this._getValueScaleId());\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _getIndexScale: function _getIndexScale() {\\n      return this.getScaleForId(this._getIndexScaleId());\\n    },\\n    reset: function reset() {\\n      this.update(true);\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    destroy: function destroy() {\\n      if (this._data) {\\n        unlistenArrayEvents(this._data, this);\\n      }\\n    },\\n    createMetaDataset: function createMetaDataset() {\\n      var me = this;\\n      var type = me.datasetElementType;\\n      return type && new type({\\n        _chart: me.chart,\\n        _datasetIndex: me.index\\n      });\\n    },\\n    createMetaData: function createMetaData(index) {\\n      var me = this;\\n      var type = me.dataElementType;\\n      return type && new type({\\n        _chart: me.chart,\\n        _datasetIndex: me.index,\\n        _index: index\\n      });\\n    },\\n    addElements: function addElements() {\\n      var me = this;\\n      var meta = me.getMeta();\\n      var data = me.getDataset().data || [];\\n      var metaData = meta.data;\\n      var i, ilen;\\n\\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\\n        metaData[i] = metaData[i] || me.createMetaData(i);\\n      }\\n\\n      meta.dataset = meta.dataset || me.createMetaDataset();\\n    },\\n    addElementAndReset: function addElementAndReset(index) {\\n      var element = this.createMetaData(index);\\n      this.getMeta().data.splice(index, 0, element);\\n      this.updateElement(element, index, true);\\n    },\\n    buildOrUpdateElements: function buildOrUpdateElements() {\\n      var me = this;\\n      var dataset = me.getDataset();\\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\\n      // real-time charts), we need to monitor these data modifications and synchronize\\n      // the internal meta data accordingly.\\n\\n      if (me._data !== data) {\\n        if (me._data) {\\n          // This case happens when the user replaced the data array instance.\\n          unlistenArrayEvents(me._data, me);\\n        }\\n\\n        if (data && Object.isExtensible(data)) {\\n          listenArrayEvents(data, me);\\n        }\\n\\n        me._data = data;\\n      } // Re-sync meta data in case the user replaced the data array or if we missed\\n      // any updates and so make sure that we handle number of datapoints changing.\\n\\n\\n      me.resyncElements();\\n    },\\n    update: helpers$1.noop,\\n    transition: function transition(easingValue) {\\n      var meta = this.getMeta();\\n      var elements = meta.data || [];\\n      var ilen = elements.length;\\n      var i = 0;\\n\\n      for (; i < ilen; ++i) {\\n        elements[i].transition(easingValue);\\n      }\\n\\n      if (meta.dataset) {\\n        meta.dataset.transition(easingValue);\\n      }\\n    },\\n    draw: function draw() {\\n      var meta = this.getMeta();\\n      var elements = meta.data || [];\\n      var ilen = elements.length;\\n      var i = 0;\\n\\n      if (meta.dataset) {\\n        meta.dataset.draw();\\n      }\\n\\n      for (; i < ilen; ++i) {\\n        elements[i].draw();\\n      }\\n    },\\n    removeHoverStyle: function removeHoverStyle(element) {\\n      helpers$1.merge(element._model, element.$previousStyle || {});\\n      delete element.$previousStyle;\\n    },\\n    setHoverStyle: function setHoverStyle(element) {\\n      var dataset = this.chart.data.datasets[element._datasetIndex];\\n      var index = element._index;\\n      var custom = element.custom || {};\\n      var model = element._model;\\n      var getHoverColor = helpers$1.getHoverColor;\\n      element.$previousStyle = {\\n        backgroundColor: model.backgroundColor,\\n        borderColor: model.borderColor,\\n        borderWidth: model.borderWidth\\n      };\\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    resyncElements: function resyncElements() {\\n      var me = this;\\n      var meta = me.getMeta();\\n      var data = me.getDataset().data;\\n      var numMeta = meta.data.length;\\n      var numData = data.length;\\n\\n      if (numData < numMeta) {\\n        meta.data.splice(numData, numMeta - numData);\\n      } else if (numData > numMeta) {\\n        me.insertElements(numMeta, numData - numMeta);\\n      }\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    insertElements: function insertElements(start, count) {\\n      for (var i = 0; i < count; ++i) {\\n        this.addElementAndReset(start + i);\\n      }\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    onDataPush: function onDataPush() {\\n      var count = arguments.length;\\n      this.insertElements(this.getDataset().data.length - count, count);\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    onDataPop: function onDataPop() {\\n      this.getMeta().data.pop();\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    onDataShift: function onDataShift() {\\n      this.getMeta().data.shift();\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    onDataSplice: function onDataSplice(start, count) {\\n      this.getMeta().data.splice(start, count);\\n      this.insertElements(start, arguments.length - 2);\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    onDataUnshift: function onDataUnshift() {\\n      this.insertElements(0, arguments.length);\\n    }\\n  });\\n  DatasetController.extend = helpers$1.inherits;\\n  var core_datasetController = DatasetController;\\n\\n  core_defaults._set('global', {\\n    elements: {\\n      arc: {\\n        backgroundColor: core_defaults.global.defaultColor,\\n        borderColor: '#fff',\\n        borderWidth: 2,\\n        borderAlign: 'center'\\n      }\\n    }\\n  });\\n\\n  var element_arc = core_element.extend({\\n    inLabelRange: function inLabelRange(mouseX) {\\n      var vm = this._view;\\n\\n      if (vm) {\\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\\n      }\\n\\n      return false;\\n    },\\n    inRange: function inRange(chartX, chartY) {\\n      var vm = this._view;\\n\\n      if (vm) {\\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\\n          x: chartX,\\n          y: chartY\\n        });\\n        var angle = pointRelativePosition.angle;\\n        var distance = pointRelativePosition.distance; // Sanitise angle range\\n\\n        var startAngle = vm.startAngle;\\n        var endAngle = vm.endAngle;\\n\\n        while (endAngle < startAngle) {\\n          endAngle += 2.0 * Math.PI;\\n        }\\n\\n        while (angle > endAngle) {\\n          angle -= 2.0 * Math.PI;\\n        }\\n\\n        while (angle < startAngle) {\\n          angle += 2.0 * Math.PI;\\n        } // Check if within the range of the open/close angle\\n\\n\\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\\n        return betweenAngles && withinRadius;\\n      }\\n\\n      return false;\\n    },\\n    getCenterPoint: function getCenterPoint() {\\n      var vm = this._view;\\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\\n      return {\\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\\n        y: vm.y + Math.sin(halfAngle) * halfRadius\\n      };\\n    },\\n    getArea: function getArea() {\\n      var vm = this._view;\\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\\n    },\\n    tooltipPosition: function tooltipPosition() {\\n      var vm = this._view;\\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\\n      return {\\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\\n      };\\n    },\\n    draw: function draw() {\\n      var ctx = this._chart.ctx;\\n      var vm = this._view;\\n      var sA = vm.startAngle;\\n      var eA = vm.endAngle;\\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\\n      var angleMargin;\\n      ctx.save();\\n      ctx.beginPath();\\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\\n      ctx.closePath();\\n      ctx.fillStyle = vm.backgroundColor;\\n      ctx.fill();\\n\\n      if (vm.borderWidth) {\\n        if (vm.borderAlign === 'inner') {\\n          // Draw an inner border by cliping the arc and drawing a double-width border\\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\\n          ctx.beginPath();\\n          angleMargin = pixelMargin / vm.outerRadius;\\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\\n\\n          if (vm.innerRadius > pixelMargin) {\\n            angleMargin = pixelMargin / vm.innerRadius;\\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\\n          } else {\\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\\n          }\\n\\n          ctx.closePath();\\n          ctx.clip();\\n          ctx.beginPath();\\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\\n          ctx.closePath();\\n          ctx.lineWidth = vm.borderWidth * 2;\\n          ctx.lineJoin = 'round';\\n        } else {\\n          ctx.lineWidth = vm.borderWidth;\\n          ctx.lineJoin = 'bevel';\\n        }\\n\\n        ctx.strokeStyle = vm.borderColor;\\n        ctx.stroke();\\n      }\\n\\n      ctx.restore();\\n    }\\n  });\\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\\n  var defaultColor = core_defaults.global.defaultColor;\\n\\n  core_defaults._set('global', {\\n    elements: {\\n      line: {\\n        tension: 0.4,\\n        backgroundColor: defaultColor,\\n        borderWidth: 3,\\n        borderColor: defaultColor,\\n        borderCapStyle: 'butt',\\n        borderDash: [],\\n        borderDashOffset: 0.0,\\n        borderJoinStyle: 'miter',\\n        capBezierPoints: true,\\n        fill: true // do we fill in the area between the line and its base axis\\n\\n      }\\n    }\\n  });\\n\\n  var element_line = core_element.extend({\\n    draw: function draw() {\\n      var me = this;\\n      var vm = me._view;\\n      var ctx = me._chart.ctx;\\n      var spanGaps = vm.spanGaps;\\n\\n      var points = me._children.slice(); // clone array\\n\\n\\n      var globalDefaults = core_defaults.global;\\n      var globalOptionLineElements = globalDefaults.elements.line;\\n      var lastDrawnIndex = -1;\\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\\n\\n      if (me._loop && points.length) {\\n        points.push(points[0]);\\n      }\\n\\n      ctx.save(); // Stroke Line Options\\n\\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\\n\\n      if (ctx.setLineDash) {\\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\\n      }\\n\\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\\n\\n      ctx.beginPath();\\n      lastDrawnIndex = -1;\\n\\n      for (index = 0; index < points.length; ++index) {\\n        current = points[index];\\n        previous = helpers$1.previousItem(points, index);\\n        currentVM = current._view; // First point moves to it's starting position no matter what\\n\\n        if (index === 0) {\\n          if (!currentVM.skip) {\\n            ctx.moveTo(currentVM.x, currentVM.y);\\n            lastDrawnIndex = index;\\n          }\\n        } else {\\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\\n\\n          if (!currentVM.skip) {\\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\\n              // There was a gap and this is the first point after the gap\\n              ctx.moveTo(currentVM.x, currentVM.y);\\n            } else {\\n              // Line to next point\\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\\n            }\\n\\n            lastDrawnIndex = index;\\n          }\\n        }\\n      }\\n\\n      ctx.stroke();\\n      ctx.restore();\\n    }\\n  });\\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\\n  var defaultColor$1 = core_defaults.global.defaultColor;\\n\\n  core_defaults._set('global', {\\n    elements: {\\n      point: {\\n        radius: 3,\\n        pointStyle: 'circle',\\n        backgroundColor: defaultColor$1,\\n        borderColor: defaultColor$1,\\n        borderWidth: 1,\\n        // Hover\\n        hitRadius: 1,\\n        hoverRadius: 4,\\n        hoverBorderWidth: 1\\n      }\\n    }\\n  });\\n\\n  function xRange(mouseX) {\\n    var vm = this._view;\\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\\n  }\\n\\n  function yRange(mouseY) {\\n    var vm = this._view;\\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\\n  }\\n\\n  var element_point = core_element.extend({\\n    inRange: function inRange(mouseX, mouseY) {\\n      var vm = this._view;\\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\\n    },\\n    inLabelRange: xRange,\\n    inXRange: xRange,\\n    inYRange: yRange,\\n    getCenterPoint: function getCenterPoint() {\\n      var vm = this._view;\\n      return {\\n        x: vm.x,\\n        y: vm.y\\n      };\\n    },\\n    getArea: function getArea() {\\n      return Math.PI * Math.pow(this._view.radius, 2);\\n    },\\n    tooltipPosition: function tooltipPosition() {\\n      var vm = this._view;\\n      return {\\n        x: vm.x,\\n        y: vm.y,\\n        padding: vm.radius + vm.borderWidth\\n      };\\n    },\\n    draw: function draw(chartArea) {\\n      var vm = this._view;\\n      var ctx = this._chart.ctx;\\n      var pointStyle = vm.pointStyle;\\n      var rotation = vm.rotation;\\n      var radius = vm.radius;\\n      var x = vm.x;\\n      var y = vm.y;\\n      var globalDefaults = core_defaults.global;\\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\\n\\n      if (vm.skip) {\\n        return;\\n      } // Clipping for Points.\\n\\n\\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\\n        ctx.strokeStyle = vm.borderColor || defaultColor;\\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\\n      }\\n    }\\n  });\\n  var defaultColor$2 = core_defaults.global.defaultColor;\\n\\n  core_defaults._set('global', {\\n    elements: {\\n      rectangle: {\\n        backgroundColor: defaultColor$2,\\n        borderColor: defaultColor$2,\\n        borderSkipped: 'bottom',\\n        borderWidth: 0\\n      }\\n    }\\n  });\\n\\n  function isVertical(vm) {\\n    return vm && vm.width !== undefined;\\n  }\\n  /**\\n   * Helper function to get the bounds of the bar regardless of the orientation\\n   * @param bar {Chart.Element.Rectangle} the bar\\n   * @return {Bounds} bounds of the bar\\n   * @private\\n   */\\n\\n\\n  function getBarBounds(vm) {\\n    var x1, x2, y1, y2, half;\\n\\n    if (isVertical(vm)) {\\n      half = vm.width / 2;\\n      x1 = vm.x - half;\\n      x2 = vm.x + half;\\n      y1 = Math.min(vm.y, vm.base);\\n      y2 = Math.max(vm.y, vm.base);\\n    } else {\\n      half = vm.height / 2;\\n      x1 = Math.min(vm.x, vm.base);\\n      x2 = Math.max(vm.x, vm.base);\\n      y1 = vm.y - half;\\n      y2 = vm.y + half;\\n    }\\n\\n    return {\\n      left: x1,\\n      top: y1,\\n      right: x2,\\n      bottom: y2\\n    };\\n  }\\n\\n  function swap(orig, v1, v2) {\\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\\n  }\\n\\n  function parseBorderSkipped(vm) {\\n    var edge = vm.borderSkipped;\\n    var res = {};\\n\\n    if (!edge) {\\n      return res;\\n    }\\n\\n    if (vm.horizontal) {\\n      if (vm.base > vm.x) {\\n        edge = swap(edge, 'left', 'right');\\n      }\\n    } else if (vm.base < vm.y) {\\n      edge = swap(edge, 'bottom', 'top');\\n    }\\n\\n    res[edge] = true;\\n    return res;\\n  }\\n\\n  function parseBorderWidth(vm, maxW, maxH) {\\n    var value = vm.borderWidth;\\n    var skip = parseBorderSkipped(vm);\\n    var t, r, b, l;\\n\\n    if (helpers$1.isObject(value)) {\\n      t = +value.top || 0;\\n      r = +value.right || 0;\\n      b = +value.bottom || 0;\\n      l = +value.left || 0;\\n    } else {\\n      t = r = b = l = +value || 0;\\n    }\\n\\n    return {\\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\\n    };\\n  }\\n\\n  function boundingRects(vm) {\\n    var bounds = getBarBounds(vm);\\n    var width = bounds.right - bounds.left;\\n    var height = bounds.bottom - bounds.top;\\n    var border = parseBorderWidth(vm, width / 2, height / 2);\\n    return {\\n      outer: {\\n        x: bounds.left,\\n        y: bounds.top,\\n        w: width,\\n        h: height\\n      },\\n      inner: {\\n        x: bounds.left + border.l,\\n        y: bounds.top + border.t,\\n        w: width - border.l - border.r,\\n        h: height - border.t - border.b\\n      }\\n    };\\n  }\\n\\n  function _inRange(vm, x, y) {\\n    var skipX = x === null;\\n    var skipY = y === null;\\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\\n  }\\n\\n  var element_rectangle = core_element.extend({\\n    draw: function draw() {\\n      var ctx = this._chart.ctx;\\n      var vm = this._view;\\n      var rects = boundingRects(vm);\\n      var outer = rects.outer;\\n      var inner = rects.inner;\\n      ctx.fillStyle = vm.backgroundColor;\\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\\n\\n      if (outer.w === inner.w && outer.h === inner.h) {\\n        return;\\n      }\\n\\n      ctx.save();\\n      ctx.beginPath();\\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\\n      ctx.clip();\\n      ctx.fillStyle = vm.borderColor;\\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\\n      ctx.fill('evenodd');\\n      ctx.restore();\\n    },\\n    height: function height() {\\n      var vm = this._view;\\n      return vm.base - vm.y;\\n    },\\n    inRange: function inRange(mouseX, mouseY) {\\n      return _inRange(this._view, mouseX, mouseY);\\n    },\\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\\n      var vm = this._view;\\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\\n    },\\n    inXRange: function inXRange(mouseX) {\\n      return _inRange(this._view, mouseX, null);\\n    },\\n    inYRange: function inYRange(mouseY) {\\n      return _inRange(this._view, null, mouseY);\\n    },\\n    getCenterPoint: function getCenterPoint() {\\n      var vm = this._view;\\n      var x, y;\\n\\n      if (isVertical(vm)) {\\n        x = vm.x;\\n        y = (vm.y + vm.base) / 2;\\n      } else {\\n        x = (vm.x + vm.base) / 2;\\n        y = vm.y;\\n      }\\n\\n      return {\\n        x: x,\\n        y: y\\n      };\\n    },\\n    getArea: function getArea() {\\n      var vm = this._view;\\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\\n    },\\n    tooltipPosition: function tooltipPosition() {\\n      var vm = this._view;\\n      return {\\n        x: vm.x,\\n        y: vm.y\\n      };\\n    }\\n  });\\n  var elements = {};\\n  var Arc = element_arc;\\n  var Line = element_line;\\n  var Point = element_point;\\n  var Rectangle = element_rectangle;\\n  elements.Arc = Arc;\\n  elements.Line = Line;\\n  elements.Point = Point;\\n  elements.Rectangle = Rectangle;\\n  var resolve$1 = helpers$1.options.resolve;\\n\\n  core_defaults._set('bar', {\\n    hover: {\\n      mode: 'label'\\n    },\\n    scales: {\\n      xAxes: [{\\n        type: 'category',\\n        categoryPercentage: 0.8,\\n        barPercentage: 0.9,\\n        offset: true,\\n        gridLines: {\\n          offsetGridLines: true\\n        }\\n      }],\\n      yAxes: [{\\n        type: 'linear'\\n      }]\\n    }\\n  });\\n  /**\\n   * Computes the \\\"optimal\\\" sample size to maintain bars equally sized while preventing overlap.\\n   * @private\\n   */\\n\\n\\n  function computeMinSampleSize(scale, pixels) {\\n    var min = scale.isHorizontal() ? scale.width : scale.height;\\n    var ticks = scale.getTicks();\\n    var prev, curr, i, ilen;\\n\\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\\n    }\\n\\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\\n      curr = scale.getPixelForTick(i);\\n      min = i > 0 ? Math.min(min, curr - prev) : min;\\n      prev = curr;\\n    }\\n\\n    return min;\\n  }\\n  /**\\n   * Computes an \\\"ideal\\\" category based on the absolute bar thickness or, if undefined or null,\\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\\n   * @private\\n   */\\n\\n\\n  function computeFitCategoryTraits(index, ruler, options) {\\n    var thickness = options.barThickness;\\n    var count = ruler.stackCount;\\n    var curr = ruler.pixels[index];\\n    var size, ratio;\\n\\n    if (helpers$1.isNullOrUndef(thickness)) {\\n      size = ruler.min * options.categoryPercentage;\\n      ratio = options.barPercentage;\\n    } else {\\n      // When bar thickness is enforced, category and bar percentages are ignored.\\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\\n      size = thickness * count;\\n      ratio = 1;\\n    }\\n\\n    return {\\n      chunk: size / count,\\n      ratio: ratio,\\n      start: curr - size / 2\\n    };\\n  }\\n  /**\\n   * Computes an \\\"optimal\\\" category that globally arranges bars side by side (no gap when\\n   * percentage options are 1), based on the previous and following categories. This mode\\n   * generates bars with different widths when data are not evenly spaced.\\n   * @private\\n   */\\n\\n\\n  function computeFlexCategoryTraits(index, ruler, options) {\\n    var pixels = ruler.pixels;\\n    var curr = pixels[index];\\n    var prev = index > 0 ? pixels[index - 1] : null;\\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\\n    var percent = options.categoryPercentage;\\n    var start, size;\\n\\n    if (prev === null) {\\n      // first data: its size is double based on the next point or,\\n      // if it's also the last data, we use the scale size.\\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\\n    }\\n\\n    if (next === null) {\\n      // last data: its size is also double based on the previous point.\\n      next = curr + curr - prev;\\n    }\\n\\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\\n    size = Math.abs(next - prev) / 2 * percent;\\n    return {\\n      chunk: size / ruler.stackCount,\\n      ratio: options.barPercentage,\\n      start: start\\n    };\\n  }\\n\\n  var controller_bar = core_datasetController.extend({\\n    dataElementType: elements.Rectangle,\\n    initialize: function initialize() {\\n      var me = this;\\n      var meta;\\n      core_datasetController.prototype.initialize.apply(me, arguments);\\n      meta = me.getMeta();\\n      meta.stack = me.getDataset().stack;\\n      meta.bar = true;\\n    },\\n    update: function update(reset) {\\n      var me = this;\\n      var rects = me.getMeta().data;\\n      var i, ilen;\\n      me._ruler = me.getRuler();\\n\\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\\n        me.updateElement(rects[i], i, reset);\\n      }\\n    },\\n    updateElement: function updateElement(rectangle, index, reset) {\\n      var me = this;\\n      var meta = me.getMeta();\\n      var dataset = me.getDataset();\\n\\n      var options = me._resolveElementOptions(rectangle, index);\\n\\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\\n      rectangle._datasetIndex = me.index;\\n      rectangle._index = index;\\n      rectangle._model = {\\n        backgroundColor: options.backgroundColor,\\n        borderColor: options.borderColor,\\n        borderSkipped: options.borderSkipped,\\n        borderWidth: options.borderWidth,\\n        datasetLabel: dataset.label,\\n        label: me.chart.data.labels[index]\\n      };\\n\\n      me._updateElementGeometry(rectangle, index, reset);\\n\\n      rectangle.pivot();\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\\n      var me = this;\\n      var model = rectangle._model;\\n\\n      var vscale = me._getValueScale();\\n\\n      var base = vscale.getBasePixel();\\n      var horizontal = vscale.isHorizontal();\\n      var ruler = me._ruler || me.getRuler();\\n      var vpixels = me.calculateBarValuePixels(me.index, index);\\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\\n      model.horizontal = horizontal;\\n      model.base = reset ? base : vpixels.base;\\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\\n      model.height = horizontal ? ipixels.size : undefined;\\n      model.width = horizontal ? undefined : ipixels.size;\\n    },\\n\\n    /**\\n     * Returns the stacks based on groups and bar visibility.\\n     * @param {number} [last] - The dataset index\\n     * @returns {string[]} The list of stack IDs\\n     * @private\\n     */\\n    _getStacks: function _getStacks(last) {\\n      var me = this;\\n      var chart = me.chart;\\n\\n      var scale = me._getIndexScale();\\n\\n      var stacked = scale.options.stacked;\\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\\n      var stacks = [];\\n      var i, meta;\\n\\n      for (i = 0; i < ilen; ++i) {\\n        meta = chart.getDatasetMeta(i);\\n\\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\\n          stacks.push(meta.stack);\\n        }\\n      }\\n\\n      return stacks;\\n    },\\n\\n    /**\\n     * Returns the effective number of stacks based on groups and bar visibility.\\n     * @private\\n     */\\n    getStackCount: function getStackCount() {\\n      return this._getStacks().length;\\n    },\\n\\n    /**\\n     * Returns the stack index for the given dataset based on groups and bar visibility.\\n     * @param {number} [datasetIndex] - The dataset index\\n     * @param {string} [name] - The stack name to find\\n     * @returns {number} The stack index\\n     * @private\\n     */\\n    getStackIndex: function getStackIndex(datasetIndex, name) {\\n      var stacks = this._getStacks(datasetIndex);\\n\\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\\n\\n      return index === -1 ? stacks.length - 1 : index;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    getRuler: function getRuler() {\\n      var me = this;\\n\\n      var scale = me._getIndexScale();\\n\\n      var stackCount = me.getStackCount();\\n      var datasetIndex = me.index;\\n      var isHorizontal = scale.isHorizontal();\\n      var start = isHorizontal ? scale.left : scale.top;\\n      var end = start + (isHorizontal ? scale.width : scale.height);\\n      var pixels = [];\\n      var i, ilen, min;\\n\\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\\n      }\\n\\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\\n      return {\\n        min: min,\\n        pixels: pixels,\\n        start: start,\\n        end: end,\\n        stackCount: stackCount,\\n        scale: scale\\n      };\\n    },\\n\\n    /**\\n     * Note: pixel values are not clamped to the scale area.\\n     * @private\\n     */\\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\\n      var me = this;\\n      var chart = me.chart;\\n      var meta = me.getMeta();\\n\\n      var scale = me._getValueScale();\\n\\n      var isHorizontal = scale.isHorizontal();\\n      var datasets = chart.data.datasets;\\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\\n      var minBarLength = scale.options.minBarLength;\\n      var stacked = scale.options.stacked;\\n      var stack = meta.stack;\\n      var start = 0;\\n      var i, imeta, ivalue, base, head, size;\\n\\n      if (stacked || stacked === undefined && stack !== undefined) {\\n        for (i = 0; i < datasetIndex; ++i) {\\n          imeta = chart.getDatasetMeta(i);\\n\\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\\n\\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\\n              start += ivalue;\\n            }\\n          }\\n        }\\n      }\\n\\n      base = scale.getPixelForValue(start);\\n      head = scale.getPixelForValue(start + value);\\n      size = head - base;\\n\\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\\n        size = minBarLength;\\n\\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\\n          head = base - minBarLength;\\n        } else {\\n          head = base + minBarLength;\\n        }\\n      }\\n\\n      return {\\n        size: size,\\n        base: base,\\n        head: head,\\n        center: head + size / 2\\n      };\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\\n      var me = this;\\n      var options = ruler.scale.options;\\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\\n      return {\\n        base: center - size / 2,\\n        head: center + size / 2,\\n        center: center,\\n        size: size\\n      };\\n    },\\n    draw: function draw() {\\n      var me = this;\\n      var chart = me.chart;\\n\\n      var scale = me._getValueScale();\\n\\n      var rects = me.getMeta().data;\\n      var dataset = me.getDataset();\\n      var ilen = rects.length;\\n      var i = 0;\\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\\n\\n      for (; i < ilen; ++i) {\\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\\n          rects[i].draw();\\n        }\\n      }\\n\\n      helpers$1.canvas.unclipArea(chart.ctx);\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\\n      var me = this;\\n      var chart = me.chart;\\n      var datasets = chart.data.datasets;\\n      var dataset = datasets[me.index];\\n      var custom = rectangle.custom || {};\\n      var options = chart.options.elements.rectangle;\\n      var values = {};\\n      var i, ilen, key; // Scriptable options\\n\\n      var context = {\\n        chart: chart,\\n        dataIndex: index,\\n        dataset: dataset,\\n        datasetIndex: me.index\\n      };\\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\\n\\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\\n        key = keys[i];\\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\\n      }\\n\\n      return values;\\n    }\\n  });\\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\\n  var resolve$2 = helpers$1.options.resolve;\\n\\n  core_defaults._set('bubble', {\\n    hover: {\\n      mode: 'single'\\n    },\\n    scales: {\\n      xAxes: [{\\n        type: 'linear',\\n        // bubble should probably use a linear scale by default\\n        position: 'bottom',\\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\\n\\n      }],\\n      yAxes: [{\\n        type: 'linear',\\n        position: 'left',\\n        id: 'y-axis-0'\\n      }]\\n    },\\n    tooltips: {\\n      callbacks: {\\n        title: function title() {\\n          // Title doesn't make sense for scatter since we format the data as a point\\n          return '';\\n        },\\n        label: function label(item, data) {\\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\\n        }\\n      }\\n    }\\n  });\\n\\n  var controller_bubble = core_datasetController.extend({\\n    /**\\n     * @protected\\n     */\\n    dataElementType: elements.Point,\\n\\n    /**\\n     * @protected\\n     */\\n    update: function update(reset) {\\n      var me = this;\\n      var meta = me.getMeta();\\n      var points = meta.data; // Update Points\\n\\n      helpers$1.each(points, function (point, index) {\\n        me.updateElement(point, index, reset);\\n      });\\n    },\\n\\n    /**\\n     * @protected\\n     */\\n    updateElement: function updateElement(point, index, reset) {\\n      var me = this;\\n      var meta = me.getMeta();\\n      var custom = point.custom || {};\\n      var xScale = me.getScaleForId(meta.xAxisID);\\n      var yScale = me.getScaleForId(meta.yAxisID);\\n\\n      var options = me._resolveElementOptions(point, index);\\n\\n      var data = me.getDataset().data[index];\\n      var dsIndex = me.index;\\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\\n      point._xScale = xScale;\\n      point._yScale = yScale;\\n      point._options = options;\\n      point._datasetIndex = dsIndex;\\n      point._index = index;\\n      point._model = {\\n        backgroundColor: options.backgroundColor,\\n        borderColor: options.borderColor,\\n        borderWidth: options.borderWidth,\\n        hitRadius: options.hitRadius,\\n        pointStyle: options.pointStyle,\\n        rotation: options.rotation,\\n        radius: reset ? 0 : options.radius,\\n        skip: custom.skip || isNaN(x) || isNaN(y),\\n        x: x,\\n        y: y\\n      };\\n      point.pivot();\\n    },\\n\\n    /**\\n     * @protected\\n     */\\n    setHoverStyle: function setHoverStyle(point) {\\n      var model = point._model;\\n      var options = point._options;\\n      var getHoverColor = helpers$1.getHoverColor;\\n      point.$previousStyle = {\\n        backgroundColor: model.backgroundColor,\\n        borderColor: model.borderColor,\\n        borderWidth: model.borderWidth,\\n        radius: model.radius\\n      };\\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\\n      model.radius = options.radius + options.hoverRadius;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\\n      var me = this;\\n      var chart = me.chart;\\n      var datasets = chart.data.datasets;\\n      var dataset = datasets[me.index];\\n      var custom = point.custom || {};\\n      var options = chart.options.elements.point;\\n      var data = dataset.data[index];\\n      var values = {};\\n      var i, ilen, key; // Scriptable options\\n\\n      var context = {\\n        chart: chart,\\n        dataIndex: index,\\n        dataset: dataset,\\n        datasetIndex: me.index\\n      };\\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\\n\\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\\n        key = keys[i];\\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\\n      } // Custom radius resolution\\n\\n\\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\\n      return values;\\n    }\\n  });\\n  var resolve$3 = helpers$1.options.resolve;\\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\\n\\n  core_defaults._set('doughnut', {\\n    animation: {\\n      // Boolean - Whether we animate the rotation of the Doughnut\\n      animateRotate: true,\\n      // Boolean - Whether we animate scaling the Doughnut from the centre\\n      animateScale: false\\n    },\\n    hover: {\\n      mode: 'single'\\n    },\\n    legendCallback: function legendCallback(chart) {\\n      var text = [];\\n      text.push('<ul class=\\\"' + chart.id + '-legend\\\">');\\n      var data = chart.data;\\n      var datasets = data.datasets;\\n      var labels = data.labels;\\n\\n      if (datasets.length) {\\n        for (var i = 0; i < datasets[0].data.length; ++i) {\\n          text.push('<li><span style=\\\"background-color:' + datasets[0].backgroundColor[i] + '\\\"></span>');\\n\\n          if (labels[i]) {\\n            text.push(labels[i]);\\n          }\\n\\n          text.push('</li>');\\n        }\\n      }\\n\\n      text.push('</ul>');\\n      return text.join('');\\n    },\\n    legend: {\\n      labels: {\\n        generateLabels: function generateLabels(chart) {\\n          var data = chart.data;\\n\\n          if (data.labels.length && data.datasets.length) {\\n            return data.labels.map(function (label, i) {\\n              var meta = chart.getDatasetMeta(0);\\n              var ds = data.datasets[0];\\n              var arc = meta.data[i];\\n              var custom = arc && arc.custom || {};\\n              var arcOpts = chart.options.elements.arc;\\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\\n              return {\\n                text: label,\\n                fillStyle: fill,\\n                strokeStyle: stroke,\\n                lineWidth: bw,\\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\\n                // Extra data used for toggling the correct item\\n                index: i\\n              };\\n            });\\n          }\\n\\n          return [];\\n        }\\n      },\\n      onClick: function onClick(e, legendItem) {\\n        var index = legendItem.index;\\n        var chart = this.chart;\\n        var i, ilen, meta;\\n\\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\\n\\n          if (meta.data[index]) {\\n            meta.data[index].hidden = !meta.data[index].hidden;\\n          }\\n        }\\n\\n        chart.update();\\n      }\\n    },\\n    // The percentage of the chart that we cut out of the middle.\\n    cutoutPercentage: 50,\\n    // The rotation of the chart, where the first data arc begins.\\n    rotation: Math.PI * -0.5,\\n    // The total circumference of the chart.\\n    circumference: Math.PI * 2.0,\\n    // Need to override these to give a nice default\\n    tooltips: {\\n      callbacks: {\\n        title: function title() {\\n          return '';\\n        },\\n        label: function label(tooltipItem, data) {\\n          var dataLabel = data.labels[tooltipItem.index];\\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\\n\\n          if (helpers$1.isArray(dataLabel)) {\\n            // show value on first line of multiline label\\n            // need to clone because we are changing the value\\n            dataLabel = dataLabel.slice();\\n            dataLabel[0] += value;\\n          } else {\\n            dataLabel += value;\\n          }\\n\\n          return dataLabel;\\n        }\\n      }\\n    }\\n  });\\n\\n  var controller_doughnut = core_datasetController.extend({\\n    dataElementType: elements.Arc,\\n    linkScales: helpers$1.noop,\\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\\n    getRingIndex: function getRingIndex(datasetIndex) {\\n      var ringIndex = 0;\\n\\n      for (var j = 0; j < datasetIndex; ++j) {\\n        if (this.chart.isDatasetVisible(j)) {\\n          ++ringIndex;\\n        }\\n      }\\n\\n      return ringIndex;\\n    },\\n    update: function update(reset) {\\n      var me = this;\\n      var chart = me.chart;\\n      var chartArea = chart.chartArea;\\n      var opts = chart.options;\\n      var availableWidth = chartArea.right - chartArea.left;\\n      var availableHeight = chartArea.bottom - chartArea.top;\\n      var minSize = Math.min(availableWidth, availableHeight);\\n      var offset = {\\n        x: 0,\\n        y: 0\\n      };\\n      var meta = me.getMeta();\\n      var arcs = meta.data;\\n      var cutoutPercentage = opts.cutoutPercentage;\\n      var circumference = opts.circumference;\\n\\n      var chartWeight = me._getRingWeight(me.index);\\n\\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\\n\\n      if (circumference < Math.PI * 2.0) {\\n        var startAngle = opts.rotation % (Math.PI * 2.0);\\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\\n        var endAngle = startAngle + circumference;\\n        var start = {\\n          x: Math.cos(startAngle),\\n          y: Math.sin(startAngle)\\n        };\\n        var end = {\\n          x: Math.cos(endAngle),\\n          y: Math.sin(endAngle)\\n        };\\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\\n        var cutout = cutoutPercentage / 100.0;\\n        var min = {\\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\\n        };\\n        var max = {\\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\\n        };\\n        var size = {\\n          width: (max.x - min.x) * 0.5,\\n          height: (max.y - min.y) * 0.5\\n        };\\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\\n        offset = {\\n          x: (max.x + min.x) * -0.5,\\n          y: (max.y + min.y) * -0.5\\n        };\\n      }\\n\\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\\n      }\\n\\n      chart.borderWidth = me.getMaxBorderWidth();\\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\\n      chart.offsetX = offset.x * chart.outerRadius;\\n      chart.offsetY = offset.y * chart.outerRadius;\\n      meta.total = me.calculateTotal();\\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\\n\\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\\n        me.updateElement(arcs[i], i, reset);\\n      }\\n    },\\n    updateElement: function updateElement(arc, index, reset) {\\n      var me = this;\\n      var chart = me.chart;\\n      var chartArea = chart.chartArea;\\n      var opts = chart.options;\\n      var animationOpts = opts.animation;\\n      var centerX = (chartArea.left + chartArea.right) / 2;\\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\\n      var startAngle = opts.rotation; // non reset case handled later\\n\\n      var endAngle = opts.rotation; // non reset case handled later\\n\\n      var dataset = me.getDataset();\\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\\n      var options = arc._options || {};\\n      helpers$1.extend(arc, {\\n        // Utility\\n        _datasetIndex: me.index,\\n        _index: index,\\n        // Desired view properties\\n        _model: {\\n          backgroundColor: options.backgroundColor,\\n          borderColor: options.borderColor,\\n          borderWidth: options.borderWidth,\\n          borderAlign: options.borderAlign,\\n          x: centerX + chart.offsetX,\\n          y: centerY + chart.offsetY,\\n          startAngle: startAngle,\\n          endAngle: endAngle,\\n          circumference: circumference,\\n          outerRadius: outerRadius,\\n          innerRadius: innerRadius,\\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\\n        }\\n      });\\n      var model = arc._model; // Set correct angles if not resetting\\n\\n      if (!reset || !animationOpts.animateRotate) {\\n        if (index === 0) {\\n          model.startAngle = opts.rotation;\\n        } else {\\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\\n        }\\n\\n        model.endAngle = model.startAngle + model.circumference;\\n      }\\n\\n      arc.pivot();\\n    },\\n    calculateTotal: function calculateTotal() {\\n      var dataset = this.getDataset();\\n      var meta = this.getMeta();\\n      var total = 0;\\n      var value;\\n      helpers$1.each(meta.data, function (element, index) {\\n        value = dataset.data[index];\\n\\n        if (!isNaN(value) && !element.hidden) {\\n          total += Math.abs(value);\\n        }\\n      });\\n      /* if (total === 0) {\\n      \\ttotal = NaN;\\n      }*/\\n\\n      return total;\\n    },\\n    calculateCircumference: function calculateCircumference(value) {\\n      var total = this.getMeta().total;\\n\\n      if (total > 0 && !isNaN(value)) {\\n        return Math.PI * 2.0 * (Math.abs(value) / total);\\n      }\\n\\n      return 0;\\n    },\\n    // gets the max border or hover width to properly scale pie charts\\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\\n      var me = this;\\n      var max = 0;\\n      var chart = me.chart;\\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\\n\\n      if (!arcs) {\\n        // Find the outmost visible dataset\\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\\n          if (chart.isDatasetVisible(i)) {\\n            meta = chart.getDatasetMeta(i);\\n            arcs = meta.data;\\n\\n            if (i !== me.index) {\\n              controller = meta.controller;\\n            }\\n\\n            break;\\n          }\\n        }\\n      }\\n\\n      if (!arcs) {\\n        return 0;\\n      }\\n\\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\\n        arc = arcs[i];\\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\\n\\n        if (options.borderAlign !== 'inner') {\\n          borderWidth = options.borderWidth;\\n          hoverWidth = options.hoverBorderWidth;\\n          max = borderWidth > max ? borderWidth : max;\\n          max = hoverWidth > max ? hoverWidth : max;\\n        }\\n      }\\n\\n      return max;\\n    },\\n\\n    /**\\n     * @protected\\n     */\\n    setHoverStyle: function setHoverStyle(arc) {\\n      var model = arc._model;\\n      var options = arc._options;\\n      var getHoverColor = helpers$1.getHoverColor;\\n      arc.$previousStyle = {\\n        backgroundColor: model.backgroundColor,\\n        borderColor: model.borderColor,\\n        borderWidth: model.borderWidth\\n      };\\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\\n      var me = this;\\n      var chart = me.chart;\\n      var dataset = me.getDataset();\\n      var custom = arc.custom || {};\\n      var options = chart.options.elements.arc;\\n      var values = {};\\n      var i, ilen, key; // Scriptable options\\n\\n      var context = {\\n        chart: chart,\\n        dataIndex: index,\\n        dataset: dataset,\\n        datasetIndex: me.index\\n      };\\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\\n\\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\\n        key = keys[i];\\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\\n      }\\n\\n      return values;\\n    },\\n\\n    /**\\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\\n     * @private\\n     */\\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\\n      var ringWeightOffset = 0;\\n\\n      for (var i = 0; i < datasetIndex; ++i) {\\n        if (this.chart.isDatasetVisible(i)) {\\n          ringWeightOffset += this._getRingWeight(i);\\n        }\\n      }\\n\\n      return ringWeightOffset;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\\n    },\\n\\n    /**\\n     * Returns the sum of all visibile data set weights.  This value can be 0.\\n     * @private\\n     */\\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\\n    }\\n  });\\n\\n  core_defaults._set('horizontalBar', {\\n    hover: {\\n      mode: 'index',\\n      axis: 'y'\\n    },\\n    scales: {\\n      xAxes: [{\\n        type: 'linear',\\n        position: 'bottom'\\n      }],\\n      yAxes: [{\\n        type: 'category',\\n        position: 'left',\\n        categoryPercentage: 0.8,\\n        barPercentage: 0.9,\\n        offset: true,\\n        gridLines: {\\n          offsetGridLines: true\\n        }\\n      }]\\n    },\\n    elements: {\\n      rectangle: {\\n        borderSkipped: 'left'\\n      }\\n    },\\n    tooltips: {\\n      mode: 'index',\\n      axis: 'y'\\n    }\\n  });\\n\\n  var controller_horizontalBar = controller_bar.extend({\\n    /**\\n     * @private\\n     */\\n    _getValueScaleId: function _getValueScaleId() {\\n      return this.getMeta().xAxisID;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _getIndexScaleId: function _getIndexScaleId() {\\n      return this.getMeta().yAxisID;\\n    }\\n  });\\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\\n  var resolve$4 = helpers$1.options.resolve;\\n  var isPointInArea = helpers$1.canvas._isPointInArea;\\n\\n  core_defaults._set('line', {\\n    showLines: true,\\n    spanGaps: false,\\n    hover: {\\n      mode: 'label'\\n    },\\n    scales: {\\n      xAxes: [{\\n        type: 'category',\\n        id: 'x-axis-0'\\n      }],\\n      yAxes: [{\\n        type: 'linear',\\n        id: 'y-axis-0'\\n      }]\\n    }\\n  });\\n\\n  function lineEnabled(dataset, options) {\\n    return valueOrDefault$5(dataset.showLine, options.showLines);\\n  }\\n\\n  var controller_line = core_datasetController.extend({\\n    datasetElementType: elements.Line,\\n    dataElementType: elements.Point,\\n    update: function update(reset) {\\n      var me = this;\\n      var meta = me.getMeta();\\n      var line = meta.dataset;\\n      var points = meta.data || [];\\n      var scale = me.getScaleForId(meta.yAxisID);\\n      var dataset = me.getDataset();\\n      var showLine = lineEnabled(dataset, me.chart.options);\\n      var i, ilen; // Update Line\\n\\n      if (showLine) {\\n        // Compatibility: If the properties are defined with only the old name, use those values\\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\\n          dataset.lineTension = dataset.tension;\\n        } // Utility\\n\\n\\n        line._scale = scale;\\n        line._datasetIndex = me.index; // Data\\n\\n        line._children = points; // Model\\n\\n        line._model = me._resolveLineOptions(line);\\n        line.pivot();\\n      } // Update Points\\n\\n\\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\\n        me.updateElement(points[i], i, reset);\\n      }\\n\\n      if (showLine && line._model.tension !== 0) {\\n        me.updateBezierControlPoints();\\n      } // Now pivot the point for animation\\n\\n\\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\\n        points[i].pivot();\\n      }\\n    },\\n    updateElement: function updateElement(point, index, reset) {\\n      var me = this;\\n      var meta = me.getMeta();\\n      var custom = point.custom || {};\\n      var dataset = me.getDataset();\\n      var datasetIndex = me.index;\\n      var value = dataset.data[index];\\n      var yScale = me.getScaleForId(meta.yAxisID);\\n      var xScale = me.getScaleForId(meta.xAxisID);\\n      var lineModel = meta.dataset._model;\\n      var x, y;\\n\\n      var options = me._resolvePointOptions(point, index);\\n\\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\\n\\n      point._xScale = xScale;\\n      point._yScale = yScale;\\n      point._options = options;\\n      point._datasetIndex = datasetIndex;\\n      point._index = index; // Desired view properties\\n\\n      point._model = {\\n        x: x,\\n        y: y,\\n        skip: custom.skip || isNaN(x) || isNaN(y),\\n        // Appearance\\n        radius: options.radius,\\n        pointStyle: options.pointStyle,\\n        rotation: options.rotation,\\n        backgroundColor: options.backgroundColor,\\n        borderColor: options.borderColor,\\n        borderWidth: options.borderWidth,\\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\\n        steppedLine: lineModel ? lineModel.steppedLine : false,\\n        // Tooltip\\n        hitRadius: options.hitRadius\\n      };\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\\n      var me = this;\\n      var chart = me.chart;\\n      var dataset = chart.data.datasets[me.index];\\n      var custom = element.custom || {};\\n      var options = chart.options.elements.point;\\n      var values = {};\\n      var i, ilen, key; // Scriptable options\\n\\n      var context = {\\n        chart: chart,\\n        dataIndex: index,\\n        dataset: dataset,\\n        datasetIndex: me.index\\n      };\\n      var ELEMENT_OPTIONS = {\\n        backgroundColor: 'pointBackgroundColor',\\n        borderColor: 'pointBorderColor',\\n        borderWidth: 'pointBorderWidth',\\n        hitRadius: 'pointHitRadius',\\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\\n        hoverBorderColor: 'pointHoverBorderColor',\\n        hoverBorderWidth: 'pointHoverBorderWidth',\\n        hoverRadius: 'pointHoverRadius',\\n        pointStyle: 'pointStyle',\\n        radius: 'pointRadius',\\n        rotation: 'pointRotation'\\n      };\\n      var keys = Object.keys(ELEMENT_OPTIONS);\\n\\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\\n        key = keys[i];\\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\\n      }\\n\\n      return values;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _resolveLineOptions: function _resolveLineOptions(element) {\\n      var me = this;\\n      var chart = me.chart;\\n      var dataset = chart.data.datasets[me.index];\\n      var custom = element.custom || {};\\n      var options = chart.options;\\n      var elementOptions = options.elements.line;\\n      var values = {};\\n      var i, ilen, key;\\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\\n\\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\\n        key = keys[i];\\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\\n      } // The default behavior of lines is to break at null values, according\\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\\n      // This option gives lines the ability to span gaps\\n\\n\\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\\n      return values;\\n    },\\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\\n      var me = this;\\n      var chart = me.chart;\\n      var meta = me.getMeta();\\n      var yScale = me.getScaleForId(meta.yAxisID);\\n      var sumPos = 0;\\n      var sumNeg = 0;\\n      var i, ds, dsMeta;\\n\\n      if (yScale.options.stacked) {\\n        for (i = 0; i < datasetIndex; i++) {\\n          ds = chart.data.datasets[i];\\n          dsMeta = chart.getDatasetMeta(i);\\n\\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\\n\\n            if (stackedRightValue < 0) {\\n              sumNeg += stackedRightValue || 0;\\n            } else {\\n              sumPos += stackedRightValue || 0;\\n            }\\n          }\\n        }\\n\\n        var rightValue = Number(yScale.getRightValue(value));\\n\\n        if (rightValue < 0) {\\n          return yScale.getPixelForValue(sumNeg + rightValue);\\n        }\\n\\n        return yScale.getPixelForValue(sumPos + rightValue);\\n      }\\n\\n      return yScale.getPixelForValue(value);\\n    },\\n    updateBezierControlPoints: function updateBezierControlPoints() {\\n      var me = this;\\n      var chart = me.chart;\\n      var meta = me.getMeta();\\n      var lineModel = meta.dataset._model;\\n      var area = chart.chartArea;\\n      var points = meta.data || [];\\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\\n\\n      if (lineModel.spanGaps) {\\n        points = points.filter(function (pt) {\\n          return !pt._model.skip;\\n        });\\n      }\\n\\n      function capControlPoint(pt, min, max) {\\n        return Math.max(Math.min(pt, max), min);\\n      }\\n\\n      if (lineModel.cubicInterpolationMode === 'monotone') {\\n        helpers$1.splineCurveMonotone(points);\\n      } else {\\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\\n          model = points[i]._model;\\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\\n          model.controlPointPreviousX = controlPoints.previous.x;\\n          model.controlPointPreviousY = controlPoints.previous.y;\\n          model.controlPointNextX = controlPoints.next.x;\\n          model.controlPointNextY = controlPoints.next.y;\\n        }\\n      }\\n\\n      if (chart.options.elements.line.capBezierPoints) {\\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\\n          model = points[i]._model;\\n\\n          if (isPointInArea(model, area)) {\\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\\n            }\\n\\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\\n            }\\n          }\\n        }\\n      }\\n    },\\n    draw: function draw() {\\n      var me = this;\\n      var chart = me.chart;\\n      var meta = me.getMeta();\\n      var points = meta.data || [];\\n      var area = chart.chartArea;\\n      var ilen = points.length;\\n      var halfBorderWidth;\\n      var i = 0;\\n\\n      if (lineEnabled(me.getDataset(), chart.options)) {\\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\\n        helpers$1.canvas.clipArea(chart.ctx, {\\n          left: area.left,\\n          right: area.right,\\n          top: area.top - halfBorderWidth,\\n          bottom: area.bottom + halfBorderWidth\\n        });\\n        meta.dataset.draw();\\n        helpers$1.canvas.unclipArea(chart.ctx);\\n      } // Draw the points\\n\\n\\n      for (; i < ilen; ++i) {\\n        points[i].draw(area);\\n      }\\n    },\\n\\n    /**\\n     * @protected\\n     */\\n    setHoverStyle: function setHoverStyle(point) {\\n      var model = point._model;\\n      var options = point._options;\\n      var getHoverColor = helpers$1.getHoverColor;\\n      point.$previousStyle = {\\n        backgroundColor: model.backgroundColor,\\n        borderColor: model.borderColor,\\n        borderWidth: model.borderWidth,\\n        radius: model.radius\\n      };\\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\\n    }\\n  });\\n  var resolve$5 = helpers$1.options.resolve;\\n\\n  core_defaults._set('polarArea', {\\n    scale: {\\n      type: 'radialLinear',\\n      angleLines: {\\n        display: false\\n      },\\n      gridLines: {\\n        circular: true\\n      },\\n      pointLabels: {\\n        display: false\\n      },\\n      ticks: {\\n        beginAtZero: true\\n      }\\n    },\\n    // Boolean - Whether to animate the rotation of the chart\\n    animation: {\\n      animateRotate: true,\\n      animateScale: true\\n    },\\n    startAngle: -0.5 * Math.PI,\\n    legendCallback: function legendCallback(chart) {\\n      var text = [];\\n      text.push('<ul class=\\\"' + chart.id + '-legend\\\">');\\n      var data = chart.data;\\n      var datasets = data.datasets;\\n      var labels = data.labels;\\n\\n      if (datasets.length) {\\n        for (var i = 0; i < datasets[0].data.length; ++i) {\\n          text.push('<li><span style=\\\"background-color:' + datasets[0].backgroundColor[i] + '\\\"></span>');\\n\\n          if (labels[i]) {\\n            text.push(labels[i]);\\n          }\\n\\n          text.push('</li>');\\n        }\\n      }\\n\\n      text.push('</ul>');\\n      return text.join('');\\n    },\\n    legend: {\\n      labels: {\\n        generateLabels: function generateLabels(chart) {\\n          var data = chart.data;\\n\\n          if (data.labels.length && data.datasets.length) {\\n            return data.labels.map(function (label, i) {\\n              var meta = chart.getDatasetMeta(0);\\n              var ds = data.datasets[0];\\n              var arc = meta.data[i];\\n              var custom = arc.custom || {};\\n              var arcOpts = chart.options.elements.arc;\\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\\n              return {\\n                text: label,\\n                fillStyle: fill,\\n                strokeStyle: stroke,\\n                lineWidth: bw,\\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\\n                // Extra data used for toggling the correct item\\n                index: i\\n              };\\n            });\\n          }\\n\\n          return [];\\n        }\\n      },\\n      onClick: function onClick(e, legendItem) {\\n        var index = legendItem.index;\\n        var chart = this.chart;\\n        var i, ilen, meta;\\n\\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\\n          meta = chart.getDatasetMeta(i);\\n          meta.data[index].hidden = !meta.data[index].hidden;\\n        }\\n\\n        chart.update();\\n      }\\n    },\\n    // Need to override these to give a nice default\\n    tooltips: {\\n      callbacks: {\\n        title: function title() {\\n          return '';\\n        },\\n        label: function label(item, data) {\\n          return data.labels[item.index] + ': ' + item.yLabel;\\n        }\\n      }\\n    }\\n  });\\n\\n  var controller_polarArea = core_datasetController.extend({\\n    dataElementType: elements.Arc,\\n    linkScales: helpers$1.noop,\\n    update: function update(reset) {\\n      var me = this;\\n      var dataset = me.getDataset();\\n      var meta = me.getMeta();\\n      var start = me.chart.options.startAngle || 0;\\n      var starts = me._starts = [];\\n      var angles = me._angles = [];\\n      var arcs = meta.data;\\n      var i, ilen, angle;\\n\\n      me._updateRadius();\\n\\n      meta.count = me.countVisibleElements();\\n\\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\\n        starts[i] = start;\\n        angle = me._computeAngle(i);\\n        angles[i] = angle;\\n        start += angle;\\n      }\\n\\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\\n        me.updateElement(arcs[i], i, reset);\\n      }\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _updateRadius: function _updateRadius() {\\n      var me = this;\\n      var chart = me.chart;\\n      var chartArea = chart.chartArea;\\n      var opts = chart.options;\\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\\n      chart.outerRadius = Math.max(minSize / 2, 0);\\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\\n      me.innerRadius = me.outerRadius - chart.radiusLength;\\n    },\\n    updateElement: function updateElement(arc, index, reset) {\\n      var me = this;\\n      var chart = me.chart;\\n      var dataset = me.getDataset();\\n      var opts = chart.options;\\n      var animationOpts = opts.animation;\\n      var scale = chart.scale;\\n      var labels = chart.data.labels;\\n      var centerX = scale.xCenter;\\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\\n\\n      var datasetStartAngle = opts.startAngle;\\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\\n      var startAngle = me._starts[index];\\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\\n      var options = arc._options || {};\\n      helpers$1.extend(arc, {\\n        // Utility\\n        _datasetIndex: me.index,\\n        _index: index,\\n        _scale: scale,\\n        // Desired view properties\\n        _model: {\\n          backgroundColor: options.backgroundColor,\\n          borderColor: options.borderColor,\\n          borderWidth: options.borderWidth,\\n          borderAlign: options.borderAlign,\\n          x: centerX,\\n          y: centerY,\\n          innerRadius: 0,\\n          outerRadius: reset ? resetRadius : distance,\\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\\n        }\\n      });\\n      arc.pivot();\\n    },\\n    countVisibleElements: function countVisibleElements() {\\n      var dataset = this.getDataset();\\n      var meta = this.getMeta();\\n      var count = 0;\\n      helpers$1.each(meta.data, function (element, index) {\\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\\n          count++;\\n        }\\n      });\\n      return count;\\n    },\\n\\n    /**\\n     * @protected\\n     */\\n    setHoverStyle: function setHoverStyle(arc) {\\n      var model = arc._model;\\n      var options = arc._options;\\n      var getHoverColor = helpers$1.getHoverColor;\\n      var valueOrDefault = helpers$1.valueOrDefault;\\n      arc.$previousStyle = {\\n        backgroundColor: model.backgroundColor,\\n        borderColor: model.borderColor,\\n        borderWidth: model.borderWidth\\n      };\\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\\n      var me = this;\\n      var chart = me.chart;\\n      var dataset = me.getDataset();\\n      var custom = arc.custom || {};\\n      var options = chart.options.elements.arc;\\n      var values = {};\\n      var i, ilen, key; // Scriptable options\\n\\n      var context = {\\n        chart: chart,\\n        dataIndex: index,\\n        dataset: dataset,\\n        datasetIndex: me.index\\n      };\\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\\n\\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\\n        key = keys[i];\\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\\n      }\\n\\n      return values;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _computeAngle: function _computeAngle(index) {\\n      var me = this;\\n      var count = this.getMeta().count;\\n      var dataset = me.getDataset();\\n      var meta = me.getMeta();\\n\\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\\n        return 0;\\n      } // Scriptable options\\n\\n\\n      var context = {\\n        chart: me.chart,\\n        dataIndex: index,\\n        dataset: dataset,\\n        datasetIndex: me.index\\n      };\\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\\n    }\\n  });\\n\\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\\n\\n  core_defaults._set('pie', {\\n    cutoutPercentage: 0\\n  }); // Pie charts are Doughnut chart with different defaults\\n\\n\\n  var controller_pie = controller_doughnut;\\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\\n  var resolve$6 = helpers$1.options.resolve;\\n\\n  core_defaults._set('radar', {\\n    scale: {\\n      type: 'radialLinear'\\n    },\\n    elements: {\\n      line: {\\n        tension: 0 // no bezier in radar\\n\\n      }\\n    }\\n  });\\n\\n  var controller_radar = core_datasetController.extend({\\n    datasetElementType: elements.Line,\\n    dataElementType: elements.Point,\\n    linkScales: helpers$1.noop,\\n    update: function update(reset) {\\n      var me = this;\\n      var meta = me.getMeta();\\n      var line = meta.dataset;\\n      var points = meta.data || [];\\n      var scale = me.chart.scale;\\n      var dataset = me.getDataset();\\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\\n\\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\\n        dataset.lineTension = dataset.tension;\\n      } // Utility\\n\\n\\n      line._scale = scale;\\n      line._datasetIndex = me.index; // Data\\n\\n      line._children = points;\\n      line._loop = true; // Model\\n\\n      line._model = me._resolveLineOptions(line);\\n      line.pivot(); // Update Points\\n\\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\\n        me.updateElement(points[i], i, reset);\\n      } // Update bezier control points\\n\\n\\n      me.updateBezierControlPoints(); // Now pivot the point for animation\\n\\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\\n        points[i].pivot();\\n      }\\n    },\\n    updateElement: function updateElement(point, index, reset) {\\n      var me = this;\\n      var custom = point.custom || {};\\n      var dataset = me.getDataset();\\n      var scale = me.chart.scale;\\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\\n\\n      var options = me._resolvePointOptions(point, index);\\n\\n      var lineModel = me.getMeta().dataset._model;\\n\\n      var x = reset ? scale.xCenter : pointPosition.x;\\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\\n\\n      point._scale = scale;\\n      point._options = options;\\n      point._datasetIndex = me.index;\\n      point._index = index; // Desired view properties\\n\\n      point._model = {\\n        x: x,\\n        // value not used in dataset scale, but we want a consistent API between scales\\n        y: y,\\n        skip: custom.skip || isNaN(x) || isNaN(y),\\n        // Appearance\\n        radius: options.radius,\\n        pointStyle: options.pointStyle,\\n        rotation: options.rotation,\\n        backgroundColor: options.backgroundColor,\\n        borderColor: options.borderColor,\\n        borderWidth: options.borderWidth,\\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\\n        // Tooltip\\n        hitRadius: options.hitRadius\\n      };\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\\n      var me = this;\\n      var chart = me.chart;\\n      var dataset = chart.data.datasets[me.index];\\n      var custom = element.custom || {};\\n      var options = chart.options.elements.point;\\n      var values = {};\\n      var i, ilen, key; // Scriptable options\\n\\n      var context = {\\n        chart: chart,\\n        dataIndex: index,\\n        dataset: dataset,\\n        datasetIndex: me.index\\n      };\\n      var ELEMENT_OPTIONS = {\\n        backgroundColor: 'pointBackgroundColor',\\n        borderColor: 'pointBorderColor',\\n        borderWidth: 'pointBorderWidth',\\n        hitRadius: 'pointHitRadius',\\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\\n        hoverBorderColor: 'pointHoverBorderColor',\\n        hoverBorderWidth: 'pointHoverBorderWidth',\\n        hoverRadius: 'pointHoverRadius',\\n        pointStyle: 'pointStyle',\\n        radius: 'pointRadius',\\n        rotation: 'pointRotation'\\n      };\\n      var keys = Object.keys(ELEMENT_OPTIONS);\\n\\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\\n        key = keys[i];\\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\\n      }\\n\\n      return values;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _resolveLineOptions: function _resolveLineOptions(element) {\\n      var me = this;\\n      var chart = me.chart;\\n      var dataset = chart.data.datasets[me.index];\\n      var custom = element.custom || {};\\n      var options = chart.options.elements.line;\\n      var values = {};\\n      var i, ilen, key;\\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\\n\\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\\n        key = keys[i];\\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\\n      }\\n\\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\\n      return values;\\n    },\\n    updateBezierControlPoints: function updateBezierControlPoints() {\\n      var me = this;\\n      var meta = me.getMeta();\\n      var area = me.chart.chartArea;\\n      var points = meta.data || [];\\n      var i, ilen, model, controlPoints;\\n\\n      function capControlPoint(pt, min, max) {\\n        return Math.max(Math.min(pt, max), min);\\n      }\\n\\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\\n        model = points[i]._model;\\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\\n\\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\\n      }\\n    },\\n    setHoverStyle: function setHoverStyle(point) {\\n      var model = point._model;\\n      var options = point._options;\\n      var getHoverColor = helpers$1.getHoverColor;\\n      point.$previousStyle = {\\n        backgroundColor: model.backgroundColor,\\n        borderColor: model.borderColor,\\n        borderWidth: model.borderWidth,\\n        radius: model.radius\\n      };\\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\\n    }\\n  });\\n\\n  core_defaults._set('scatter', {\\n    hover: {\\n      mode: 'single'\\n    },\\n    scales: {\\n      xAxes: [{\\n        id: 'x-axis-1',\\n        // need an ID so datasets can reference the scale\\n        type: 'linear',\\n        // scatter should not use a category axis\\n        position: 'bottom'\\n      }],\\n      yAxes: [{\\n        id: 'y-axis-1',\\n        type: 'linear',\\n        position: 'left'\\n      }]\\n    },\\n    showLines: false,\\n    tooltips: {\\n      callbacks: {\\n        title: function title() {\\n          return ''; // doesn't make sense for scatter since data are formatted as a point\\n        },\\n        label: function label(item) {\\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\\n        }\\n      }\\n    }\\n  }); // Scatter charts use line controllers\\n\\n\\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\\n  // the class, and so must be CamelCase in order to be correctly retrieved\\n  // by the controller in core.controller.js (`controllers[meta.type]`).\\n\\n  var controllers = {\\n    bar: controller_bar,\\n    bubble: controller_bubble,\\n    doughnut: controller_doughnut,\\n    horizontalBar: controller_horizontalBar,\\n    line: controller_line,\\n    polarArea: controller_polarArea,\\n    pie: controller_pie,\\n    radar: controller_radar,\\n    scatter: controller_scatter\\n  };\\n  /**\\n   * Helper function to get relative position for an event\\n   * @param {Event|IEvent} event - The event to get the position for\\n   * @param {Chart} chart - The chart\\n   * @returns {object} the event position\\n   */\\n\\n  function getRelativePosition(e, chart) {\\n    if (e.native) {\\n      return {\\n        x: e.x,\\n        y: e.y\\n      };\\n    }\\n\\n    return helpers$1.getRelativePosition(e, chart);\\n  }\\n  /**\\n   * Helper function to traverse all of the visible elements in the chart\\n   * @param {Chart} chart - the chart\\n   * @param {function} handler - the callback to execute for each visible item\\n   */\\n\\n\\n  function parseVisibleItems(chart, handler) {\\n    var datasets = chart.data.datasets;\\n    var meta, i, j, ilen, jlen;\\n\\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\\n      if (!chart.isDatasetVisible(i)) {\\n        continue;\\n      }\\n\\n      meta = chart.getDatasetMeta(i);\\n\\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\\n        var element = meta.data[j];\\n\\n        if (!element._view.skip) {\\n          handler(element);\\n        }\\n      }\\n    }\\n  }\\n  /**\\n   * Helper function to get the items that intersect the event position\\n   * @param {ChartElement[]} items - elements to filter\\n   * @param {object} position - the point to be nearest to\\n   * @return {ChartElement[]} the nearest items\\n   */\\n\\n\\n  function getIntersectItems(chart, position) {\\n    var elements = [];\\n    parseVisibleItems(chart, function (element) {\\n      if (element.inRange(position.x, position.y)) {\\n        elements.push(element);\\n      }\\n    });\\n    return elements;\\n  }\\n  /**\\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\\n   * @param {Chart} chart - the chart to look at elements from\\n   * @param {object} position - the point to be nearest to\\n   * @param {boolean} intersect - if true, only consider items that intersect the position\\n   * @param {function} distanceMetric - function to provide the distance between points\\n   * @return {ChartElement[]} the nearest items\\n   */\\n\\n\\n  function getNearestItems(chart, position, intersect, distanceMetric) {\\n    var minDistance = Number.POSITIVE_INFINITY;\\n    var nearestItems = [];\\n    parseVisibleItems(chart, function (element) {\\n      if (intersect && !element.inRange(position.x, position.y)) {\\n        return;\\n      }\\n\\n      var center = element.getCenterPoint();\\n      var distance = distanceMetric(position, center);\\n\\n      if (distance < minDistance) {\\n        nearestItems = [element];\\n        minDistance = distance;\\n      } else if (distance === minDistance) {\\n        // Can have multiple items at the same distance in which case we sort by size\\n        nearestItems.push(element);\\n      }\\n    });\\n    return nearestItems;\\n  }\\n  /**\\n   * Get a distance metric function for two points based on the\\n   * axis mode setting\\n   * @param {string} axis - the axis mode. x|y|xy\\n   */\\n\\n\\n  function getDistanceMetricForAxis(axis) {\\n    var useX = axis.indexOf('x') !== -1;\\n    var useY = axis.indexOf('y') !== -1;\\n    return function (pt1, pt2) {\\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\\n    };\\n  }\\n\\n  function indexMode(chart, e, options) {\\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\\n\\n    options.axis = options.axis || 'x';\\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\\n    var elements = [];\\n\\n    if (!items.length) {\\n      return [];\\n    }\\n\\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\\n      if (chart.isDatasetVisible(datasetIndex)) {\\n        var meta = chart.getDatasetMeta(datasetIndex);\\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\\n\\n        if (element && !element._view.skip) {\\n          elements.push(element);\\n        }\\n      }\\n    });\\n    return elements;\\n  }\\n  /**\\n   * @interface IInteractionOptions\\n   */\\n\\n  /**\\n   * If true, only consider items that intersect the point\\n   * @name IInterfaceOptions#boolean\\n   * @type Boolean\\n   */\\n\\n  /**\\n   * Contains interaction related functions\\n   * @namespace Chart.Interaction\\n   */\\n\\n\\n  var core_interaction = {\\n    // Helper function for different modes\\n    modes: {\\n      single: function single(chart, e) {\\n        var position = getRelativePosition(e, chart);\\n        var elements = [];\\n        parseVisibleItems(chart, function (element) {\\n          if (element.inRange(position.x, position.y)) {\\n            elements.push(element);\\n            return elements;\\n          }\\n        });\\n        return elements.slice(0, 1);\\n      },\\n\\n      /**\\n       * @function Chart.Interaction.modes.label\\n       * @deprecated since version 2.4.0\\n       * @todo remove at version 3\\n       * @private\\n       */\\n      label: indexMode,\\n\\n      /**\\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\\n       * @function Chart.Interaction.modes.index\\n       * @since v2.4.0\\n       * @param {Chart} chart - the chart we are returning items from\\n       * @param {Event} e - the event we are find things at\\n       * @param {IInteractionOptions} options - options to use during interaction\\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\\n       */\\n      index: indexMode,\\n\\n      /**\\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\\n       * @function Chart.Interaction.modes.dataset\\n       * @param {Chart} chart - the chart we are returning items from\\n       * @param {Event} e - the event we are find things at\\n       * @param {IInteractionOptions} options - options to use during interaction\\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\\n       */\\n      dataset: function dataset(chart, e, options) {\\n        var position = getRelativePosition(e, chart);\\n        options.axis = options.axis || 'xy';\\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\\n\\n        if (items.length > 0) {\\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\\n        }\\n\\n        return items;\\n      },\\n\\n      /**\\n       * @function Chart.Interaction.modes.x-axis\\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\\n       * @todo remove at version 3\\n       * @private\\n       */\\n      'x-axis': function xAxis(chart, e) {\\n        return indexMode(chart, e, {\\n          intersect: false\\n        });\\n      },\\n\\n      /**\\n       * Point mode returns all elements that hit test based on the event position\\n       * of the event\\n       * @function Chart.Interaction.modes.intersect\\n       * @param {Chart} chart - the chart we are returning items from\\n       * @param {Event} e - the event we are find things at\\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\\n       */\\n      point: function point(chart, e) {\\n        var position = getRelativePosition(e, chart);\\n        return getIntersectItems(chart, position);\\n      },\\n\\n      /**\\n       * nearest mode returns the element closest to the point\\n       * @function Chart.Interaction.modes.intersect\\n       * @param {Chart} chart - the chart we are returning items from\\n       * @param {Event} e - the event we are find things at\\n       * @param {IInteractionOptions} options - options to use\\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\\n       */\\n      nearest: function nearest(chart, e, options) {\\n        var position = getRelativePosition(e, chart);\\n        options.axis = options.axis || 'xy';\\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\\n      },\\n\\n      /**\\n       * x mode returns the elements that hit-test at the current x coordinate\\n       * @function Chart.Interaction.modes.x\\n       * @param {Chart} chart - the chart we are returning items from\\n       * @param {Event} e - the event we are find things at\\n       * @param {IInteractionOptions} options - options to use\\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\\n       */\\n      x: function x(chart, e, options) {\\n        var position = getRelativePosition(e, chart);\\n        var items = [];\\n        var intersectsItem = false;\\n        parseVisibleItems(chart, function (element) {\\n          if (element.inXRange(position.x)) {\\n            items.push(element);\\n          }\\n\\n          if (element.inRange(position.x, position.y)) {\\n            intersectsItem = true;\\n          }\\n        }); // If we want to trigger on an intersect and we don't have any items\\n        // that intersect the position, return nothing\\n\\n        if (options.intersect && !intersectsItem) {\\n          items = [];\\n        }\\n\\n        return items;\\n      },\\n\\n      /**\\n       * y mode returns the elements that hit-test at the current y coordinate\\n       * @function Chart.Interaction.modes.y\\n       * @param {Chart} chart - the chart we are returning items from\\n       * @param {Event} e - the event we are find things at\\n       * @param {IInteractionOptions} options - options to use\\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\\n       */\\n      y: function y(chart, e, options) {\\n        var position = getRelativePosition(e, chart);\\n        var items = [];\\n        var intersectsItem = false;\\n        parseVisibleItems(chart, function (element) {\\n          if (element.inYRange(position.y)) {\\n            items.push(element);\\n          }\\n\\n          if (element.inRange(position.x, position.y)) {\\n            intersectsItem = true;\\n          }\\n        }); // If we want to trigger on an intersect and we don't have any items\\n        // that intersect the position, return nothing\\n\\n        if (options.intersect && !intersectsItem) {\\n          items = [];\\n        }\\n\\n        return items;\\n      }\\n    }\\n  };\\n\\n  function filterByPosition(array, position) {\\n    return helpers$1.where(array, function (v) {\\n      return v.position === position;\\n    });\\n  }\\n\\n  function sortByWeight(array, reverse) {\\n    array.forEach(function (v, i) {\\n      v._tmpIndex_ = i;\\n      return v;\\n    });\\n    array.sort(function (a, b) {\\n      var v0 = reverse ? b : a;\\n      var v1 = reverse ? a : b;\\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\\n    });\\n    array.forEach(function (v) {\\n      delete v._tmpIndex_;\\n    });\\n  }\\n\\n  function findMaxPadding(boxes) {\\n    var top = 0;\\n    var left = 0;\\n    var bottom = 0;\\n    var right = 0;\\n    helpers$1.each(boxes, function (box) {\\n      if (box.getPadding) {\\n        var boxPadding = box.getPadding();\\n        top = Math.max(top, boxPadding.top);\\n        left = Math.max(left, boxPadding.left);\\n        bottom = Math.max(bottom, boxPadding.bottom);\\n        right = Math.max(right, boxPadding.right);\\n      }\\n    });\\n    return {\\n      top: top,\\n      left: left,\\n      bottom: bottom,\\n      right: right\\n    };\\n  }\\n\\n  function addSizeByPosition(boxes, size) {\\n    helpers$1.each(boxes, function (box) {\\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\\n    });\\n  }\\n\\n  core_defaults._set('global', {\\n    layout: {\\n      padding: {\\n        top: 0,\\n        right: 0,\\n        bottom: 0,\\n        left: 0\\n      }\\n    }\\n  });\\n  /**\\n   * @interface ILayoutItem\\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\\n   * @prop {function} getPadding -  Returns an object with padding on the edges\\n   * @prop {number} width - Width of item. Must be valid after update()\\n   * @prop {number} height - Height of item. Must be valid after update()\\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\\n   */\\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\\n  // It is this service's responsibility of carrying out that layout.\\n\\n\\n  var core_layouts = {\\n    defaults: {},\\n\\n    /**\\n     * Register a box to a chart.\\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\\n     * @param {Chart} chart - the chart to use\\n     * @param {ILayoutItem} item - the item to add to be layed out\\n     */\\n    addBox: function addBox(chart, item) {\\n      if (!chart.boxes) {\\n        chart.boxes = [];\\n      } // initialize item with default values\\n\\n\\n      item.fullWidth = item.fullWidth || false;\\n      item.position = item.position || 'top';\\n      item.weight = item.weight || 0;\\n      chart.boxes.push(item);\\n    },\\n\\n    /**\\n     * Remove a layoutItem from a chart\\n     * @param {Chart} chart - the chart to remove the box from\\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\\n     */\\n    removeBox: function removeBox(chart, layoutItem) {\\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\\n\\n      if (index !== -1) {\\n        chart.boxes.splice(index, 1);\\n      }\\n    },\\n\\n    /**\\n     * Sets (or updates) options on the given `item`.\\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\\n     * @param {ILayoutItem} item - the item to configure with the given options\\n     * @param {object} options - the new item options.\\n     */\\n    configure: function configure(chart, item, options) {\\n      var props = ['fullWidth', 'position', 'weight'];\\n      var ilen = props.length;\\n      var i = 0;\\n      var prop;\\n\\n      for (; i < ilen; ++i) {\\n        prop = props[i];\\n\\n        if (options.hasOwnProperty(prop)) {\\n          item[prop] = options[prop];\\n        }\\n      }\\n    },\\n\\n    /**\\n     * Fits boxes of the given chart into the given size by having each box measure itself\\n     * then running a fitting algorithm\\n     * @param {Chart} chart - the chart\\n     * @param {number} width - the width to fit into\\n     * @param {number} height - the height to fit into\\n     */\\n    update: function update(chart, width, height) {\\n      if (!chart) {\\n        return;\\n      }\\n\\n      var layoutOptions = chart.options.layout || {};\\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\\n      var leftPadding = padding.left;\\n      var rightPadding = padding.right;\\n      var topPadding = padding.top;\\n      var bottomPadding = padding.bottom;\\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\\n      var topBoxes = filterByPosition(chart.boxes, 'top');\\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\\n\\n      sortByWeight(leftBoxes, true);\\n      sortByWeight(rightBoxes, false);\\n      sortByWeight(topBoxes, true);\\n      sortByWeight(bottomBoxes, false);\\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\\n      // Our canvas looks like the following.\\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\\n      // B1 is the bottom axis\\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\\n      // an error will be thrown.\\n      //\\n      // |----------------------------------------------------|\\n      // |                  T1 (Full Width)                   |\\n      // |----------------------------------------------------|\\n      // |    |    |                 T2                  |    |\\n      // |    |----|-------------------------------------|----|\\n      // |    |    | C1 |                           | C2 |    |\\n      // |    |    |----|                           |----|    |\\n      // |    |    |                                     |    |\\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\\n      // |    |    |                                     |    |\\n      // |    |    |----|                           |----|    |\\n      // |    |    | C3 |                           | C4 |    |\\n      // |    |----|-------------------------------------|----|\\n      // |    |    |                 B1                  |    |\\n      // |----------------------------------------------------|\\n      // |                  B2 (Full Width)                   |\\n      // |----------------------------------------------------|\\n      //\\n      // What we do to find the best sizing, we do the following\\n      // 1. Determine the minimum size of the chart area.\\n      // 2. Split the remaining width equally between each vertical axis\\n      // 3. Split the remaining height equally between each horizontal axis\\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\\n      // 6. Refit each axis\\n      // 7. Position each axis in the final location\\n      // 8. Tell the chart the final location of the chart area\\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\\n      // Step 1\\n\\n      var chartWidth = width - leftPadding - rightPadding;\\n      var chartHeight = height - topPadding - bottomPadding;\\n      var chartAreaWidth = chartWidth / 2; // min 50%\\n      // Step 2\\n\\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\\n      // Step 4\\n\\n      var maxChartAreaWidth = chartWidth;\\n      var maxChartAreaHeight = chartHeight;\\n      var outerBoxSizes = {\\n        top: topPadding,\\n        left: leftPadding,\\n        bottom: bottomPadding,\\n        right: rightPadding\\n      };\\n      var minBoxSizes = [];\\n      var maxPadding;\\n\\n      function getMinimumBoxSize(box) {\\n        var minSize;\\n        var isHorizontal = box.isHorizontal();\\n\\n        if (isHorizontal) {\\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\\n          maxChartAreaHeight -= minSize.height;\\n        } else {\\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\\n          maxChartAreaWidth -= minSize.width;\\n        }\\n\\n        minBoxSizes.push({\\n          horizontal: isHorizontal,\\n          width: minSize.width,\\n          box: box\\n        });\\n      }\\n\\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\\n\\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\\n      // be if the axes are drawn at their minimum sizes.\\n      // Steps 5 & 6\\n      // Function to fit a box\\n\\n      function fitBox(box) {\\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\\n          return minBox.box === box;\\n        });\\n\\n        if (minBoxSize) {\\n          if (minBoxSize.horizontal) {\\n            var scaleMargin = {\\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\\n              top: 0,\\n              bottom: 0\\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\\n            // on the margin. Sometimes they need to increase in size slightly\\n\\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\\n          } else {\\n            box.update(minBoxSize.width, maxChartAreaHeight);\\n          }\\n        }\\n      } // Update, and calculate the left and right margins for the horizontal boxes\\n\\n\\n      helpers$1.each(verticalBoxes, fitBox);\\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\\n\\n      helpers$1.each(horizontalBoxes, fitBox);\\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\\n\\n      function finalFitVerticalBox(box) {\\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\\n          return minSize.box === box;\\n        });\\n        var scaleMargin = {\\n          left: 0,\\n          right: 0,\\n          top: outerBoxSizes.top,\\n          bottom: outerBoxSizes.bottom\\n        };\\n\\n        if (minBoxSize) {\\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\\n        }\\n      } // Let the left layout know the final margin\\n\\n\\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\\n\\n      outerBoxSizes = {\\n        top: topPadding,\\n        left: leftPadding,\\n        bottom: bottomPadding,\\n        right: rightPadding\\n      };\\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\\n\\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\\n      outerBoxSizes.left += leftPaddingAddition;\\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\\n      outerBoxSizes.top += topPaddingAddition;\\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\\n      // without calling `fit` again\\n\\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\\n\\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\\n        helpers$1.each(verticalBoxes, function (box) {\\n          box.height = newMaxChartAreaHeight;\\n        });\\n        helpers$1.each(horizontalBoxes, function (box) {\\n          if (!box.fullWidth) {\\n            box.width = newMaxChartAreaWidth;\\n          }\\n        });\\n        maxChartAreaHeight = newMaxChartAreaHeight;\\n        maxChartAreaWidth = newMaxChartAreaWidth;\\n      } // Step 7 - Position the boxes\\n\\n\\n      var left = leftPadding + leftPaddingAddition;\\n      var top = topPadding + topPaddingAddition;\\n\\n      function placeBox(box) {\\n        if (box.isHorizontal()) {\\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\\n          box.top = top;\\n          box.bottom = top + box.height; // Move to next point\\n\\n          top = box.bottom;\\n        } else {\\n          box.left = left;\\n          box.right = left + box.width;\\n          box.top = outerBoxSizes.top;\\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\\n\\n          left = box.right;\\n        }\\n      }\\n\\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\\n\\n      left += maxChartAreaWidth;\\n      top += maxChartAreaHeight;\\n      helpers$1.each(rightBoxes, placeBox);\\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\\n\\n      chart.chartArea = {\\n        left: outerBoxSizes.left,\\n        top: outerBoxSizes.top,\\n        right: outerBoxSizes.left + maxChartAreaWidth,\\n        bottom: outerBoxSizes.top + maxChartAreaHeight\\n      }; // Step 9\\n\\n      helpers$1.each(chartAreaBoxes, function (box) {\\n        box.left = chart.chartArea.left;\\n        box.top = chart.chartArea.top;\\n        box.right = chart.chartArea.right;\\n        box.bottom = chart.chartArea.bottom;\\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\\n      });\\n    }\\n  };\\n  /**\\n   * Platform fallback implementation (minimal).\\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\\n   */\\n\\n  var platform_basic = {\\n    acquireContext: function acquireContext(item) {\\n      if (item && item.canvas) {\\n        // Support for any object associated to a canvas (including a context2d)\\n        item = item.canvas;\\n      }\\n\\n      return item && item.getContext('2d') || null;\\n    }\\n  };\\n  var platform_dom = \\\"/*\\\\n * DOM element rendering detection\\\\n * https://davidwalsh.name/detect-node-insertion\\\\n */\\\\n@keyframes chartjs-render-animation {\\\\n\\\\tfrom { opacity: 0.99; }\\\\n\\\\tto { opacity: 1; }\\\\n}\\\\n\\\\n.chartjs-render-monitor {\\\\n\\\\tanimation: chartjs-render-animation 0.001s;\\\\n}\\\\n\\\\n/*\\\\n * DOM element resizing detection\\\\n * https://github.com/marcj/css-element-queries\\\\n */\\\\n.chartjs-size-monitor,\\\\n.chartjs-size-monitor-expand,\\\\n.chartjs-size-monitor-shrink {\\\\n\\\\tposition: absolute;\\\\n\\\\tdirection: ltr;\\\\n\\\\tleft: 0;\\\\n\\\\ttop: 0;\\\\n\\\\tright: 0;\\\\n\\\\tbottom: 0;\\\\n\\\\toverflow: hidden;\\\\n\\\\tpointer-events: none;\\\\n\\\\tvisibility: hidden;\\\\n\\\\tz-index: -1;\\\\n}\\\\n\\\\n.chartjs-size-monitor-expand > div {\\\\n\\\\tposition: absolute;\\\\n\\\\twidth: 1000000px;\\\\n\\\\theight: 1000000px;\\\\n\\\\tleft: 0;\\\\n\\\\ttop: 0;\\\\n}\\\\n\\\\n.chartjs-size-monitor-shrink > div {\\\\n\\\\tposition: absolute;\\\\n\\\\twidth: 200%;\\\\n\\\\theight: 200%;\\\\n\\\\tleft: 0;\\\\n\\\\ttop: 0;\\\\n}\\\\n\\\";\\n  var platform_dom$1 =\\n  /*#__PURE__*/\\n  Object.freeze({\\n    default: platform_dom\\n  });\\n\\n  function getCjsExportFromNamespace(n) {\\n    return n && n.default || n;\\n  }\\n\\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\\n  var EXPANDO_KEY = '$chartjs';\\n  var CSS_PREFIX = 'chartjs-';\\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\\n  /**\\n   * DOM event types -> Chart.js event types.\\n   * Note: only events with different types are mapped.\\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\\n   */\\n\\n  var EVENT_TYPES = {\\n    touchstart: 'mousedown',\\n    touchmove: 'mousemove',\\n    touchend: 'mouseup',\\n    pointerenter: 'mouseenter',\\n    pointerdown: 'mousedown',\\n    pointermove: 'mousemove',\\n    pointerup: 'mouseup',\\n    pointerleave: 'mouseout',\\n    pointerout: 'mouseout'\\n  };\\n  /**\\n   * The \\\"used\\\" size is the final value of a dimension property after all calculations have\\n   * been performed. This method uses the computed style of `element` but returns undefined\\n   * if the computed style is not expressed in pixels. That can happen in some cases where\\n   * `element` has a size relative to its parent and this last one is not yet displayed,\\n   * for example because of `display: none` on a parent node.\\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\\n   * @returns {number} Size in pixels or undefined if unknown.\\n   */\\n\\n  function readUsedSize(element, property) {\\n    var value = helpers$1.getStyle(element, property);\\n    var matches = value && value.match(/^(\\\\d+)(\\\\.\\\\d+)?px$/);\\n    return matches ? Number(matches[1]) : undefined;\\n  }\\n  /**\\n   * Initializes the canvas style and render size without modifying the canvas display size,\\n   * since responsiveness is handled by the controller.resize() method. The config is used\\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\\n   */\\n\\n\\n  function initCanvas(canvas, config) {\\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\\n    // returns null or '' if no explicit value has been set to the canvas attribute.\\n\\n    var renderHeight = canvas.getAttribute('height');\\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\\n\\n    canvas[EXPANDO_KEY] = {\\n      initial: {\\n        height: renderHeight,\\n        width: renderWidth,\\n        style: {\\n          display: style.display,\\n          height: style.height,\\n          width: style.width\\n        }\\n      }\\n    }; // Force canvas to display as block to avoid extra space caused by inline\\n    // elements, which would interfere with the responsive resize process.\\n    // https://github.com/chartjs/Chart.js/issues/2538\\n\\n    style.display = style.display || 'block';\\n\\n    if (renderWidth === null || renderWidth === '') {\\n      var displayWidth = readUsedSize(canvas, 'width');\\n\\n      if (displayWidth !== undefined) {\\n        canvas.width = displayWidth;\\n      }\\n    }\\n\\n    if (renderHeight === null || renderHeight === '') {\\n      if (canvas.style.height === '') {\\n        // If no explicit render height and style height, let's apply the aspect ratio,\\n        // which one can be specified by the user but also by charts as default option\\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\\n      } else {\\n        var displayHeight = readUsedSize(canvas, 'height');\\n\\n        if (displayWidth !== undefined) {\\n          canvas.height = displayHeight;\\n        }\\n      }\\n    }\\n\\n    return canvas;\\n  }\\n  /**\\n   * Detects support for options object argument in addEventListener.\\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\\n   * @private\\n   */\\n\\n\\n  var supportsEventListenerOptions = function () {\\n    var supports = false;\\n\\n    try {\\n      var options = Object.defineProperty({}, 'passive', {\\n        // eslint-disable-next-line getter-return\\n        get: function get() {\\n          supports = true;\\n        }\\n      });\\n      window.addEventListener('e', null, options);\\n    } catch (e) {// continue regardless of error\\n    }\\n\\n    return supports;\\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\\n  // https://github.com/chartjs/Chart.js/issues/4287\\n\\n\\n  var eventListenerOptions = supportsEventListenerOptions ? {\\n    passive: true\\n  } : false;\\n\\n  function addListener(node, type, listener) {\\n    node.addEventListener(type, listener, eventListenerOptions);\\n  }\\n\\n  function removeListener(node, type, listener) {\\n    node.removeEventListener(type, listener, eventListenerOptions);\\n  }\\n\\n  function createEvent(type, chart, x, y, nativeEvent) {\\n    return {\\n      type: type,\\n      chart: chart,\\n      native: nativeEvent || null,\\n      x: x !== undefined ? x : null,\\n      y: y !== undefined ? y : null\\n    };\\n  }\\n\\n  function fromNativeEvent(event, chart) {\\n    var type = EVENT_TYPES[event.type] || event.type;\\n    var pos = helpers$1.getRelativePosition(event, chart);\\n    return createEvent(type, chart, pos.x, pos.y, event);\\n  }\\n\\n  function throttled(fn, thisArg) {\\n    var ticking = false;\\n    var args = [];\\n    return function () {\\n      args = Array.prototype.slice.call(arguments);\\n      thisArg = thisArg || this;\\n\\n      if (!ticking) {\\n        ticking = true;\\n        helpers$1.requestAnimFrame.call(window, function () {\\n          ticking = false;\\n          fn.apply(thisArg, args);\\n        });\\n      }\\n    };\\n  }\\n\\n  function createDiv(cls) {\\n    var el = document.createElement('div');\\n    el.className = cls || '';\\n    return el;\\n  } // Implementation based on https://github.com/marcj/css-element-queries\\n\\n\\n  function createResizer(handler) {\\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\\n    // https://github.com/chartjs/Chart.js/issues/5902\\n\\n    var resizer = createDiv(CSS_SIZE_MONITOR);\\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\\n    expand.appendChild(createDiv());\\n    shrink.appendChild(createDiv());\\n    resizer.appendChild(expand);\\n    resizer.appendChild(shrink);\\n\\n    resizer._reset = function () {\\n      expand.scrollLeft = maxSize;\\n      expand.scrollTop = maxSize;\\n      shrink.scrollLeft = maxSize;\\n      shrink.scrollTop = maxSize;\\n    };\\n\\n    var onScroll = function onScroll() {\\n      resizer._reset();\\n\\n      handler();\\n    };\\n\\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\\n    return resizer;\\n  } // https://davidwalsh.name/detect-node-insertion\\n\\n\\n  function watchForRender(node, handler) {\\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\\n\\n    var proxy = expando.renderProxy = function (e) {\\n      if (e.animationName === CSS_RENDER_ANIMATION) {\\n        handler();\\n      }\\n    };\\n\\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\\n      addListener(node, type, proxy);\\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\\n    // is removed then added back immediately (same animation frame?). Accessing the\\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\\n    // https://github.com/chartjs/Chart.js/issues/4737\\n\\n    expando.reflow = !!node.offsetParent;\\n    node.classList.add(CSS_RENDER_MONITOR);\\n  }\\n\\n  function unwatchForRender(node) {\\n    var expando = node[EXPANDO_KEY] || {};\\n    var proxy = expando.renderProxy;\\n\\n    if (proxy) {\\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\\n        removeListener(node, type, proxy);\\n      });\\n      delete expando.renderProxy;\\n    }\\n\\n    node.classList.remove(CSS_RENDER_MONITOR);\\n  }\\n\\n  function addResizeListener(node, listener, chart) {\\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\\n\\n    var resizer = expando.resizer = createResizer(throttled(function () {\\n      if (expando.resizer) {\\n        var container = chart.options.maintainAspectRatio && node.parentNode;\\n        var w = container ? container.clientWidth : 0;\\n        listener(createEvent('resize', chart));\\n\\n        if (container && container.clientWidth < w && chart.canvas) {\\n          // If the container size shrank during chart resize, let's assume\\n          // scrollbar appeared. So we resize again with the scrollbar visible -\\n          // effectively making chart smaller and the scrollbar hidden again.\\n          // Because we are inside `throttled`, and currently `ticking`, scroll\\n          // events are ignored during this whole 2 resize process.\\n          // If we assumed wrong and something else happened, we are resizing\\n          // twice in a frame (potential performance issue)\\n          listener(createEvent('resize', chart));\\n        }\\n      }\\n    })); // The resizer needs to be attached to the node parent, so we first need to be\\n    // sure that `node` is attached to the DOM before injecting the resizer element.\\n\\n    watchForRender(node, function () {\\n      if (expando.resizer) {\\n        var container = node.parentNode;\\n\\n        if (container && container !== resizer.parentNode) {\\n          container.insertBefore(resizer, container.firstChild);\\n        } // The container size might have changed, let's reset the resizer state.\\n\\n\\n        resizer._reset();\\n      }\\n    });\\n  }\\n\\n  function removeResizeListener(node) {\\n    var expando = node[EXPANDO_KEY] || {};\\n    var resizer = expando.resizer;\\n    delete expando.resizer;\\n    unwatchForRender(node);\\n\\n    if (resizer && resizer.parentNode) {\\n      resizer.parentNode.removeChild(resizer);\\n    }\\n  }\\n\\n  function injectCSS(platform, css) {\\n    // https://stackoverflow.com/q/3922139\\n    var style = platform._style || document.createElement('style');\\n\\n    if (!platform._style) {\\n      platform._style = style;\\n      css = '/* Chart.js */\\\\n' + css;\\n      style.setAttribute('type', 'text/css');\\n      document.getElementsByTagName('head')[0].appendChild(style);\\n    }\\n\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  var platform_dom$2 = {\\n    /**\\n     * When `true`, prevents the automatic injection of the stylesheet required to\\n     * correctly detect when the chart is added to the DOM and then resized. This\\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\\n     * to be manually imported to make this library compatible with any CSP.\\n     * See https://github.com/chartjs/Chart.js/issues/5208\\n     */\\n    disableCSSInjection: false,\\n\\n    /**\\n     * This property holds whether this platform is enabled for the current environment.\\n     * Currently used by platform.js to select the proper implementation.\\n     * @private\\n     */\\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\\n\\n    /**\\n     * @private\\n     */\\n    _ensureLoaded: function _ensureLoaded() {\\n      if (this._loaded) {\\n        return;\\n      }\\n\\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\\n\\n      if (!this.disableCSSInjection) {\\n        injectCSS(this, stylesheet);\\n      }\\n    },\\n    acquireContext: function acquireContext(item, config) {\\n      if (typeof item === 'string') {\\n        item = document.getElementById(item);\\n      } else if (item.length) {\\n        // Support for array based queries (such as jQuery)\\n        item = item[0];\\n      }\\n\\n      if (item && item.canvas) {\\n        // Support for any object associated to a canvas (including a context2d)\\n        item = item.canvas;\\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\\n      // https://github.com/chartjs/Chart.js/issues/2807\\n\\n\\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\\n      // platform options after importing the library (e.g. `disableCSSInjection`).\\n\\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\\n      // inside an iframe or when running in a protected environment. We could guess the\\n      // types from their toString() value but let's keep things flexible and assume it's\\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\\n      // https://github.com/chartjs/Chart.js/issues/3887\\n      // https://github.com/chartjs/Chart.js/issues/4102\\n      // https://github.com/chartjs/Chart.js/issues/4152\\n\\n\\n      if (context && context.canvas === item) {\\n        initCanvas(item, config);\\n        return context;\\n      }\\n\\n      return null;\\n    },\\n    releaseContext: function releaseContext(context) {\\n      var canvas = context.canvas;\\n\\n      if (!canvas[EXPANDO_KEY]) {\\n        return;\\n      }\\n\\n      var initial = canvas[EXPANDO_KEY].initial;\\n      ['height', 'width'].forEach(function (prop) {\\n        var value = initial[prop];\\n\\n        if (helpers$1.isNullOrUndef(value)) {\\n          canvas.removeAttribute(prop);\\n        } else {\\n          canvas.setAttribute(prop, value);\\n        }\\n      });\\n      helpers$1.each(initial.style || {}, function (value, key) {\\n        canvas.style[key] = value;\\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\\n      // we can't use save() and restore() to restore the initial state. So make sure that at\\n      // least the canvas context is reset to the default state by setting the canvas width.\\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\\n      // eslint-disable-next-line no-self-assign\\n\\n      canvas.width = canvas.width;\\n      delete canvas[EXPANDO_KEY];\\n    },\\n    addEventListener: function addEventListener(chart, type, listener) {\\n      var canvas = chart.canvas;\\n\\n      if (type === 'resize') {\\n        // Note: the resize event is not supported on all browsers.\\n        addResizeListener(canvas, listener, chart);\\n        return;\\n      }\\n\\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\\n      var proxies = expando.proxies || (expando.proxies = {});\\n\\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\\n        listener(fromNativeEvent(event, chart));\\n      };\\n\\n      addListener(canvas, type, proxy);\\n    },\\n    removeEventListener: function removeEventListener(chart, type, listener) {\\n      var canvas = chart.canvas;\\n\\n      if (type === 'resize') {\\n        // Note: the resize event is not supported on all browsers.\\n        removeResizeListener(canvas);\\n        return;\\n      }\\n\\n      var expando = listener[EXPANDO_KEY] || {};\\n      var proxies = expando.proxies || {};\\n      var proxy = proxies[chart.id + '_' + type];\\n\\n      if (!proxy) {\\n        return;\\n      }\\n\\n      removeListener(canvas, type, proxy);\\n    }\\n  }; // DEPRECATIONS\\n\\n  /**\\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\\n   * @function Chart.helpers.addEvent\\n   * @deprecated since version 2.7.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  helpers$1.addEvent = addListener;\\n  /**\\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\\n   * @function Chart.helpers.removeEvent\\n   * @deprecated since version 2.7.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\\n\\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\\n  /**\\n   * @namespace Chart.platform\\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\\n   * @since 2.4.0\\n   */\\n\\n  var platform = helpers$1.extend({\\n    /**\\n     * @since 2.7.0\\n     */\\n    initialize: function initialize() {},\\n\\n    /**\\n     * Called at chart construction time, returns a context2d instance implementing\\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\\n     * @param {*} item - The native item from which to acquire context (platform specific)\\n     * @param {object} options - The chart options\\n     * @returns {CanvasRenderingContext2D} context2d instance\\n     */\\n    acquireContext: function acquireContext() {},\\n\\n    /**\\n     * Called at chart destruction time, releases any resources associated to the context\\n     * previously returned by the acquireContext() method.\\n     * @param {CanvasRenderingContext2D} context - The context2d instance\\n     * @returns {boolean} true if the method succeeded, else false\\n     */\\n    releaseContext: function releaseContext() {},\\n\\n    /**\\n     * Registers the specified listener on the given chart.\\n     * @param {Chart} chart - Chart from which to listen for event\\n     * @param {string} type - The ({@link IEvent}) type to listen for\\n     * @param {function} listener - Receives a notification (an object that implements\\n     * the {@link IEvent} interface) when an event of the specified type occurs.\\n     */\\n    addEventListener: function addEventListener() {},\\n\\n    /**\\n     * Removes the specified listener previously registered with addEventListener.\\n     * @param {Chart} chart - Chart from which to remove the listener\\n     * @param {string} type - The ({@link IEvent}) type to remove\\n     * @param {function} listener - The listener function to remove from the event target.\\n     */\\n    removeEventListener: function removeEventListener() {}\\n  }, implementation);\\n\\n  core_defaults._set('global', {\\n    plugins: {}\\n  });\\n  /**\\n   * The plugin service singleton\\n   * @namespace Chart.plugins\\n   * @since 2.1.0\\n   */\\n\\n\\n  var core_plugins = {\\n    /**\\n     * Globally registered plugins.\\n     * @private\\n     */\\n    _plugins: [],\\n\\n    /**\\n     * This identifier is used to invalidate the descriptors cache attached to each chart\\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\\n     * incremented and descriptors are regenerated during following API calls.\\n     * @private\\n     */\\n    _cacheId: 0,\\n\\n    /**\\n     * Registers the given plugin(s) if not already registered.\\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\\n     */\\n    register: function register(plugins) {\\n      var p = this._plugins;\\n      [].concat(plugins).forEach(function (plugin) {\\n        if (p.indexOf(plugin) === -1) {\\n          p.push(plugin);\\n        }\\n      });\\n      this._cacheId++;\\n    },\\n\\n    /**\\n     * Unregisters the given plugin(s) only if registered.\\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\\n     */\\n    unregister: function unregister(plugins) {\\n      var p = this._plugins;\\n      [].concat(plugins).forEach(function (plugin) {\\n        var idx = p.indexOf(plugin);\\n\\n        if (idx !== -1) {\\n          p.splice(idx, 1);\\n        }\\n      });\\n      this._cacheId++;\\n    },\\n\\n    /**\\n     * Remove all registered plugins.\\n     * @since 2.1.5\\n     */\\n    clear: function clear() {\\n      this._plugins = [];\\n      this._cacheId++;\\n    },\\n\\n    /**\\n     * Returns the number of registered plugins?\\n     * @returns {number}\\n     * @since 2.1.5\\n     */\\n    count: function count() {\\n      return this._plugins.length;\\n    },\\n\\n    /**\\n     * Returns all registered plugin instances.\\n     * @returns {IPlugin[]} array of plugin objects.\\n     * @since 2.1.5\\n     */\\n    getAll: function getAll() {\\n      return this._plugins;\\n    },\\n\\n    /**\\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\\n     * This method immediately returns as soon as a plugin explicitly returns false. The\\n     * returned value can be used, for instance, to interrupt the current action.\\n     * @param {Chart} chart - The chart instance for which plugins should be called.\\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\\n     * @returns {boolean} false if any of the plugins return false, else returns true.\\n     */\\n    notify: function notify(chart, hook, args) {\\n      var descriptors = this.descriptors(chart);\\n      var ilen = descriptors.length;\\n      var i, descriptor, plugin, params, method;\\n\\n      for (i = 0; i < ilen; ++i) {\\n        descriptor = descriptors[i];\\n        plugin = descriptor.plugin;\\n        method = plugin[hook];\\n\\n        if (typeof method === 'function') {\\n          params = [chart].concat(args || []);\\n          params.push(descriptor.options);\\n\\n          if (method.apply(plugin, params) === false) {\\n            return false;\\n          }\\n        }\\n      }\\n\\n      return true;\\n    },\\n\\n    /**\\n     * Returns descriptors of enabled plugins for the given chart.\\n     * @returns {object[]} [{ plugin, options }]\\n     * @private\\n     */\\n    descriptors: function descriptors(chart) {\\n      var cache = chart.$plugins || (chart.$plugins = {});\\n\\n      if (cache.id === this._cacheId) {\\n        return cache.descriptors;\\n      }\\n\\n      var plugins = [];\\n      var descriptors = [];\\n      var config = chart && chart.config || {};\\n      var options = config.options && config.options.plugins || {};\\n\\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\\n        var idx = plugins.indexOf(plugin);\\n\\n        if (idx !== -1) {\\n          return;\\n        }\\n\\n        var id = plugin.id;\\n        var opts = options[id];\\n\\n        if (opts === false) {\\n          return;\\n        }\\n\\n        if (opts === true) {\\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\\n        }\\n\\n        plugins.push(plugin);\\n        descriptors.push({\\n          plugin: plugin,\\n          options: opts || {}\\n        });\\n      });\\n\\n      cache.descriptors = descriptors;\\n      cache.id = this._cacheId;\\n      return descriptors;\\n    },\\n\\n    /**\\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\\n     * but in some cases, this reference can be changed by the user when updating options.\\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\\n     * @private\\n     */\\n    _invalidate: function _invalidate(chart) {\\n      delete chart.$plugins;\\n    }\\n  };\\n  var core_scaleService = {\\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\\n    // use the new chart options to grab the correct scale\\n    constructors: {},\\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\\n    // old browsers\\n    // Scale config defaults\\n    defaults: {},\\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\\n      this.constructors[type] = scaleConstructor;\\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\\n    },\\n    getScaleConstructor: function getScaleConstructor(type) {\\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\\n    },\\n    getScaleDefaults: function getScaleDefaults(type) {\\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\\n    },\\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\\n      var me = this;\\n\\n      if (me.defaults.hasOwnProperty(type)) {\\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\\n      }\\n    },\\n    addScalesToLayout: function addScalesToLayout(chart) {\\n      // Adds each scale to the chart.boxes array to be sized accordingly\\n      helpers$1.each(chart.scales, function (scale) {\\n        // Set ILayoutItem parameters for backwards compatibility\\n        scale.fullWidth = scale.options.fullWidth;\\n        scale.position = scale.options.position;\\n        scale.weight = scale.options.weight;\\n        core_layouts.addBox(chart, scale);\\n      });\\n    }\\n  };\\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\\n\\n  core_defaults._set('global', {\\n    tooltips: {\\n      enabled: true,\\n      custom: null,\\n      mode: 'nearest',\\n      position: 'average',\\n      intersect: true,\\n      backgroundColor: 'rgba(0,0,0,0.8)',\\n      titleFontStyle: 'bold',\\n      titleSpacing: 2,\\n      titleMarginBottom: 6,\\n      titleFontColor: '#fff',\\n      titleAlign: 'left',\\n      bodySpacing: 2,\\n      bodyFontColor: '#fff',\\n      bodyAlign: 'left',\\n      footerFontStyle: 'bold',\\n      footerSpacing: 2,\\n      footerMarginTop: 6,\\n      footerFontColor: '#fff',\\n      footerAlign: 'left',\\n      yPadding: 6,\\n      xPadding: 6,\\n      caretPadding: 2,\\n      caretSize: 5,\\n      cornerRadius: 6,\\n      multiKeyBackground: '#fff',\\n      displayColors: true,\\n      borderColor: 'rgba(0,0,0,0)',\\n      borderWidth: 0,\\n      callbacks: {\\n        // Args are: (tooltipItems, data)\\n        beforeTitle: helpers$1.noop,\\n        title: function title(tooltipItems, data) {\\n          var title = '';\\n          var labels = data.labels;\\n          var labelCount = labels ? labels.length : 0;\\n\\n          if (tooltipItems.length > 0) {\\n            var item = tooltipItems[0];\\n\\n            if (item.label) {\\n              title = item.label;\\n            } else if (item.xLabel) {\\n              title = item.xLabel;\\n            } else if (labelCount > 0 && item.index < labelCount) {\\n              title = labels[item.index];\\n            }\\n          }\\n\\n          return title;\\n        },\\n        afterTitle: helpers$1.noop,\\n        // Args are: (tooltipItems, data)\\n        beforeBody: helpers$1.noop,\\n        // Args are: (tooltipItem, data)\\n        beforeLabel: helpers$1.noop,\\n        label: function label(tooltipItem, data) {\\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\\n\\n          if (label) {\\n            label += ': ';\\n          }\\n\\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\\n            label += tooltipItem.value;\\n          } else {\\n            label += tooltipItem.yLabel;\\n          }\\n\\n          return label;\\n        },\\n        labelColor: function labelColor(tooltipItem, chart) {\\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\\n          var activeElement = meta.data[tooltipItem.index];\\n          var view = activeElement._view;\\n          return {\\n            borderColor: view.borderColor,\\n            backgroundColor: view.backgroundColor\\n          };\\n        },\\n        labelTextColor: function labelTextColor() {\\n          return this._options.bodyFontColor;\\n        },\\n        afterLabel: helpers$1.noop,\\n        // Args are: (tooltipItems, data)\\n        afterBody: helpers$1.noop,\\n        // Args are: (tooltipItems, data)\\n        beforeFooter: helpers$1.noop,\\n        footer: helpers$1.noop,\\n        afterFooter: helpers$1.noop\\n      }\\n    }\\n  });\\n\\n  var positioners = {\\n    /**\\n     * Average mode places the tooltip at the average position of the elements shown\\n     * @function Chart.Tooltip.positioners.average\\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\\n     * @returns {object} tooltip position\\n     */\\n    average: function average(elements) {\\n      if (!elements.length) {\\n        return false;\\n      }\\n\\n      var i, len;\\n      var x = 0;\\n      var y = 0;\\n      var count = 0;\\n\\n      for (i = 0, len = elements.length; i < len; ++i) {\\n        var el = elements[i];\\n\\n        if (el && el.hasValue()) {\\n          var pos = el.tooltipPosition();\\n          x += pos.x;\\n          y += pos.y;\\n          ++count;\\n        }\\n      }\\n\\n      return {\\n        x: x / count,\\n        y: y / count\\n      };\\n    },\\n\\n    /**\\n     * Gets the tooltip position nearest of the item nearest to the event position\\n     * @function Chart.Tooltip.positioners.nearest\\n     * @param elements {Chart.Element[]} the tooltip elements\\n     * @param eventPosition {object} the position of the event in canvas coordinates\\n     * @returns {object} the tooltip position\\n     */\\n    nearest: function nearest(elements, eventPosition) {\\n      var x = eventPosition.x;\\n      var y = eventPosition.y;\\n      var minDistance = Number.POSITIVE_INFINITY;\\n      var i, len, nearestElement;\\n\\n      for (i = 0, len = elements.length; i < len; ++i) {\\n        var el = elements[i];\\n\\n        if (el && el.hasValue()) {\\n          var center = el.getCenterPoint();\\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\\n\\n          if (d < minDistance) {\\n            minDistance = d;\\n            nearestElement = el;\\n          }\\n        }\\n      }\\n\\n      if (nearestElement) {\\n        var tp = nearestElement.tooltipPosition();\\n        x = tp.x;\\n        y = tp.y;\\n      }\\n\\n      return {\\n        x: x,\\n        y: y\\n      };\\n    }\\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\\n\\n  function pushOrConcat(base, toPush) {\\n    if (toPush) {\\n      if (helpers$1.isArray(toPush)) {\\n        // base = base.concat(toPush);\\n        Array.prototype.push.apply(base, toPush);\\n      } else {\\n        base.push(toPush);\\n      }\\n    }\\n\\n    return base;\\n  }\\n  /**\\n   * Returns array of strings split by newline\\n   * @param {string} value - The value to split by newline.\\n   * @returns {string[]} value if newline present - Returned from String split() method\\n   * @function\\n   */\\n\\n\\n  function splitNewlines(str) {\\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\\\n') > -1) {\\n      return str.split('\\\\n');\\n    }\\n\\n    return str;\\n  }\\n  /**\\n   * Private helper to create a tooltip item model\\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\\n   * @return new tooltip item\\n   */\\n\\n\\n  function createTooltipItem(element) {\\n    var xScale = element._xScale;\\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\\n\\n    var index = element._index;\\n    var datasetIndex = element._datasetIndex;\\n\\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\\n\\n    var indexScale = controller._getIndexScale();\\n\\n    var valueScale = controller._getValueScale();\\n\\n    return {\\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\\n      index: index,\\n      datasetIndex: datasetIndex,\\n      x: element._model.x,\\n      y: element._model.y\\n    };\\n  }\\n  /**\\n   * Helper to get the reset model for the tooltip\\n   * @param tooltipOpts {object} the tooltip options\\n   */\\n\\n\\n  function getBaseModel(tooltipOpts) {\\n    var globalDefaults = core_defaults.global;\\n    return {\\n      // Positioning\\n      xPadding: tooltipOpts.xPadding,\\n      yPadding: tooltipOpts.yPadding,\\n      xAlign: tooltipOpts.xAlign,\\n      yAlign: tooltipOpts.yAlign,\\n      // Body\\n      bodyFontColor: tooltipOpts.bodyFontColor,\\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\\n      _bodyAlign: tooltipOpts.bodyAlign,\\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\\n      bodySpacing: tooltipOpts.bodySpacing,\\n      // Title\\n      titleFontColor: tooltipOpts.titleFontColor,\\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\\n      _titleAlign: tooltipOpts.titleAlign,\\n      titleSpacing: tooltipOpts.titleSpacing,\\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\\n      // Footer\\n      footerFontColor: tooltipOpts.footerFontColor,\\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\\n      _footerAlign: tooltipOpts.footerAlign,\\n      footerSpacing: tooltipOpts.footerSpacing,\\n      footerMarginTop: tooltipOpts.footerMarginTop,\\n      // Appearance\\n      caretSize: tooltipOpts.caretSize,\\n      cornerRadius: tooltipOpts.cornerRadius,\\n      backgroundColor: tooltipOpts.backgroundColor,\\n      opacity: 0,\\n      legendColorBackground: tooltipOpts.multiKeyBackground,\\n      displayColors: tooltipOpts.displayColors,\\n      borderColor: tooltipOpts.borderColor,\\n      borderWidth: tooltipOpts.borderWidth\\n    };\\n  }\\n  /**\\n   * Get the size of the tooltip\\n   */\\n\\n\\n  function getTooltipSize(tooltip, model) {\\n    var ctx = tooltip._chart.ctx;\\n    var height = model.yPadding * 2; // Tooltip Padding\\n\\n    var width = 0; // Count of all lines in the body\\n\\n    var body = model.body;\\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\\n    }, 0);\\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\\n    var titleLineCount = model.title.length;\\n    var footerLineCount = model.footer.length;\\n    var titleFontSize = model.titleFontSize;\\n    var bodyFontSize = model.bodyFontSize;\\n    var footerFontSize = model.footerFontSize;\\n    height += titleLineCount * titleFontSize; // Title Lines\\n\\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\\n\\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\\n\\n    height += combinedBodyLength * bodyFontSize; // Body Lines\\n\\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\\n\\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\\n\\n    height += footerLineCount * footerFontSize; // Footer Lines\\n\\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\\n    // Title width\\n\\n    var widthPadding = 0;\\n\\n    var maxLineWidth = function maxLineWidth(line) {\\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\\n    };\\n\\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\\n    helpers$1.each(model.title, maxLineWidth); // Body width\\n\\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\\n\\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\\n    helpers$1.each(body, function (bodyItem) {\\n      helpers$1.each(bodyItem.before, maxLineWidth);\\n      helpers$1.each(bodyItem.lines, maxLineWidth);\\n      helpers$1.each(bodyItem.after, maxLineWidth);\\n    }); // Reset back to 0\\n\\n    widthPadding = 0; // Footer width\\n\\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\\n\\n    width += 2 * model.xPadding;\\n    return {\\n      width: width,\\n      height: height\\n    };\\n  }\\n  /**\\n   * Helper to get the alignment of a tooltip given the size\\n   */\\n\\n\\n  function determineAlignment(tooltip, size) {\\n    var model = tooltip._model;\\n    var chart = tooltip._chart;\\n    var chartArea = tooltip._chart.chartArea;\\n    var xAlign = 'center';\\n    var yAlign = 'center';\\n\\n    if (model.y < size.height) {\\n      yAlign = 'top';\\n    } else if (model.y > chart.height - size.height) {\\n      yAlign = 'bottom';\\n    }\\n\\n    var lf, rf; // functions to determine left, right alignment\\n\\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\\n\\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\\n\\n    var midX = (chartArea.left + chartArea.right) / 2;\\n    var midY = (chartArea.top + chartArea.bottom) / 2;\\n\\n    if (yAlign === 'center') {\\n      lf = function lf(x) {\\n        return x <= midX;\\n      };\\n\\n      rf = function rf(x) {\\n        return x > midX;\\n      };\\n    } else {\\n      lf = function lf(x) {\\n        return x <= size.width / 2;\\n      };\\n\\n      rf = function rf(x) {\\n        return x >= chart.width - size.width / 2;\\n      };\\n    }\\n\\n    olf = function olf(x) {\\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\\n    };\\n\\n    orf = function orf(x) {\\n      return x - size.width - model.caretSize - model.caretPadding < 0;\\n    };\\n\\n    yf = function yf(y) {\\n      return y <= midY ? 'top' : 'bottom';\\n    };\\n\\n    if (lf(model.x)) {\\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\\n\\n      if (olf(model.x)) {\\n        xAlign = 'center';\\n        yAlign = yf(model.y);\\n      }\\n    } else if (rf(model.x)) {\\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\\n\\n      if (orf(model.x)) {\\n        xAlign = 'center';\\n        yAlign = yf(model.y);\\n      }\\n    }\\n\\n    var opts = tooltip._options;\\n    return {\\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\\n    };\\n  }\\n  /**\\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\\n   */\\n\\n\\n  function getBackgroundPoint(vm, size, alignment, chart) {\\n    // Background Position\\n    var x = vm.x;\\n    var y = vm.y;\\n    var caretSize = vm.caretSize;\\n    var caretPadding = vm.caretPadding;\\n    var cornerRadius = vm.cornerRadius;\\n    var xAlign = alignment.xAlign;\\n    var yAlign = alignment.yAlign;\\n    var paddingAndSize = caretSize + caretPadding;\\n    var radiusAndPadding = cornerRadius + caretPadding;\\n\\n    if (xAlign === 'right') {\\n      x -= size.width;\\n    } else if (xAlign === 'center') {\\n      x -= size.width / 2;\\n\\n      if (x + size.width > chart.width) {\\n        x = chart.width - size.width;\\n      }\\n\\n      if (x < 0) {\\n        x = 0;\\n      }\\n    }\\n\\n    if (yAlign === 'top') {\\n      y += paddingAndSize;\\n    } else if (yAlign === 'bottom') {\\n      y -= size.height + paddingAndSize;\\n    } else {\\n      y -= size.height / 2;\\n    }\\n\\n    if (yAlign === 'center') {\\n      if (xAlign === 'left') {\\n        x += paddingAndSize;\\n      } else if (xAlign === 'right') {\\n        x -= paddingAndSize;\\n      }\\n    } else if (xAlign === 'left') {\\n      x -= radiusAndPadding;\\n    } else if (xAlign === 'right') {\\n      x += radiusAndPadding;\\n    }\\n\\n    return {\\n      x: x,\\n      y: y\\n    };\\n  }\\n\\n  function getAlignedX(vm, align) {\\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\\n  }\\n  /**\\n   * Helper to build before and after body lines\\n   */\\n\\n\\n  function getBeforeAfterBodyLines(callback) {\\n    return pushOrConcat([], splitNewlines(callback));\\n  }\\n\\n  var exports$3 = core_element.extend({\\n    initialize: function initialize() {\\n      this._model = getBaseModel(this._options);\\n      this._lastActive = [];\\n    },\\n    // Get the title\\n    // Args are: (tooltipItem, data)\\n    getTitle: function getTitle() {\\n      var me = this;\\n      var opts = me._options;\\n      var callbacks = opts.callbacks;\\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\\n      var title = callbacks.title.apply(me, arguments);\\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\\n      var lines = [];\\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\\n      lines = pushOrConcat(lines, splitNewlines(title));\\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\\n      return lines;\\n    },\\n    // Args are: (tooltipItem, data)\\n    getBeforeBody: function getBeforeBody() {\\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\\n    },\\n    // Args are: (tooltipItem, data)\\n    getBody: function getBody(tooltipItems, data) {\\n      var me = this;\\n      var callbacks = me._options.callbacks;\\n      var bodyItems = [];\\n      helpers$1.each(tooltipItems, function (tooltipItem) {\\n        var bodyItem = {\\n          before: [],\\n          lines: [],\\n          after: []\\n        };\\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\\n        bodyItems.push(bodyItem);\\n      });\\n      return bodyItems;\\n    },\\n    // Args are: (tooltipItem, data)\\n    getAfterBody: function getAfterBody() {\\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\\n    },\\n    // Get the footer and beforeFooter and afterFooter lines\\n    // Args are: (tooltipItem, data)\\n    getFooter: function getFooter() {\\n      var me = this;\\n      var callbacks = me._options.callbacks;\\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\\n      var footer = callbacks.footer.apply(me, arguments);\\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\\n      var lines = [];\\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\\n      lines = pushOrConcat(lines, splitNewlines(footer));\\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\\n      return lines;\\n    },\\n    update: function update(changed) {\\n      var me = this;\\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\\n      // which breaks any animations.\\n\\n      var existingModel = me._model;\\n      var model = me._model = getBaseModel(opts);\\n      var active = me._active;\\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\\n\\n      var alignment = {\\n        xAlign: existingModel.xAlign,\\n        yAlign: existingModel.yAlign\\n      };\\n      var backgroundPoint = {\\n        x: existingModel.x,\\n        y: existingModel.y\\n      };\\n      var tooltipSize = {\\n        width: existingModel.width,\\n        height: existingModel.height\\n      };\\n      var tooltipPosition = {\\n        x: existingModel.caretX,\\n        y: existingModel.caretY\\n      };\\n      var i, len;\\n\\n      if (active.length) {\\n        model.opacity = 1;\\n        var labelColors = [];\\n        var labelTextColors = [];\\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\\n        var tooltipItems = [];\\n\\n        for (i = 0, len = active.length; i < len; ++i) {\\n          tooltipItems.push(createTooltipItem(active[i]));\\n        } // If the user provided a filter function, use it to modify the tooltip items\\n\\n\\n        if (opts.filter) {\\n          tooltipItems = tooltipItems.filter(function (a) {\\n            return opts.filter(a, data);\\n          });\\n        } // If the user provided a sorting function, use it to modify the tooltip items\\n\\n\\n        if (opts.itemSort) {\\n          tooltipItems = tooltipItems.sort(function (a, b) {\\n            return opts.itemSort(a, b, data);\\n          });\\n        } // Determine colors for boxes\\n\\n\\n        helpers$1.each(tooltipItems, function (tooltipItem) {\\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\\n        }); // Build the Text Lines\\n\\n        model.title = me.getTitle(tooltipItems, data);\\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\\n        model.body = me.getBody(tooltipItems, data);\\n        model.afterBody = me.getAfterBody(tooltipItems, data);\\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\\n\\n        model.x = tooltipPosition.x;\\n        model.y = tooltipPosition.y;\\n        model.caretPadding = opts.caretPadding;\\n        model.labelColors = labelColors;\\n        model.labelTextColors = labelTextColors; // data points\\n\\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\\n\\n        tooltipSize = getTooltipSize(this, model);\\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\\n\\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\\n      } else {\\n        model.opacity = 0;\\n      }\\n\\n      model.xAlign = alignment.xAlign;\\n      model.yAlign = alignment.yAlign;\\n      model.x = backgroundPoint.x;\\n      model.y = backgroundPoint.y;\\n      model.width = tooltipSize.width;\\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\\n\\n      model.caretX = tooltipPosition.x;\\n      model.caretY = tooltipPosition.y;\\n      me._model = model;\\n\\n      if (changed && opts.custom) {\\n        opts.custom.call(me, model);\\n      }\\n\\n      return me;\\n    },\\n    drawCaret: function drawCaret(tooltipPoint, size) {\\n      var ctx = this._chart.ctx;\\n      var vm = this._view;\\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\\n    },\\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\\n      var x1, x2, x3, y1, y2, y3;\\n      var caretSize = vm.caretSize;\\n      var cornerRadius = vm.cornerRadius;\\n      var xAlign = vm.xAlign;\\n      var yAlign = vm.yAlign;\\n      var ptX = tooltipPoint.x;\\n      var ptY = tooltipPoint.y;\\n      var width = size.width;\\n      var height = size.height;\\n\\n      if (yAlign === 'center') {\\n        y2 = ptY + height / 2;\\n\\n        if (xAlign === 'left') {\\n          x1 = ptX;\\n          x2 = x1 - caretSize;\\n          x3 = x1;\\n          y1 = y2 + caretSize;\\n          y3 = y2 - caretSize;\\n        } else {\\n          x1 = ptX + width;\\n          x2 = x1 + caretSize;\\n          x3 = x1;\\n          y1 = y2 - caretSize;\\n          y3 = y2 + caretSize;\\n        }\\n      } else {\\n        if (xAlign === 'left') {\\n          x2 = ptX + cornerRadius + caretSize;\\n          x1 = x2 - caretSize;\\n          x3 = x2 + caretSize;\\n        } else if (xAlign === 'right') {\\n          x2 = ptX + width - cornerRadius - caretSize;\\n          x1 = x2 - caretSize;\\n          x3 = x2 + caretSize;\\n        } else {\\n          x2 = vm.caretX;\\n          x1 = x2 - caretSize;\\n          x3 = x2 + caretSize;\\n        }\\n\\n        if (yAlign === 'top') {\\n          y1 = ptY;\\n          y2 = y1 - caretSize;\\n          y3 = y1;\\n        } else {\\n          y1 = ptY + height;\\n          y2 = y1 + caretSize;\\n          y3 = y1; // invert drawing order\\n\\n          var tmp = x3;\\n          x3 = x1;\\n          x1 = tmp;\\n        }\\n      }\\n\\n      return {\\n        x1: x1,\\n        x2: x2,\\n        x3: x3,\\n        y1: y1,\\n        y2: y2,\\n        y3: y3\\n      };\\n    },\\n    drawTitle: function drawTitle(pt, vm, ctx) {\\n      var title = vm.title;\\n\\n      if (title.length) {\\n        pt.x = getAlignedX(vm, vm._titleAlign);\\n        ctx.textAlign = vm._titleAlign;\\n        ctx.textBaseline = 'top';\\n        var titleFontSize = vm.titleFontSize;\\n        var titleSpacing = vm.titleSpacing;\\n        ctx.fillStyle = vm.titleFontColor;\\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\\n        var i, len;\\n\\n        for (i = 0, len = title.length; i < len; ++i) {\\n          ctx.fillText(title[i], pt.x, pt.y);\\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\\n\\n          if (i + 1 === title.length) {\\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\\n          }\\n        }\\n      }\\n    },\\n    drawBody: function drawBody(pt, vm, ctx) {\\n      var bodyFontSize = vm.bodyFontSize;\\n      var bodySpacing = vm.bodySpacing;\\n      var bodyAlign = vm._bodyAlign;\\n      var body = vm.body;\\n      var drawColorBoxes = vm.displayColors;\\n      var labelColors = vm.labelColors;\\n      var xLinePadding = 0;\\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\\n      var textColor;\\n      ctx.textAlign = bodyAlign;\\n      ctx.textBaseline = 'top';\\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\\n\\n      var fillLineOfText = function fillLineOfText(line) {\\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\\n        pt.y += bodyFontSize + bodySpacing;\\n      }; // Before body lines\\n\\n\\n      ctx.fillStyle = vm.bodyFontColor;\\n      helpers$1.each(vm.beforeBody, fillLineOfText);\\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\\n\\n      helpers$1.each(body, function (bodyItem, i) {\\n        textColor = vm.labelTextColors[i];\\n        ctx.fillStyle = textColor;\\n        helpers$1.each(bodyItem.before, fillLineOfText);\\n        helpers$1.each(bodyItem.lines, function (line) {\\n          // Draw Legend-like boxes if needed\\n          if (drawColorBoxes) {\\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\\n            ctx.fillStyle = vm.legendColorBackground;\\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\\n\\n            ctx.lineWidth = 1;\\n            ctx.strokeStyle = labelColors[i].borderColor;\\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\\n\\n            ctx.fillStyle = labelColors[i].backgroundColor;\\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\\n            ctx.fillStyle = textColor;\\n          }\\n\\n          fillLineOfText(line);\\n        });\\n        helpers$1.each(bodyItem.after, fillLineOfText);\\n      }); // Reset back to 0 for after body\\n\\n      xLinePadding = 0; // After body lines\\n\\n      helpers$1.each(vm.afterBody, fillLineOfText);\\n      pt.y -= bodySpacing; // Remove last body spacing\\n    },\\n    drawFooter: function drawFooter(pt, vm, ctx) {\\n      var footer = vm.footer;\\n\\n      if (footer.length) {\\n        pt.x = getAlignedX(vm, vm._footerAlign);\\n        pt.y += vm.footerMarginTop;\\n        ctx.textAlign = vm._footerAlign;\\n        ctx.textBaseline = 'top';\\n        ctx.fillStyle = vm.footerFontColor;\\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\\n        helpers$1.each(footer, function (line) {\\n          ctx.fillText(line, pt.x, pt.y);\\n          pt.y += vm.footerFontSize + vm.footerSpacing;\\n        });\\n      }\\n    },\\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\\n      ctx.fillStyle = vm.backgroundColor;\\n      ctx.strokeStyle = vm.borderColor;\\n      ctx.lineWidth = vm.borderWidth;\\n      var xAlign = vm.xAlign;\\n      var yAlign = vm.yAlign;\\n      var x = pt.x;\\n      var y = pt.y;\\n      var width = tooltipSize.width;\\n      var height = tooltipSize.height;\\n      var radius = vm.cornerRadius;\\n      ctx.beginPath();\\n      ctx.moveTo(x + radius, y);\\n\\n      if (yAlign === 'top') {\\n        this.drawCaret(pt, tooltipSize);\\n      }\\n\\n      ctx.lineTo(x + width - radius, y);\\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\\n\\n      if (yAlign === 'center' && xAlign === 'right') {\\n        this.drawCaret(pt, tooltipSize);\\n      }\\n\\n      ctx.lineTo(x + width, y + height - radius);\\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\\n\\n      if (yAlign === 'bottom') {\\n        this.drawCaret(pt, tooltipSize);\\n      }\\n\\n      ctx.lineTo(x + radius, y + height);\\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\\n\\n      if (yAlign === 'center' && xAlign === 'left') {\\n        this.drawCaret(pt, tooltipSize);\\n      }\\n\\n      ctx.lineTo(x, y + radius);\\n      ctx.quadraticCurveTo(x, y, x + radius, y);\\n      ctx.closePath();\\n      ctx.fill();\\n\\n      if (vm.borderWidth > 0) {\\n        ctx.stroke();\\n      }\\n    },\\n    draw: function draw() {\\n      var ctx = this._chart.ctx;\\n      var vm = this._view;\\n\\n      if (vm.opacity === 0) {\\n        return;\\n      }\\n\\n      var tooltipSize = {\\n        width: vm.width,\\n        height: vm.height\\n      };\\n      var pt = {\\n        x: vm.x,\\n        y: vm.y\\n      }; // IE11/Edge does not like very small opacities, so snap to 0\\n\\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\\n\\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\\n\\n      if (this._options.enabled && hasTooltipContent) {\\n        ctx.save();\\n        ctx.globalAlpha = opacity; // Draw Background\\n\\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\\n\\n        pt.y += vm.yPadding; // Titles\\n\\n        this.drawTitle(pt, vm, ctx); // Body\\n\\n        this.drawBody(pt, vm, ctx); // Footer\\n\\n        this.drawFooter(pt, vm, ctx);\\n        ctx.restore();\\n      }\\n    },\\n\\n    /**\\n     * Handle an event\\n     * @private\\n     * @param {IEvent} event - The event to handle\\n     * @returns {boolean} true if the tooltip changed\\n     */\\n    handleEvent: function handleEvent(e) {\\n      var me = this;\\n      var options = me._options;\\n      var changed = false;\\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\\n\\n      if (e.type === 'mouseout') {\\n        me._active = [];\\n      } else {\\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\\n      } // Remember Last Actives\\n\\n\\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\\n\\n      if (changed) {\\n        me._lastActive = me._active;\\n\\n        if (options.enabled || options.custom) {\\n          me._eventPosition = {\\n            x: e.x,\\n            y: e.y\\n          };\\n          me.update(true);\\n          me.pivot();\\n        }\\n      }\\n\\n      return changed;\\n    }\\n  });\\n  /**\\n   * @namespace Chart.Tooltip.positioners\\n   */\\n\\n  var positioners_1 = positioners;\\n  var core_tooltip = exports$3;\\n  core_tooltip.positioners = positioners_1;\\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\\n\\n  core_defaults._set('global', {\\n    elements: {},\\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\\n    hover: {\\n      onHover: null,\\n      mode: 'nearest',\\n      intersect: true,\\n      animationDuration: 400\\n    },\\n    onClick: null,\\n    maintainAspectRatio: true,\\n    responsive: true,\\n    responsiveAnimationDuration: 0\\n  });\\n  /**\\n   * Recursively merge the given config objects representing the `scales` option\\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\\n   * returns a deep copy of the result, thus doesn't alter inputs.\\n   */\\n\\n\\n  function mergeScaleConfig()\\n  /* config objects ... */\\n  {\\n    return helpers$1.merge({}, [].slice.call(arguments), {\\n      merger: function merger(key, target, source, options) {\\n        if (key === 'xAxes' || key === 'yAxes') {\\n          var slen = source[key].length;\\n          var i, type, scale;\\n\\n          if (!target[key]) {\\n            target[key] = [];\\n          }\\n\\n          for (i = 0; i < slen; ++i) {\\n            scale = source[key][i];\\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\\n\\n            if (i >= target[key].length) {\\n              target[key].push({});\\n            }\\n\\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\\n              // new/untyped scale or type changed: let's apply the new defaults\\n              // then merge source scale to correctly overwrite the defaults.\\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\\n            } else {\\n              // scales type are the same\\n              helpers$1.merge(target[key][i], scale);\\n            }\\n          }\\n        } else {\\n          helpers$1._merger(key, target, source, options);\\n        }\\n      }\\n    });\\n  }\\n  /**\\n   * Recursively merge the given config objects as the root options by handling\\n   * default scale options for the `scales` and `scale` properties, then returns\\n   * a deep copy of the result, thus doesn't alter inputs.\\n   */\\n\\n\\n  function mergeConfig()\\n  /* config objects ... */\\n  {\\n    return helpers$1.merge({}, [].slice.call(arguments), {\\n      merger: function merger(key, target, source, options) {\\n        var tval = target[key] || {};\\n        var sval = source[key];\\n\\n        if (key === 'scales') {\\n          // scale config merging is complex. Add our own function here for that\\n          target[key] = mergeScaleConfig(tval, sval);\\n        } else if (key === 'scale') {\\n          // used in polar area & radar charts since there is only one scale\\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\\n        } else {\\n          helpers$1._merger(key, target, source, options);\\n        }\\n      }\\n    });\\n  }\\n\\n  function initConfig(config) {\\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\\n    // and so would change references to labels and datasets, preventing data updates.\\n\\n    var data = config.data = config.data || {};\\n    data.datasets = data.datasets || [];\\n    data.labels = data.labels || [];\\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\\n    return config;\\n  }\\n\\n  function updateConfig(chart) {\\n    var newOptions = chart.options;\\n    helpers$1.each(chart.scales, function (scale) {\\n      core_layouts.removeBox(chart, scale);\\n    });\\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\\n    chart.options = chart.config.options = newOptions;\\n    chart.ensureScalesHaveIDs();\\n    chart.buildOrUpdateScales(); // Tooltip\\n\\n    chart.tooltip._options = newOptions.tooltips;\\n    chart.tooltip.initialize();\\n  }\\n\\n  function positionIsHorizontal(position) {\\n    return position === 'top' || position === 'bottom';\\n  }\\n\\n  var Chart = function Chart(item, config) {\\n    this.construct(item, config);\\n    return this;\\n  };\\n\\n  helpers$1.extend(Chart.prototype,\\n  /** @lends Chart */\\n  {\\n    /**\\n     * @private\\n     */\\n    construct: function construct(item, config) {\\n      var me = this;\\n      config = initConfig(config);\\n      var context = platform.acquireContext(item, config);\\n      var canvas = context && context.canvas;\\n      var height = canvas && canvas.height;\\n      var width = canvas && canvas.width;\\n      me.id = helpers$1.uid();\\n      me.ctx = context;\\n      me.canvas = canvas;\\n      me.config = config;\\n      me.width = width;\\n      me.height = height;\\n      me.aspectRatio = height ? width / height : null;\\n      me.options = config.options;\\n      me._bufferedRender = false;\\n      /**\\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\\n       * the \\\"instance\\\" still need to be defined since it might be called from plugins.\\n       * @prop Chart#chart\\n       * @deprecated since version 2.6.0\\n       * @todo remove at version 3\\n       * @private\\n       */\\n\\n      me.chart = me;\\n      me.controller = me; // chart.chart.controller #inception\\n      // Add the chart instance to the global namespace\\n\\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\\n\\n      Object.defineProperty(me, 'data', {\\n        get: function get() {\\n          return me.config.data;\\n        },\\n        set: function set(value) {\\n          me.config.data = value;\\n        }\\n      });\\n\\n      if (!context || !canvas) {\\n        // The given item is not a compatible context2d element, let's return before finalizing\\n        // the chart initialization but after setting basic chart / controller properties that\\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\\n        // https://github.com/chartjs/Chart.js/issues/2807\\n        console.error(\\\"Failed to create chart: can't acquire context from the given item\\\");\\n        return;\\n      }\\n\\n      me.initialize();\\n      me.update();\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    initialize: function initialize() {\\n      var me = this; // Before init plugin notification\\n\\n      core_plugins.notify(me, 'beforeInit');\\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\\n      me.bindEvents();\\n\\n      if (me.options.responsive) {\\n        // Initial resize before chart draws (must be silent to preserve initial animations).\\n        me.resize(true);\\n      } // Make sure scales have IDs and are built before we build any controllers.\\n\\n\\n      me.ensureScalesHaveIDs();\\n      me.buildOrUpdateScales();\\n      me.initToolTip(); // After init plugin notification\\n\\n      core_plugins.notify(me, 'afterInit');\\n      return me;\\n    },\\n    clear: function clear() {\\n      helpers$1.canvas.clear(this);\\n      return this;\\n    },\\n    stop: function stop() {\\n      // Stops any current animation loop occurring\\n      core_animations.cancelAnimation(this);\\n      return this;\\n    },\\n    resize: function resize(silent) {\\n      var me = this;\\n      var options = me.options;\\n      var canvas = me.canvas;\\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\\n      // the canvas display style uses the same integer values to avoid blurring effect.\\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\\n\\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\\n\\n      if (me.width === newWidth && me.height === newHeight) {\\n        return;\\n      }\\n\\n      canvas.width = me.width = newWidth;\\n      canvas.height = me.height = newHeight;\\n      canvas.style.width = newWidth + 'px';\\n      canvas.style.height = newHeight + 'px';\\n      helpers$1.retinaScale(me, options.devicePixelRatio);\\n\\n      if (!silent) {\\n        // Notify any plugins about the resize\\n        var newSize = {\\n          width: newWidth,\\n          height: newHeight\\n        };\\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\\n\\n        if (options.onResize) {\\n          options.onResize(me, newSize);\\n        }\\n\\n        me.stop();\\n        me.update({\\n          duration: options.responsiveAnimationDuration\\n        });\\n      }\\n    },\\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\\n      var options = this.options;\\n      var scalesOptions = options.scales || {};\\n      var scaleOptions = options.scale;\\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\\n      });\\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\\n      });\\n\\n      if (scaleOptions) {\\n        scaleOptions.id = scaleOptions.id || 'scale';\\n      }\\n    },\\n\\n    /**\\n     * Builds a map of scale ID to scale object for future lookup.\\n     */\\n    buildOrUpdateScales: function buildOrUpdateScales() {\\n      var me = this;\\n      var options = me.options;\\n      var scales = me.scales || {};\\n      var items = [];\\n      var updated = Object.keys(scales).reduce(function (obj, id) {\\n        obj[id] = false;\\n        return obj;\\n      }, {});\\n\\n      if (options.scales) {\\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\\n          return {\\n            options: xAxisOptions,\\n            dtype: 'category',\\n            dposition: 'bottom'\\n          };\\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\\n          return {\\n            options: yAxisOptions,\\n            dtype: 'linear',\\n            dposition: 'left'\\n          };\\n        }));\\n      }\\n\\n      if (options.scale) {\\n        items.push({\\n          options: options.scale,\\n          dtype: 'radialLinear',\\n          isDefault: true,\\n          dposition: 'chartArea'\\n        });\\n      }\\n\\n      helpers$1.each(items, function (item) {\\n        var scaleOptions = item.options;\\n        var id = scaleOptions.id;\\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\\n\\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\\n          scaleOptions.position = item.dposition;\\n        }\\n\\n        updated[id] = true;\\n        var scale = null;\\n\\n        if (id in scales && scales[id].type === scaleType) {\\n          scale = scales[id];\\n          scale.options = scaleOptions;\\n          scale.ctx = me.ctx;\\n          scale.chart = me;\\n        } else {\\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\\n\\n          if (!scaleClass) {\\n            return;\\n          }\\n\\n          scale = new scaleClass({\\n            id: id,\\n            type: scaleType,\\n            options: scaleOptions,\\n            ctx: me.ctx,\\n            chart: me\\n          });\\n          scales[scale.id] = scale;\\n        }\\n\\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\\n        // and consider it as a regular scale part of the \\\"scales\\\"\\\" map only! This would\\n        // make the logic easier and remove some useless? custom code.\\n\\n        if (item.isDefault) {\\n          me.scale = scale;\\n        }\\n      }); // clear up discarded scales\\n\\n      helpers$1.each(updated, function (hasUpdated, id) {\\n        if (!hasUpdated) {\\n          delete scales[id];\\n        }\\n      });\\n      me.scales = scales;\\n      core_scaleService.addScalesToLayout(this);\\n    },\\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\\n      var me = this;\\n      var newControllers = [];\\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\\n        var meta = me.getDatasetMeta(datasetIndex);\\n        var type = dataset.type || me.config.type;\\n\\n        if (meta.type && meta.type !== type) {\\n          me.destroyDatasetMeta(datasetIndex);\\n          meta = me.getDatasetMeta(datasetIndex);\\n        }\\n\\n        meta.type = type;\\n\\n        if (meta.controller) {\\n          meta.controller.updateIndex(datasetIndex);\\n          meta.controller.linkScales();\\n        } else {\\n          var ControllerClass = controllers[meta.type];\\n\\n          if (ControllerClass === undefined) {\\n            throw new Error('\\\"' + meta.type + '\\\" is not a chart type.');\\n          }\\n\\n          meta.controller = new ControllerClass(me, datasetIndex);\\n          newControllers.push(meta.controller);\\n        }\\n      }, me);\\n      return newControllers;\\n    },\\n\\n    /**\\n     * Reset the elements of all datasets\\n     * @private\\n     */\\n    resetElements: function resetElements() {\\n      var me = this;\\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\\n        me.getDatasetMeta(datasetIndex).controller.reset();\\n      }, me);\\n    },\\n\\n    /**\\n    * Resets the chart back to it's state before the initial animation\\n    */\\n    reset: function reset() {\\n      this.resetElements();\\n      this.tooltip.initialize();\\n    },\\n    update: function update(config) {\\n      var me = this;\\n\\n      if (!config || typeof config !== 'object') {\\n        // backwards compatibility\\n        config = {\\n          duration: config,\\n          lazy: arguments[1]\\n        };\\n      }\\n\\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\\n\\n      core_plugins._invalidate(me);\\n\\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\\n        return;\\n      } // In case the entire data object changed\\n\\n\\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\\n\\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\\n\\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\\n      }, me);\\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\\n\\n      if (me.options.animation && me.options.animation.duration) {\\n        helpers$1.each(newControllers, function (controller) {\\n          controller.reset();\\n        });\\n      }\\n\\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\\n      // after update.\\n\\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\\n      // When we reset the tooltip, we need to clear it\\n\\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\\n\\n      core_plugins.notify(me, 'afterUpdate');\\n\\n      if (me._bufferedRender) {\\n        me._bufferedRequest = {\\n          duration: config.duration,\\n          easing: config.easing,\\n          lazy: config.lazy\\n        };\\n      } else {\\n        me.render(config);\\n      }\\n    },\\n\\n    /**\\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\\n     * hook, in which case, plugins will not be called on `afterLayout`.\\n     * @private\\n     */\\n    updateLayout: function updateLayout() {\\n      var me = this;\\n\\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\\n        return;\\n      }\\n\\n      core_layouts.update(this, this.width, this.height);\\n      /**\\n       * Provided for backward compatibility, use `afterLayout` instead.\\n       * @method IPlugin#afterScaleUpdate\\n       * @deprecated since version 2.5.0\\n       * @todo remove at version 3\\n       * @private\\n       */\\n\\n      core_plugins.notify(me, 'afterScaleUpdate');\\n      core_plugins.notify(me, 'afterLayout');\\n    },\\n\\n    /**\\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\\n     * @private\\n     */\\n    updateDatasets: function updateDatasets() {\\n      var me = this;\\n\\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\\n        return;\\n      }\\n\\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\\n        me.updateDataset(i);\\n      }\\n\\n      core_plugins.notify(me, 'afterDatasetsUpdate');\\n    },\\n\\n    /**\\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\\n     * @private\\n     */\\n    updateDataset: function updateDataset(index) {\\n      var me = this;\\n      var meta = me.getDatasetMeta(index);\\n      var args = {\\n        meta: meta,\\n        index: index\\n      };\\n\\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\\n        return;\\n      }\\n\\n      meta.controller.update();\\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\\n    },\\n    render: function render(config) {\\n      var me = this;\\n\\n      if (!config || typeof config !== 'object') {\\n        // backwards compatibility\\n        config = {\\n          duration: config,\\n          lazy: arguments[1]\\n        };\\n      }\\n\\n      var animationOptions = me.options.animation;\\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\\n      var lazy = config.lazy;\\n\\n      if (core_plugins.notify(me, 'beforeRender') === false) {\\n        return;\\n      }\\n\\n      var onComplete = function onComplete(animation) {\\n        core_plugins.notify(me, 'afterRender');\\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\\n      };\\n\\n      if (animationOptions && duration) {\\n        var animation = new core_animation({\\n          numSteps: duration / 16.66,\\n          // 60 fps\\n          easing: config.easing || animationOptions.easing,\\n          render: function render(chart, animationObject) {\\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\\n            var currentStep = animationObject.currentStep;\\n            var stepDecimal = currentStep / animationObject.numSteps;\\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\\n          },\\n          onAnimationProgress: animationOptions.onProgress,\\n          onAnimationComplete: onComplete\\n        });\\n        core_animations.addAnimation(me, animation, duration, lazy);\\n      } else {\\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\\n\\n        onComplete(new core_animation({\\n          numSteps: 0,\\n          chart: me\\n        }));\\n      }\\n\\n      return me;\\n    },\\n    draw: function draw(easingValue) {\\n      var me = this;\\n      me.clear();\\n\\n      if (helpers$1.isNullOrUndef(easingValue)) {\\n        easingValue = 1;\\n      }\\n\\n      me.transition(easingValue);\\n\\n      if (me.width <= 0 || me.height <= 0) {\\n        return;\\n      }\\n\\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\\n        return;\\n      } // Draw all the scales\\n\\n\\n      helpers$1.each(me.boxes, function (box) {\\n        box.draw(me.chartArea);\\n      }, me);\\n      me.drawDatasets(easingValue);\\n\\n      me._drawTooltip(easingValue);\\n\\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    transition: function transition(easingValue) {\\n      var me = this;\\n\\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\\n        if (me.isDatasetVisible(i)) {\\n          me.getDatasetMeta(i).controller.transition(easingValue);\\n        }\\n      }\\n\\n      me.tooltip.transition(easingValue);\\n    },\\n\\n    /**\\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\\n     * @private\\n     */\\n    drawDatasets: function drawDatasets(easingValue) {\\n      var me = this;\\n\\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\\n        return;\\n      } // Draw datasets reversed to support proper line stacking\\n\\n\\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\\n        if (me.isDatasetVisible(i)) {\\n          me.drawDataset(i, easingValue);\\n        }\\n      }\\n\\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\\n    },\\n\\n    /**\\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\\n     * @private\\n     */\\n    drawDataset: function drawDataset(index, easingValue) {\\n      var me = this;\\n      var meta = me.getDatasetMeta(index);\\n      var args = {\\n        meta: meta,\\n        index: index,\\n        easingValue: easingValue\\n      };\\n\\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\\n        return;\\n      }\\n\\n      meta.controller.draw(easingValue);\\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\\n    },\\n\\n    /**\\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\\n     * @private\\n     */\\n    _drawTooltip: function _drawTooltip(easingValue) {\\n      var me = this;\\n      var tooltip = me.tooltip;\\n      var args = {\\n        tooltip: tooltip,\\n        easingValue: easingValue\\n      };\\n\\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\\n        return;\\n      }\\n\\n      tooltip.draw();\\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\\n    },\\n\\n    /**\\n     * Get the single element that was clicked on\\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\\n     */\\n    getElementAtEvent: function getElementAtEvent(e) {\\n      return core_interaction.modes.single(this, e);\\n    },\\n    getElementsAtEvent: function getElementsAtEvent(e) {\\n      return core_interaction.modes.label(this, e, {\\n        intersect: true\\n      });\\n    },\\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\\n      return core_interaction.modes['x-axis'](this, e, {\\n        intersect: true\\n      });\\n    },\\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\\n      var method = core_interaction.modes[mode];\\n\\n      if (typeof method === 'function') {\\n        return method(this, e, options);\\n      }\\n\\n      return [];\\n    },\\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\\n      return core_interaction.modes.dataset(this, e, {\\n        intersect: true\\n      });\\n    },\\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\\n      var me = this;\\n      var dataset = me.data.datasets[datasetIndex];\\n\\n      if (!dataset._meta) {\\n        dataset._meta = {};\\n      }\\n\\n      var meta = dataset._meta[me.id];\\n\\n      if (!meta) {\\n        meta = dataset._meta[me.id] = {\\n          type: null,\\n          data: [],\\n          dataset: null,\\n          controller: null,\\n          hidden: null,\\n          // See isDatasetVisible() comment\\n          xAxisID: null,\\n          yAxisID: null\\n        };\\n      }\\n\\n      return meta;\\n    },\\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\\n      var count = 0;\\n\\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\\n        if (this.isDatasetVisible(i)) {\\n          count++;\\n        }\\n      }\\n\\n      return count;\\n    },\\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\\n\\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\\n    },\\n    generateLegend: function generateLegend() {\\n      return this.options.legendCallback(this);\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\\n      var id = this.id;\\n      var dataset = this.data.datasets[datasetIndex];\\n      var meta = dataset._meta && dataset._meta[id];\\n\\n      if (meta) {\\n        meta.controller.destroy();\\n        delete dataset._meta[id];\\n      }\\n    },\\n    destroy: function destroy() {\\n      var me = this;\\n      var canvas = me.canvas;\\n      var i, ilen;\\n      me.stop(); // dataset controllers need to cleanup associated data\\n\\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\\n        me.destroyDatasetMeta(i);\\n      }\\n\\n      if (canvas) {\\n        me.unbindEvents();\\n        helpers$1.canvas.clear(me);\\n        platform.releaseContext(me.ctx);\\n        me.canvas = null;\\n        me.ctx = null;\\n      }\\n\\n      core_plugins.notify(me, 'destroy');\\n      delete Chart.instances[me.id];\\n    },\\n    toBase64Image: function toBase64Image() {\\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\\n    },\\n    initToolTip: function initToolTip() {\\n      var me = this;\\n      me.tooltip = new core_tooltip({\\n        _chart: me,\\n        _chartInstance: me,\\n        // deprecated, backward compatibility\\n        _data: me.data,\\n        _options: me.options.tooltips\\n      }, me);\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    bindEvents: function bindEvents() {\\n      var me = this;\\n      var listeners = me._listeners = {};\\n\\n      var listener = function listener() {\\n        me.eventHandler.apply(me, arguments);\\n      };\\n\\n      helpers$1.each(me.options.events, function (type) {\\n        platform.addEventListener(me, type, listener);\\n        listeners[type] = listener;\\n      }); // Elements used to detect size change should not be injected for non responsive charts.\\n      // See https://github.com/chartjs/Chart.js/issues/2210\\n\\n      if (me.options.responsive) {\\n        listener = function listener() {\\n          me.resize();\\n        };\\n\\n        platform.addEventListener(me, 'resize', listener);\\n        listeners.resize = listener;\\n      }\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    unbindEvents: function unbindEvents() {\\n      var me = this;\\n      var listeners = me._listeners;\\n\\n      if (!listeners) {\\n        return;\\n      }\\n\\n      delete me._listeners;\\n      helpers$1.each(listeners, function (listener, type) {\\n        platform.removeEventListener(me, type, listener);\\n      });\\n    },\\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\\n      var element, i, ilen;\\n\\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\\n        element = elements[i];\\n\\n        if (element) {\\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\\n        }\\n      }\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    eventHandler: function eventHandler(e) {\\n      var me = this;\\n      var tooltip = me.tooltip;\\n\\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\\n        return;\\n      } // Buffer any update calls so that renders do not occur\\n\\n\\n      me._bufferedRender = true;\\n      me._bufferedRequest = null;\\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\\n      // the tooltip should be the source of change\\n      // Animation check workaround:\\n      // tooltip._start will be null when tooltip isn't animating\\n\\n      if (tooltip) {\\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\\n      }\\n\\n      core_plugins.notify(me, 'afterEvent', [e]);\\n      var bufferedRequest = me._bufferedRequest;\\n\\n      if (bufferedRequest) {\\n        // If we have an update that was triggered, we need to do a normal render\\n        me.render(bufferedRequest);\\n      } else if (changed && !me.animating) {\\n        // If entering, leaving, or changing elements, animate the change via pivot\\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\\n        // recomputed generating flicker & using more memory than necessary.\\n\\n        me.render({\\n          duration: me.options.hover.animationDuration,\\n          lazy: true\\n        });\\n      }\\n\\n      me._bufferedRender = false;\\n      me._bufferedRequest = null;\\n      return me;\\n    },\\n\\n    /**\\n     * Handle an event\\n     * @private\\n     * @param {IEvent} event the event to handle\\n     * @return {boolean} true if the chart needs to re-render\\n     */\\n    handleEvent: function handleEvent(e) {\\n      var me = this;\\n      var options = me.options || {};\\n      var hoverOptions = options.hover;\\n      var changed = false;\\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\\n\\n      if (e.type === 'mouseout') {\\n        me.active = [];\\n      } else {\\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\\n      } // Invoke onHover hook\\n      // Need to call with native event here to not break backwards compatibility\\n\\n\\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\\n\\n      if (e.type === 'mouseup' || e.type === 'click') {\\n        if (options.onClick) {\\n          // Use e.native here for backwards compatibility\\n          options.onClick.call(me, e.native, me.active);\\n        }\\n      } // Remove styling for last active (even if it may still be active)\\n\\n\\n      if (me.lastActive.length) {\\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\\n      } // Built in hover styling\\n\\n\\n      if (me.active.length && hoverOptions.mode) {\\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\\n      }\\n\\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\\n\\n      me.lastActive = me.active;\\n      return changed;\\n    }\\n  });\\n  /**\\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\\n   * for backward compatibility. Though, it can still be useful for plugins that\\n   * would need to work on multiple charts?!\\n   */\\n\\n  Chart.instances = {};\\n  var core_controller = Chart; // DEPRECATIONS\\n\\n  /**\\n   * Provided for backward compatibility, use Chart instead.\\n   * @class Chart.Controller\\n   * @deprecated since version 2.6\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  Chart.Controller = Chart;\\n  /**\\n   * Provided for backward compatibility, not available anymore.\\n   * @namespace Chart\\n   * @deprecated since version 2.8\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  Chart.types = {};\\n  /**\\n   * Provided for backward compatibility, not available anymore.\\n   * @namespace Chart.helpers.configMerge\\n   * @deprecated since version 2.8.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  helpers$1.configMerge = mergeConfig;\\n  /**\\n   * Provided for backward compatibility, not available anymore.\\n   * @namespace Chart.helpers.scaleMerge\\n   * @deprecated since version 2.8.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  helpers$1.scaleMerge = mergeScaleConfig;\\n\\n  var core_helpers = function core_helpers() {\\n    // -- Basic js utility methods\\n    helpers$1.where = function (collection, filterCallback) {\\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\\n        return collection.filter(filterCallback);\\n      }\\n\\n      var filtered = [];\\n      helpers$1.each(collection, function (item) {\\n        if (filterCallback(item)) {\\n          filtered.push(item);\\n        }\\n      });\\n      return filtered;\\n    };\\n\\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\\n      return array.findIndex(callback, scope);\\n    } : function (array, callback, scope) {\\n      scope = scope === undefined ? array : scope;\\n\\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\\n        if (callback.call(scope, array[i], i, array)) {\\n          return i;\\n        }\\n      }\\n\\n      return -1;\\n    };\\n\\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\\n      // Default to start of the array\\n      if (helpers$1.isNullOrUndef(startIndex)) {\\n        startIndex = -1;\\n      }\\n\\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\\n        var currentItem = arrayToSearch[i];\\n\\n        if (filterCallback(currentItem)) {\\n          return currentItem;\\n        }\\n      }\\n    };\\n\\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\\n      // Default to end of the array\\n      if (helpers$1.isNullOrUndef(startIndex)) {\\n        startIndex = arrayToSearch.length;\\n      }\\n\\n      for (var i = startIndex - 1; i >= 0; i--) {\\n        var currentItem = arrayToSearch[i];\\n\\n        if (filterCallback(currentItem)) {\\n          return currentItem;\\n        }\\n      }\\n    }; // -- Math methods\\n\\n\\n    helpers$1.isNumber = function (n) {\\n      return !isNaN(parseFloat(n)) && isFinite(n);\\n    };\\n\\n    helpers$1.almostEquals = function (x, y, epsilon) {\\n      return Math.abs(x - y) < epsilon;\\n    };\\n\\n    helpers$1.almostWhole = function (x, epsilon) {\\n      var rounded = Math.round(x);\\n      return rounded - epsilon < x && rounded + epsilon > x;\\n    };\\n\\n    helpers$1.max = function (array) {\\n      return array.reduce(function (max, value) {\\n        if (!isNaN(value)) {\\n          return Math.max(max, value);\\n        }\\n\\n        return max;\\n      }, Number.NEGATIVE_INFINITY);\\n    };\\n\\n    helpers$1.min = function (array) {\\n      return array.reduce(function (min, value) {\\n        if (!isNaN(value)) {\\n          return Math.min(min, value);\\n        }\\n\\n        return min;\\n      }, Number.POSITIVE_INFINITY);\\n    };\\n\\n    helpers$1.sign = Math.sign ? function (x) {\\n      return Math.sign(x);\\n    } : function (x) {\\n      x = +x; // convert to a number\\n\\n      if (x === 0 || isNaN(x)) {\\n        return x;\\n      }\\n\\n      return x > 0 ? 1 : -1;\\n    };\\n    helpers$1.log10 = Math.log10 ? function (x) {\\n      return Math.log10(x);\\n    } : function (x) {\\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\\n      // Check for whole powers of 10,\\n      // which due to floating point rounding error should be corrected.\\n\\n      var powerOf10 = Math.round(exponent);\\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\\n      return isPowerOf10 ? powerOf10 : exponent;\\n    };\\n\\n    helpers$1.toRadians = function (degrees) {\\n      return degrees * (Math.PI / 180);\\n    };\\n\\n    helpers$1.toDegrees = function (radians) {\\n      return radians * (180 / Math.PI);\\n    };\\n    /**\\n     * Returns the number of decimal places\\n     * i.e. the number of digits after the decimal point, of the value of this Number.\\n     * @param {number} x - A number.\\n     * @returns {number} The number of decimal places.\\n     * @private\\n     */\\n\\n\\n    helpers$1._decimalPlaces = function (x) {\\n      if (!helpers$1.isFinite(x)) {\\n        return;\\n      }\\n\\n      var e = 1;\\n      var p = 0;\\n\\n      while (Math.round(x * e) / e !== x) {\\n        e *= 10;\\n        p++;\\n      }\\n\\n      return p;\\n    }; // Gets the angle from vertical upright to the point about a centre.\\n\\n\\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\\n\\n      if (angle < -0.5 * Math.PI) {\\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\\n      }\\n\\n      return {\\n        angle: angle,\\n        distance: radialDistanceFromCenter\\n      };\\n    };\\n\\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\\n    };\\n    /**\\n     * Provided for backward compatibility, not available anymore\\n     * @function Chart.helpers.aliasPixel\\n     * @deprecated since version 2.8.0\\n     * @todo remove at version 3\\n     */\\n\\n\\n    helpers$1.aliasPixel = function (pixelWidth) {\\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\\n    };\\n    /**\\n     * Returns the aligned pixel value to avoid anti-aliasing blur\\n     * @param {Chart} chart - The chart instance.\\n     * @param {number} pixel - A pixel value.\\n     * @param {number} width - The width of the element.\\n     * @returns {number} The aligned pixel value.\\n     * @private\\n     */\\n\\n\\n    helpers$1._alignPixel = function (chart, pixel, width) {\\n      var devicePixelRatio = chart.currentDevicePixelRatio;\\n      var halfWidth = width / 2;\\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\\n    };\\n\\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\\n      // This function must also respect \\\"skipped\\\" points\\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\\n      var current = middlePoint;\\n      var next = afterPoint.skip ? middlePoint : afterPoint;\\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\\n      var s01 = d01 / (d01 + d12);\\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\\n\\n      s01 = isNaN(s01) ? 0 : s01;\\n      s12 = isNaN(s12) ? 0 : s12;\\n      var fa = t * s01; // scaling factor for triangle Ta\\n\\n      var fb = t * s12;\\n      return {\\n        previous: {\\n          x: current.x - fa * (next.x - previous.x),\\n          y: current.y - fa * (next.y - previous.y)\\n        },\\n        next: {\\n          x: current.x + fb * (next.x - previous.x),\\n          y: current.y + fb * (next.y - previous.y)\\n        }\\n      };\\n    };\\n\\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\\n\\n    helpers$1.splineCurveMonotone = function (points) {\\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\\n      // between the dataset discrete points due to the interpolation.\\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\\n      var pointsWithTangents = (points || []).map(function (point) {\\n        return {\\n          model: point._model,\\n          deltaK: 0,\\n          mK: 0\\n        };\\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\\n\\n      var pointsLen = pointsWithTangents.length;\\n      var i, pointBefore, pointCurrent, pointAfter;\\n\\n      for (i = 0; i < pointsLen; ++i) {\\n        pointCurrent = pointsWithTangents[i];\\n\\n        if (pointCurrent.model.skip) {\\n          continue;\\n        }\\n\\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\\n\\n        if (pointAfter && !pointAfter.model.skip) {\\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\\n\\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\\n        }\\n\\n        if (!pointBefore || pointBefore.model.skip) {\\n          pointCurrent.mK = pointCurrent.deltaK;\\n        } else if (!pointAfter || pointAfter.model.skip) {\\n          pointCurrent.mK = pointBefore.deltaK;\\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\\n          pointCurrent.mK = 0;\\n        } else {\\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\\n        }\\n      } // Adjust tangents to ensure monotonic properties\\n\\n\\n      var alphaK, betaK, tauK, squaredMagnitude;\\n\\n      for (i = 0; i < pointsLen - 1; ++i) {\\n        pointCurrent = pointsWithTangents[i];\\n        pointAfter = pointsWithTangents[i + 1];\\n\\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\\n          continue;\\n        }\\n\\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\\n          pointCurrent.mK = pointAfter.mK = 0;\\n          continue;\\n        }\\n\\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\\n        betaK = pointAfter.mK / pointCurrent.deltaK;\\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\\n\\n        if (squaredMagnitude <= 9) {\\n          continue;\\n        }\\n\\n        tauK = 3 / Math.sqrt(squaredMagnitude);\\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\\n      } // Compute control points\\n\\n\\n      var deltaX;\\n\\n      for (i = 0; i < pointsLen; ++i) {\\n        pointCurrent = pointsWithTangents[i];\\n\\n        if (pointCurrent.model.skip) {\\n          continue;\\n        }\\n\\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\\n\\n        if (pointBefore && !pointBefore.model.skip) {\\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\\n        }\\n\\n        if (pointAfter && !pointAfter.model.skip) {\\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\\n        }\\n      }\\n    };\\n\\n    helpers$1.nextItem = function (collection, index, loop) {\\n      if (loop) {\\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\\n      }\\n\\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\\n    };\\n\\n    helpers$1.previousItem = function (collection, index, loop) {\\n      if (loop) {\\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\\n      }\\n\\n      return index <= 0 ? collection[0] : collection[index - 1];\\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\\n\\n\\n    helpers$1.niceNum = function (range, round) {\\n      var exponent = Math.floor(helpers$1.log10(range));\\n      var fraction = range / Math.pow(10, exponent);\\n      var niceFraction;\\n\\n      if (round) {\\n        if (fraction < 1.5) {\\n          niceFraction = 1;\\n        } else if (fraction < 3) {\\n          niceFraction = 2;\\n        } else if (fraction < 7) {\\n          niceFraction = 5;\\n        } else {\\n          niceFraction = 10;\\n        }\\n      } else if (fraction <= 1.0) {\\n        niceFraction = 1;\\n      } else if (fraction <= 2) {\\n        niceFraction = 2;\\n      } else if (fraction <= 5) {\\n        niceFraction = 5;\\n      } else {\\n        niceFraction = 10;\\n      }\\n\\n      return niceFraction * Math.pow(10, exponent);\\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\\n\\n\\n    helpers$1.requestAnimFrame = function () {\\n      if (typeof window === 'undefined') {\\n        return function (callback) {\\n          callback();\\n        };\\n      }\\n\\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\\n        return window.setTimeout(callback, 1000 / 60);\\n      };\\n    }(); // -- DOM methods\\n\\n\\n    helpers$1.getRelativePosition = function (evt, chart) {\\n      var mouseX, mouseY;\\n      var e = evt.originalEvent || evt;\\n      var canvas = evt.target || evt.srcElement;\\n      var boundingRect = canvas.getBoundingClientRect();\\n      var touches = e.touches;\\n\\n      if (touches && touches.length > 0) {\\n        mouseX = touches[0].clientX;\\n        mouseY = touches[0].clientY;\\n      } else {\\n        mouseX = e.clientX;\\n        mouseY = e.clientY;\\n      } // Scale mouse coordinates into canvas coordinates\\n      // by following the pattern laid out by 'jerryj' in the comments of\\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\\n\\n\\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\\n\\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\\n      return {\\n        x: mouseX,\\n        y: mouseY\\n      };\\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\\n\\n\\n    function parseMaxStyle(styleValue, node, parentProperty) {\\n      var valueInPixels;\\n\\n      if (typeof styleValue === 'string') {\\n        valueInPixels = parseInt(styleValue, 10);\\n\\n        if (styleValue.indexOf('%') !== -1) {\\n          // percentage * size in dimension\\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\\n        }\\n      } else {\\n        valueInPixels = styleValue;\\n      }\\n\\n      return valueInPixels;\\n    }\\n    /**\\n     * Returns if the given value contains an effective constraint.\\n     * @private\\n     */\\n\\n\\n    function isConstrainedValue(value) {\\n      return value !== undefined && value !== null && value !== 'none';\\n    }\\n    /**\\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\\n     * @param {HTMLElement} domNode - the node to check the constraint on\\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\\n     */\\n\\n\\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\\n      var view = document.defaultView;\\n\\n      var parentNode = helpers$1._getParentNode(domNode);\\n\\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\\n      var hasCNode = isConstrainedValue(constrainedNode);\\n      var hasCContainer = isConstrainedValue(constrainedContainer);\\n      var infinity = Number.POSITIVE_INFINITY;\\n\\n      if (hasCNode || hasCContainer) {\\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\\n      }\\n\\n      return 'none';\\n    } // returns Number or undefined if no constraint\\n\\n\\n    helpers$1.getConstraintWidth = function (domNode) {\\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\\n    }; // returns Number or undefined if no constraint\\n\\n\\n    helpers$1.getConstraintHeight = function (domNode) {\\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\\n    };\\n    /**\\n     * @private\\n    \\t */\\n\\n\\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\\n      padding = helpers$1.getStyle(container, padding);\\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\\n    };\\n    /**\\n     * @private\\n     */\\n\\n\\n    helpers$1._getParentNode = function (domNode) {\\n      var parent = domNode.parentNode;\\n\\n      if (parent && parent.toString() === '[object ShadowRoot]') {\\n        parent = parent.host;\\n      }\\n\\n      return parent;\\n    };\\n\\n    helpers$1.getMaximumWidth = function (domNode) {\\n      var container = helpers$1._getParentNode(domNode);\\n\\n      if (!container) {\\n        return domNode.clientWidth;\\n      }\\n\\n      var clientWidth = container.clientWidth;\\n\\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\\n\\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\\n\\n      var w = clientWidth - paddingLeft - paddingRight;\\n      var cw = helpers$1.getConstraintWidth(domNode);\\n      return isNaN(cw) ? w : Math.min(w, cw);\\n    };\\n\\n    helpers$1.getMaximumHeight = function (domNode) {\\n      var container = helpers$1._getParentNode(domNode);\\n\\n      if (!container) {\\n        return domNode.clientHeight;\\n      }\\n\\n      var clientHeight = container.clientHeight;\\n\\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\\n\\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\\n\\n      var h = clientHeight - paddingTop - paddingBottom;\\n      var ch = helpers$1.getConstraintHeight(domNode);\\n      return isNaN(ch) ? h : Math.min(h, ch);\\n    };\\n\\n    helpers$1.getStyle = function (el, property) {\\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\\n    };\\n\\n    helpers$1.retinaScale = function (chart, forceRatio) {\\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\\n\\n      if (pixelRatio === 1) {\\n        return;\\n      }\\n\\n      var canvas = chart.canvas;\\n      var height = chart.height;\\n      var width = chart.width;\\n      canvas.height = height * pixelRatio;\\n      canvas.width = width * pixelRatio;\\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\\n      // making the chart visually bigger, so let's enforce it to the \\\"correct\\\" values.\\n      // See https://github.com/chartjs/Chart.js/issues/3575\\n\\n      if (!canvas.style.height && !canvas.style.width) {\\n        canvas.style.height = height + 'px';\\n        canvas.style.width = width + 'px';\\n      }\\n    }; // -- Canvas methods\\n\\n\\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\\n    };\\n\\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\\n      cache = cache || {};\\n      var data = cache.data = cache.data || {};\\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\\n\\n      if (cache.font !== font) {\\n        data = cache.data = {};\\n        gc = cache.garbageCollect = [];\\n        cache.font = font;\\n      }\\n\\n      ctx.font = font;\\n      var longest = 0;\\n      helpers$1.each(arrayOfThings, function (thing) {\\n        // Undefined strings and arrays should not be measured\\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\\n        } else if (helpers$1.isArray(thing)) {\\n          // if it is an array lets measure each element\\n          // to do maybe simplify this function a bit so we can do this more recursively?\\n          helpers$1.each(thing, function (nestedThing) {\\n            // Undefined strings and arrays should not be measured\\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\\n            }\\n          });\\n        }\\n      });\\n      var gcLen = gc.length / 2;\\n\\n      if (gcLen > arrayOfThings.length) {\\n        for (var i = 0; i < gcLen; i++) {\\n          delete data[gc[i]];\\n        }\\n\\n        gc.splice(0, gcLen);\\n      }\\n\\n      return longest;\\n    };\\n\\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\\n      var textWidth = data[string];\\n\\n      if (!textWidth) {\\n        textWidth = data[string] = ctx.measureText(string).width;\\n        gc.push(string);\\n      }\\n\\n      if (textWidth > longest) {\\n        longest = textWidth;\\n      }\\n\\n      return longest;\\n    };\\n\\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\\n      var numberOfLines = 1;\\n      helpers$1.each(arrayOfThings, function (thing) {\\n        if (helpers$1.isArray(thing)) {\\n          if (thing.length > numberOfLines) {\\n            numberOfLines = thing.length;\\n          }\\n        }\\n      });\\n      return numberOfLines;\\n    };\\n\\n    helpers$1.color = !chartjsColor ? function (value) {\\n      console.error('Color.js not found!');\\n      return value;\\n    } : function (value) {\\n      /* global CanvasGradient */\\n      if (value instanceof CanvasGradient) {\\n        value = core_defaults.global.defaultColor;\\n      }\\n\\n      return chartjsColor(value);\\n    };\\n\\n    helpers$1.getHoverColor = function (colorValue) {\\n      /* global CanvasPattern */\\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\\n    };\\n  };\\n\\n  function _abstract() {\\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\\n  }\\n  /**\\n   * Date adapter (current used by the time scale)\\n   * @namespace Chart._adapters._date\\n   * @memberof Chart._adapters\\n   * @private\\n   */\\n\\n  /**\\n   * Currently supported unit string values.\\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\\n   * @memberof Chart._adapters._date\\n   * @name Unit\\n   */\\n\\n  /**\\n   * @class\\n   */\\n\\n\\n  function DateAdapter(options) {\\n    this.options = options || {};\\n  }\\n\\n  helpers$1.extend(DateAdapter.prototype,\\n  /** @lends DateAdapter */\\n  {\\n    /**\\n     * Returns a map of time formats for the supported formatting units defined\\n     * in Unit as well as 'datetime' representing a detailed date/time string.\\n     * @returns {{string: string}}\\n     */\\n    formats: _abstract,\\n\\n    /**\\n     * Parses the given `value` and return the associated timestamp.\\n     * @param {any} value - the value to parse (usually comes from the data)\\n     * @param {string} [format] - the expected data format\\n     * @returns {(number|null)}\\n     * @function\\n     */\\n    parse: _abstract,\\n\\n    /**\\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\\n     * @param {number} timestamp - the timestamp to format\\n     * @param {string} format - the date/time token\\n     * @return {string}\\n     * @function\\n     */\\n    format: _abstract,\\n\\n    /**\\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\\n     * @param {number} timestamp - the input timestamp\\n     * @param {number} amount - the amount to add\\n     * @param {Unit} unit - the unit as string\\n     * @return {number}\\n     * @function\\n     */\\n    add: _abstract,\\n\\n    /**\\n     * Returns the number of `unit` between the given timestamps.\\n     * @param {number} max - the input timestamp (reference)\\n     * @param {number} min - the timestamp to substract\\n     * @param {Unit} unit - the unit as string\\n     * @return {number}\\n     * @function\\n     */\\n    diff: _abstract,\\n\\n    /**\\n     * Returns start of `unit` for the given `timestamp`.\\n     * @param {number} timestamp - the input timestamp\\n     * @param {Unit} unit - the unit as string\\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\\n     * @function\\n     */\\n    startOf: _abstract,\\n\\n    /**\\n     * Returns end of `unit` for the given `timestamp`.\\n     * @param {number} timestamp - the input timestamp\\n     * @param {Unit} unit - the unit as string\\n     * @function\\n     */\\n    endOf: _abstract,\\n    // DEPRECATIONS\\n\\n    /**\\n     * Provided for backward compatibility for scale.getValueForPixel(),\\n     * this method should be overridden only by the moment adapter.\\n     * @deprecated since version 2.8.0\\n     * @todo remove at version 3\\n     * @private\\n     */\\n    _create: function _create(value) {\\n      return value;\\n    }\\n  });\\n\\n  DateAdapter.override = function (members) {\\n    helpers$1.extend(DateAdapter.prototype, members);\\n  };\\n\\n  var _date = DateAdapter;\\n  var core_adapters = {\\n    _date: _date\\n  };\\n  /**\\n   * Namespace to hold static tick generation functions\\n   * @namespace Chart.Ticks\\n   */\\n\\n  var core_ticks = {\\n    /**\\n     * Namespace to hold formatters for different types of ticks\\n     * @namespace Chart.Ticks.formatters\\n     */\\n    formatters: {\\n      /**\\n       * Formatter for value labels\\n       * @method Chart.Ticks.formatters.values\\n       * @param value the value to display\\n       * @return {string|string[]} the label to display\\n       */\\n      values: function values(value) {\\n        return helpers$1.isArray(value) ? value : '' + value;\\n      },\\n\\n      /**\\n       * Formatter for linear numeric ticks\\n       * @method Chart.Ticks.formatters.linear\\n       * @param tickValue {number} the value to be formatted\\n       * @param index {number} the position of the tickValue parameter in the ticks array\\n       * @param ticks {number[]} the list of ticks being converted\\n       * @return {string} string representation of the tickValue parameter\\n       */\\n      linear: function linear(tickValue, index, ticks) {\\n        // If we have lots of ticks, don't use the ones\\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\\n\\n        if (Math.abs(delta) > 1) {\\n          if (tickValue !== Math.floor(tickValue)) {\\n            // not an integer\\n            delta = tickValue - Math.floor(tickValue);\\n          }\\n        }\\n\\n        var logDelta = helpers$1.log10(Math.abs(delta));\\n        var tickString = '';\\n\\n        if (tickValue !== 0) {\\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\\n\\n          if (maxTick < 1e-4) {\\n            // all ticks are small numbers; use scientific notation\\n            var logTick = helpers$1.log10(Math.abs(tickValue));\\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\\n          } else {\\n            var numDecimal = -1 * Math.floor(logDelta);\\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\\n\\n            tickString = tickValue.toFixed(numDecimal);\\n          }\\n        } else {\\n          tickString = '0'; // never show decimal places for 0\\n        }\\n\\n        return tickString;\\n      },\\n      logarithmic: function logarithmic(tickValue, index, ticks) {\\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\\n\\n        if (tickValue === 0) {\\n          return '0';\\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\\n          return tickValue.toExponential();\\n        }\\n\\n        return '';\\n      }\\n    }\\n  };\\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\\n\\n  core_defaults._set('scale', {\\n    display: true,\\n    position: 'left',\\n    offset: false,\\n    // grid line settings\\n    gridLines: {\\n      display: true,\\n      color: 'rgba(0, 0, 0, 0.1)',\\n      lineWidth: 1,\\n      drawBorder: true,\\n      drawOnChartArea: true,\\n      drawTicks: true,\\n      tickMarkLength: 10,\\n      zeroLineWidth: 1,\\n      zeroLineColor: 'rgba(0,0,0,0.25)',\\n      zeroLineBorderDash: [],\\n      zeroLineBorderDashOffset: 0.0,\\n      offsetGridLines: false,\\n      borderDash: [],\\n      borderDashOffset: 0.0\\n    },\\n    // scale label\\n    scaleLabel: {\\n      // display property\\n      display: false,\\n      // actual label\\n      labelString: '',\\n      // top/bottom padding\\n      padding: {\\n        top: 4,\\n        bottom: 4\\n      }\\n    },\\n    // label settings\\n    ticks: {\\n      beginAtZero: false,\\n      minRotation: 0,\\n      maxRotation: 50,\\n      mirror: false,\\n      padding: 0,\\n      reverse: false,\\n      display: true,\\n      autoSkip: true,\\n      autoSkipPadding: 0,\\n      labelOffset: 0,\\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\\n      callback: core_ticks.formatters.values,\\n      minor: {},\\n      major: {}\\n    }\\n  });\\n\\n  function labelsFromTicks(ticks) {\\n    var labels = [];\\n    var i, ilen;\\n\\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\\n      labels.push(ticks[i].label);\\n    }\\n\\n    return labels;\\n  }\\n\\n  function getPixelForGridLine(scale, index, offsetGridLines) {\\n    var lineValue = scale.getPixelForTick(index);\\n\\n    if (offsetGridLines) {\\n      if (scale.getTicks().length === 1) {\\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\\n      } else if (index === 0) {\\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\\n      } else {\\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\\n      }\\n    }\\n\\n    return lineValue;\\n  }\\n\\n  function computeTextSize(context, tick, font) {\\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\\n  }\\n\\n  var core_scale = core_element.extend({\\n    /**\\n     * Get the padding needed for the scale\\n     * @method getPadding\\n     * @private\\n     * @returns {Padding} the necessary padding\\n     */\\n    getPadding: function getPadding() {\\n      var me = this;\\n      return {\\n        left: me.paddingLeft || 0,\\n        top: me.paddingTop || 0,\\n        right: me.paddingRight || 0,\\n        bottom: me.paddingBottom || 0\\n      };\\n    },\\n\\n    /**\\n     * Returns the scale tick objects ({label, major})\\n     * @since 2.7\\n     */\\n    getTicks: function getTicks() {\\n      return this._ticks;\\n    },\\n    // These methods are ordered by lifecyle. Utilities then follow.\\n    // Any function defined here is inherited by all scale types.\\n    // Any function can be extended by the scale type\\n    mergeTicksOptions: function mergeTicksOptions() {\\n      var ticks = this.options.ticks;\\n\\n      if (ticks.minor === false) {\\n        ticks.minor = {\\n          display: false\\n        };\\n      }\\n\\n      if (ticks.major === false) {\\n        ticks.major = {\\n          display: false\\n        };\\n      }\\n\\n      for (var key in ticks) {\\n        if (key !== 'major' && key !== 'minor') {\\n          if (typeof ticks.minor[key] === 'undefined') {\\n            ticks.minor[key] = ticks[key];\\n          }\\n\\n          if (typeof ticks.major[key] === 'undefined') {\\n            ticks.major[key] = ticks[key];\\n          }\\n        }\\n      }\\n    },\\n    beforeUpdate: function beforeUpdate() {\\n      helpers$1.callback(this.options.beforeUpdate, [this]);\\n    },\\n    update: function update(maxWidth, maxHeight, margins) {\\n      var me = this;\\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\\n\\n      me.beforeUpdate(); // Absorb the master measurements\\n\\n      me.maxWidth = maxWidth;\\n      me.maxHeight = maxHeight;\\n      me.margins = helpers$1.extend({\\n        left: 0,\\n        right: 0,\\n        top: 0,\\n        bottom: 0\\n      }, margins);\\n      me._maxLabelLines = 0;\\n      me.longestLabelWidth = 0;\\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\\n\\n      me.beforeSetDimensions();\\n      me.setDimensions();\\n      me.afterSetDimensions(); // Data min/max\\n\\n      me.beforeDataLimits();\\n      me.determineDataLimits();\\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\\n      // and must not be accessed directly from outside this class. `this.ticks` being\\n      // around for long time and not marked as private, we can't change its structure\\n      // without unexpected breaking changes. If you need to access the scale ticks,\\n      // use scale.getTicks() instead.\\n\\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\\n      // we still support no return (`this.ticks` internally set by calling this method).\\n\\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\\n\\n      ticks = me.afterBuildTicks(ticks) || ticks;\\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\\n      // this method and supposed to contain only string values).\\n\\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\\n      me.afterTickToLabelConversion();\\n      me.ticks = labels; // BACKWARD COMPATIBILITY\\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\\n\\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\\n        label = labels[i];\\n        tick = ticks[i];\\n\\n        if (!tick) {\\n          ticks.push(tick = {\\n            label: label,\\n            major: false\\n          });\\n        } else {\\n          tick.label = label;\\n        }\\n      }\\n\\n      me._ticks = ticks; // Tick Rotation\\n\\n      me.beforeCalculateTickRotation();\\n      me.calculateTickRotation();\\n      me.afterCalculateTickRotation(); // Fit\\n\\n      me.beforeFit();\\n      me.fit();\\n      me.afterFit(); //\\n\\n      me.afterUpdate();\\n      return me.minSize;\\n    },\\n    afterUpdate: function afterUpdate() {\\n      helpers$1.callback(this.options.afterUpdate, [this]);\\n    },\\n    //\\n    beforeSetDimensions: function beforeSetDimensions() {\\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\\n    },\\n    setDimensions: function setDimensions() {\\n      var me = this; // Set the unconstrained dimension before label rotation\\n\\n      if (me.isHorizontal()) {\\n        // Reset position before calculating rotation\\n        me.width = me.maxWidth;\\n        me.left = 0;\\n        me.right = me.width;\\n      } else {\\n        me.height = me.maxHeight; // Reset position before calculating rotation\\n\\n        me.top = 0;\\n        me.bottom = me.height;\\n      } // Reset padding\\n\\n\\n      me.paddingLeft = 0;\\n      me.paddingTop = 0;\\n      me.paddingRight = 0;\\n      me.paddingBottom = 0;\\n    },\\n    afterSetDimensions: function afterSetDimensions() {\\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\\n    },\\n    // Data limits\\n    beforeDataLimits: function beforeDataLimits() {\\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\\n    },\\n    determineDataLimits: helpers$1.noop,\\n    afterDataLimits: function afterDataLimits() {\\n      helpers$1.callback(this.options.afterDataLimits, [this]);\\n    },\\n    //\\n    beforeBuildTicks: function beforeBuildTicks() {\\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\\n    },\\n    buildTicks: helpers$1.noop,\\n    afterBuildTicks: function afterBuildTicks(ticks) {\\n      var me = this; // ticks is empty for old axis implementations here\\n\\n      if (helpers$1.isArray(ticks) && ticks.length) {\\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\\n\\n\\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\\n      return ticks;\\n    },\\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\\n    },\\n    convertTicksToLabels: function convertTicksToLabels() {\\n      var me = this; // Convert ticks to strings\\n\\n      var tickOpts = me.options.ticks;\\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\\n    },\\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\\n    },\\n    //\\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\\n    },\\n    calculateTickRotation: function calculateTickRotation() {\\n      var me = this;\\n      var context = me.ctx;\\n      var tickOpts = me.options.ticks;\\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\\n      // between x offsets between 0 and 1.\\n\\n      var tickFont = helpers$1.options._parseFont(tickOpts);\\n\\n      context.font = tickFont.string;\\n      var labelRotation = tickOpts.minRotation || 0;\\n\\n      if (labels.length && me.options.display && me.isHorizontal()) {\\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\\n        var labelWidth = originalLabelWidth;\\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\\n\\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\\n\\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\\n          var angleRadians = helpers$1.toRadians(labelRotation);\\n          cosRotation = Math.cos(angleRadians);\\n          sinRotation = Math.sin(angleRadians);\\n\\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\\n            // go back one step\\n            labelRotation--;\\n            break;\\n          }\\n\\n          labelRotation++;\\n          labelWidth = cosRotation * originalLabelWidth;\\n        }\\n      }\\n\\n      me.labelRotation = labelRotation;\\n    },\\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\\n    },\\n    //\\n    beforeFit: function beforeFit() {\\n      helpers$1.callback(this.options.beforeFit, [this]);\\n    },\\n    fit: function fit() {\\n      var me = this; // Reset\\n\\n      var minSize = me.minSize = {\\n        width: 0,\\n        height: 0\\n      };\\n      var labels = labelsFromTicks(me._ticks);\\n      var opts = me.options;\\n      var tickOpts = opts.ticks;\\n      var scaleLabelOpts = opts.scaleLabel;\\n      var gridLineOpts = opts.gridLines;\\n\\n      var display = me._isVisible();\\n\\n      var position = opts.position;\\n      var isHorizontal = me.isHorizontal();\\n      var parseFont = helpers$1.options._parseFont;\\n      var tickFont = parseFont(tickOpts);\\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\\n\\n      if (isHorizontal) {\\n        // subtract the margins to line up with the chartArea if we are a full width scale\\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\\n      } else {\\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\\n      } // height\\n\\n\\n      if (isHorizontal) {\\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\\n      } else {\\n        minSize.height = me.maxHeight; // fill all the height\\n      } // Are we showing a title for the scale?\\n\\n\\n      if (scaleLabelOpts.display && display) {\\n        var scaleLabelFont = parseFont(scaleLabelOpts);\\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\\n\\n        if (isHorizontal) {\\n          minSize.height += deltaHeight;\\n        } else {\\n          minSize.width += deltaHeight;\\n        }\\n      } // Don't bother fitting the ticks if we are not showing the labels\\n\\n\\n      if (tickOpts.display && display) {\\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\\n        var lineSpace = tickFont.size * 0.5;\\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\\n\\n        me._maxLabelLines = tallestLabelHeightInLines;\\n        me.longestLabelWidth = largestTextWidth;\\n\\n        if (isHorizontal) {\\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\\n          var cosRotation = Math.cos(angleRadians);\\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\\n\\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\\n\\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\\n          me.ctx.font = tickFont.string;\\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\\n          var offsetLeft = me.getPixelForTick(0) - me.left;\\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\\n          // which means that the right padding is dominated by the font height\\n\\n          if (me.labelRotation !== 0) {\\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\\n          } else {\\n            paddingLeft = firstLabelWidth / 2;\\n            paddingRight = lastLabelWidth / 2;\\n          }\\n\\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\\n\\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\\n        } else {\\n          // A vertical axis is more constrained by the width. Labels are the\\n          // dominant factor here, so get that length first and account for padding\\n          if (tickOpts.mirror) {\\n            largestTextWidth = 0;\\n          } else {\\n            // use lineSpace for consistency with horizontal axis\\n            // tickPadding is not implemented for horizontal\\n            largestTextWidth += tickPadding + lineSpace;\\n          }\\n\\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\\n          me.paddingTop = tickFont.size / 2;\\n          me.paddingBottom = tickFont.size / 2;\\n        }\\n      }\\n\\n      me.handleMargins();\\n      me.width = minSize.width;\\n      me.height = minSize.height;\\n    },\\n\\n    /**\\n     * Handle margins and padding interactions\\n     * @private\\n     */\\n    handleMargins: function handleMargins() {\\n      var me = this;\\n\\n      if (me.margins) {\\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\\n      }\\n    },\\n    afterFit: function afterFit() {\\n      helpers$1.callback(this.options.afterFit, [this]);\\n    },\\n    // Shared Methods\\n    isHorizontal: function isHorizontal() {\\n      return this.options.position === 'top' || this.options.position === 'bottom';\\n    },\\n    isFullWidth: function isFullWidth() {\\n      return this.options.fullWidth;\\n    },\\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\\n    getRightValue: function getRightValue(rawValue) {\\n      // Null and undefined values first\\n      if (helpers$1.isNullOrUndef(rawValue)) {\\n        return NaN;\\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\\n\\n\\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\\n        return NaN;\\n      } // If it is in fact an object, dive in one more level\\n\\n\\n      if (rawValue) {\\n        if (this.isHorizontal()) {\\n          if (rawValue.x !== undefined) {\\n            return this.getRightValue(rawValue.x);\\n          }\\n        } else if (rawValue.y !== undefined) {\\n          return this.getRightValue(rawValue.y);\\n        }\\n      } // Value is good, return it\\n\\n\\n      return rawValue;\\n    },\\n\\n    /**\\n     * Used to get the value to display in the tooltip for the data at the given index\\n     * @param index\\n     * @param datasetIndex\\n     */\\n    getLabelForIndex: helpers$1.noop,\\n\\n    /**\\n     * Returns the location of the given data point. Value can either be an index or a numerical value\\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\\n     * @param value\\n     * @param index\\n     * @param datasetIndex\\n     */\\n    getPixelForValue: helpers$1.noop,\\n\\n    /**\\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\\n     * @param pixel\\n     */\\n    getValueForPixel: helpers$1.noop,\\n\\n    /**\\n     * Returns the location of the tick at the given index\\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\\n     */\\n    getPixelForTick: function getPixelForTick(index) {\\n      var me = this;\\n      var offset = me.options.offset;\\n\\n      if (me.isHorizontal()) {\\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\\n        var pixel = tickWidth * index + me.paddingLeft;\\n\\n        if (offset) {\\n          pixel += tickWidth / 2;\\n        }\\n\\n        var finalVal = me.left + pixel;\\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\\n        return finalVal;\\n      }\\n\\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\\n    },\\n\\n    /**\\n     * Utility for getting the pixel location of a percentage of scale\\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\\n     */\\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\\n      var me = this;\\n\\n      if (me.isHorizontal()) {\\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\\n        var finalVal = me.left + valueOffset;\\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\\n        return finalVal;\\n      }\\n\\n      return me.top + decimal * me.height;\\n    },\\n\\n    /**\\n     * Returns the pixel for the minimum chart value\\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\\n     */\\n    getBasePixel: function getBasePixel() {\\n      return this.getPixelForValue(this.getBaseValue());\\n    },\\n    getBaseValue: function getBaseValue() {\\n      var me = this;\\n      var min = me.min;\\n      var max = me.max;\\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\\n    },\\n\\n    /**\\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\\n     * @private\\n     */\\n    _autoSkip: function _autoSkip(ticks) {\\n      var me = this;\\n      var isHorizontal = me.isHorizontal();\\n      var optionTicks = me.options.ticks.minor;\\n      var tickCount = ticks.length;\\n      var skipRatio = false;\\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\\n      // drawn as their center at end of axis, so tickCount-1\\n\\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\\n\\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\\n      var result = [];\\n      var i, tick;\\n\\n      if (ticksLength > axisLength) {\\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\\n      } // if they defined a max number of optionTicks,\\n      // increase skipRatio until that number is met\\n\\n\\n      if (tickCount > maxTicks) {\\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\\n      }\\n\\n      for (i = 0; i < tickCount; i++) {\\n        tick = ticks[i];\\n\\n        if (skipRatio > 1 && i % skipRatio > 0) {\\n          // leave tick in place but make sure it's not displayed (#4635)\\n          delete tick.label;\\n        }\\n\\n        result.push(tick);\\n      }\\n\\n      return result;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _tickSize: function _tickSize() {\\n      var me = this;\\n      var isHorizontal = me.isHorizontal();\\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\\n\\n      var rot = helpers$1.toRadians(me.labelRotation);\\n      var cos = Math.abs(Math.cos(rot));\\n      var sin = Math.abs(Math.sin(rot));\\n      var padding = optionTicks.autoSkipPadding || 0;\\n      var w = me.longestLabelWidth + padding || 0;\\n\\n      var tickFont = helpers$1.options._parseFont(optionTicks);\\n\\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\\n\\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _isVisible: function _isVisible() {\\n      var me = this;\\n      var chart = me.chart;\\n      var display = me.options.display;\\n      var i, ilen, meta;\\n\\n      if (display !== 'auto') {\\n        return !!display;\\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\\n\\n\\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\\n        if (chart.isDatasetVisible(i)) {\\n          meta = chart.getDatasetMeta(i);\\n\\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\\n            return true;\\n          }\\n        }\\n      }\\n\\n      return false;\\n    },\\n\\n    /**\\n     * Actually draw the scale on the canvas\\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\\n     */\\n    draw: function draw(chartArea) {\\n      var me = this;\\n      var options = me.options;\\n\\n      if (!me._isVisible()) {\\n        return;\\n      }\\n\\n      var chart = me.chart;\\n      var context = me.ctx;\\n      var globalDefaults = core_defaults.global;\\n      var defaultFontColor = globalDefaults.defaultFontColor;\\n      var optionTicks = options.ticks.minor;\\n      var optionMajorTicks = options.ticks.major || optionTicks;\\n      var gridLines = options.gridLines;\\n      var scaleLabel = options.scaleLabel;\\n      var position = options.position;\\n      var isRotated = me.labelRotation !== 0;\\n      var isMirrored = optionTicks.mirror;\\n      var isHorizontal = me.isHorizontal();\\n      var parseFont = helpers$1.options._parseFont;\\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\\n      var tickFont = parseFont(optionTicks);\\n      var lineHeight = tickFont.lineHeight;\\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\\n      var majorTickFont = parseFont(optionMajorTicks);\\n      var tickPadding = optionTicks.padding;\\n      var labelOffset = optionTicks.labelOffset;\\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\\n      var scaleLabelFont = parseFont(scaleLabel);\\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\\n      var itemsToDraw = [];\\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\\n      var alignPixel = helpers$1._alignPixel;\\n      var borderValue, tickStart, tickEnd;\\n\\n      if (position === 'top') {\\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\\n        tickStart = me.bottom - tl;\\n        tickEnd = borderValue - axisWidth / 2;\\n      } else if (position === 'bottom') {\\n        borderValue = alignPixel(chart, me.top, axisWidth);\\n        tickStart = borderValue + axisWidth / 2;\\n        tickEnd = me.top + tl;\\n      } else if (position === 'left') {\\n        borderValue = alignPixel(chart, me.right, axisWidth);\\n        tickStart = me.right - tl;\\n        tickEnd = borderValue - axisWidth / 2;\\n      } else {\\n        borderValue = alignPixel(chart, me.left, axisWidth);\\n        tickStart = borderValue + axisWidth / 2;\\n        tickEnd = me.left + tl;\\n      }\\n\\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\\n\\n      helpers$1.each(ticks, function (tick, index) {\\n        // autoskipper skipped this tick (#4635)\\n        if (helpers$1.isNullOrUndef(tick.label)) {\\n          return;\\n        }\\n\\n        var label = tick.label;\\n        var lineWidth, lineColor, borderDash, borderDashOffset;\\n\\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\\n          // Draw the first index specially\\n          lineWidth = gridLines.zeroLineWidth;\\n          lineColor = gridLines.zeroLineColor;\\n          borderDash = gridLines.zeroLineBorderDash || [];\\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\\n        } else {\\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\\n          borderDash = gridLines.borderDash || [];\\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\\n        } // Common properties\\n\\n\\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\\n\\n        if (isHorizontal) {\\n          var labelYOffset = tl + tickPadding;\\n\\n          if (lineValue < me.left - epsilon) {\\n            lineColor = 'rgba(0,0,0,0)';\\n          }\\n\\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\\n          ty1 = tickStart;\\n          ty2 = tickEnd;\\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\\n\\n          if (position === 'top') {\\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\\n            y2 = chartArea.bottom;\\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\\n            textAlign = !isRotated ? 'center' : 'left';\\n            labelY = me.bottom - labelYOffset;\\n          } else {\\n            y1 = chartArea.top;\\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\\n            textAlign = !isRotated ? 'center' : 'right';\\n            labelY = me.top + labelYOffset;\\n          }\\n        } else {\\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\\n\\n          if (lineValue < me.top - epsilon) {\\n            lineColor = 'rgba(0,0,0,0)';\\n          }\\n\\n          tx1 = tickStart;\\n          tx2 = tickEnd;\\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\\n          labelY = me.getPixelForTick(index) + labelOffset;\\n          textOffset = (1 - labelCount) * lineHeight / 2;\\n\\n          if (position === 'left') {\\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\\n            x2 = chartArea.right;\\n            textAlign = isMirrored ? 'left' : 'right';\\n            labelX = me.right - labelXOffset;\\n          } else {\\n            x1 = chartArea.left;\\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\\n            textAlign = isMirrored ? 'right' : 'left';\\n            labelX = me.left + labelXOffset;\\n          }\\n        }\\n\\n        itemsToDraw.push({\\n          tx1: tx1,\\n          ty1: ty1,\\n          tx2: tx2,\\n          ty2: ty2,\\n          x1: x1,\\n          y1: y1,\\n          x2: x2,\\n          y2: y2,\\n          labelX: labelX,\\n          labelY: labelY,\\n          glWidth: lineWidth,\\n          glColor: lineColor,\\n          glBorderDash: borderDash,\\n          glBorderDashOffset: borderDashOffset,\\n          rotation: -1 * labelRotationRadians,\\n          label: label,\\n          major: tick.major,\\n          textOffset: textOffset,\\n          textAlign: textAlign\\n        });\\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\\n\\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\\n        var glWidth = itemToDraw.glWidth;\\n        var glColor = itemToDraw.glColor;\\n\\n        if (gridLines.display && glWidth && glColor) {\\n          context.save();\\n          context.lineWidth = glWidth;\\n          context.strokeStyle = glColor;\\n\\n          if (context.setLineDash) {\\n            context.setLineDash(itemToDraw.glBorderDash);\\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\\n          }\\n\\n          context.beginPath();\\n\\n          if (gridLines.drawTicks) {\\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\\n          }\\n\\n          if (gridLines.drawOnChartArea) {\\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\\n          }\\n\\n          context.stroke();\\n          context.restore();\\n        }\\n\\n        if (optionTicks.display) {\\n          // Make sure we draw text in the correct color and font\\n          context.save();\\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\\n          context.rotate(itemToDraw.rotation);\\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\\n          context.textBaseline = 'middle';\\n          context.textAlign = itemToDraw.textAlign;\\n          var label = itemToDraw.label;\\n          var y = itemToDraw.textOffset;\\n\\n          if (helpers$1.isArray(label)) {\\n            for (var i = 0; i < label.length; ++i) {\\n              // We just make sure the multiline element is a string here..\\n              context.fillText('' + label[i], 0, y);\\n              y += lineHeight;\\n            }\\n          } else {\\n            context.fillText(label, 0, y);\\n          }\\n\\n          context.restore();\\n        }\\n      });\\n\\n      if (scaleLabel.display) {\\n        // Draw the scale label\\n        var scaleLabelX;\\n        var scaleLabelY;\\n        var rotation = 0;\\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\\n\\n        if (isHorizontal) {\\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\\n\\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\\n        } else {\\n          var isLeft = position === 'left';\\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\\n        }\\n\\n        context.save();\\n        context.translate(scaleLabelX, scaleLabelY);\\n        context.rotate(rotation);\\n        context.textAlign = 'center';\\n        context.textBaseline = 'middle';\\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\\n\\n        context.font = scaleLabelFont.string;\\n        context.fillText(scaleLabel.labelString, 0, 0);\\n        context.restore();\\n      }\\n\\n      if (axisWidth) {\\n        // Draw the line at the edge of the axis\\n        var firstLineWidth = axisWidth;\\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\\n        var x1, x2, y1, y2;\\n\\n        if (isHorizontal) {\\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\\n          y1 = y2 = borderValue;\\n        } else {\\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\\n          x1 = x2 = borderValue;\\n        }\\n\\n        context.lineWidth = axisWidth;\\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\\n        context.beginPath();\\n        context.moveTo(x1, y1);\\n        context.lineTo(x2, y2);\\n        context.stroke();\\n      }\\n    }\\n  });\\n  var defaultConfig = {\\n    position: 'bottom'\\n  };\\n  var scale_category = core_scale.extend({\\n    /**\\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\\n    * else fall back to data.labels\\n    * @private\\n    */\\n    getLabels: function getLabels() {\\n      var data = this.chart.data;\\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\\n    },\\n    determineDataLimits: function determineDataLimits() {\\n      var me = this;\\n      var labels = me.getLabels();\\n      me.minIndex = 0;\\n      me.maxIndex = labels.length - 1;\\n      var findIndex;\\n\\n      if (me.options.ticks.min !== undefined) {\\n        // user specified min value\\n        findIndex = labels.indexOf(me.options.ticks.min);\\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\\n      }\\n\\n      if (me.options.ticks.max !== undefined) {\\n        // user specified max value\\n        findIndex = labels.indexOf(me.options.ticks.max);\\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\\n      }\\n\\n      me.min = labels[me.minIndex];\\n      me.max = labels[me.maxIndex];\\n    },\\n    buildTicks: function buildTicks() {\\n      var me = this;\\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\\n\\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\\n    },\\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\\n      var me = this;\\n      var chart = me.chart;\\n\\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\\n      }\\n\\n      return me.ticks[index - me.minIndex];\\n    },\\n    // Used to get data value locations.  Value can either be an index or a numerical value\\n    getPixelForValue: function getPixelForValue(value, index) {\\n      var me = this;\\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\\n\\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\\n      // not the index of the scale. We need to change that.\\n\\n      var valueCategory;\\n\\n      if (value !== undefined && value !== null) {\\n        valueCategory = me.isHorizontal() ? value.x : value.y;\\n      }\\n\\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\\n        var labels = me.getLabels();\\n        value = valueCategory || value;\\n        var idx = labels.indexOf(value);\\n        index = idx !== -1 ? idx : index;\\n      }\\n\\n      if (me.isHorizontal()) {\\n        var valueWidth = me.width / offsetAmt;\\n        var widthOffset = valueWidth * (index - me.minIndex);\\n\\n        if (offset) {\\n          widthOffset += valueWidth / 2;\\n        }\\n\\n        return me.left + widthOffset;\\n      }\\n\\n      var valueHeight = me.height / offsetAmt;\\n      var heightOffset = valueHeight * (index - me.minIndex);\\n\\n      if (offset) {\\n        heightOffset += valueHeight / 2;\\n      }\\n\\n      return me.top + heightOffset;\\n    },\\n    getPixelForTick: function getPixelForTick(index) {\\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\\n    },\\n    getValueForPixel: function getValueForPixel(pixel) {\\n      var me = this;\\n      var offset = me.options.offset;\\n      var value;\\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\\n      var horz = me.isHorizontal();\\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\\n      pixel -= horz ? me.left : me.top;\\n\\n      if (offset) {\\n        pixel -= valueDimension / 2;\\n      }\\n\\n      if (pixel <= 0) {\\n        value = 0;\\n      } else {\\n        value = Math.round(pixel / valueDimension);\\n      }\\n\\n      return value + me.minIndex;\\n    },\\n    getBasePixel: function getBasePixel() {\\n      return this.bottom;\\n    }\\n  }); // INTERNAL: static default options, registered in src/index.js\\n\\n  var _defaults = defaultConfig;\\n  scale_category._defaults = _defaults;\\n  var noop = helpers$1.noop;\\n  var isNullOrUndef = helpers$1.isNullOrUndef;\\n  /**\\n   * Generate a set of linear ticks\\n   * @param generationOptions the options used to generate the ticks\\n   * @param dataRange the range of the data\\n   * @returns {number[]} array of tick values\\n   */\\n\\n  function generateTicks(generationOptions, dataRange) {\\n    var ticks = []; // To get a \\\"nice\\\" value for the tick spacing, we will use the appropriately named\\n    // \\\"nice number\\\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\\n    // for details.\\n\\n    var MIN_SPACING = 1e-14;\\n    var stepSize = generationOptions.stepSize;\\n    var unit = stepSize || 1;\\n    var maxNumSpaces = generationOptions.maxTicks - 1;\\n    var min = generationOptions.min;\\n    var max = generationOptions.max;\\n    var precision = generationOptions.precision;\\n    var rmin = dataRange.min;\\n    var rmax = dataRange.max;\\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\\n    // such that we can't do the math necessary to generate ticks\\n\\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\\n      return [rmin, rmax];\\n    }\\n\\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\\n\\n    if (numSpaces > maxNumSpaces) {\\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\\n    }\\n\\n    if (stepSize || isNullOrUndef(precision)) {\\n      // If a precision is not specified, calculate factor based on spacing\\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\\n    } else {\\n      // If the user specified a precision, round to that number of decimal places\\n      factor = Math.pow(10, precision);\\n      spacing = Math.ceil(spacing * factor) / factor;\\n    }\\n\\n    niceMin = Math.floor(rmin / spacing) * spacing;\\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\\n\\n    if (stepSize) {\\n      // If very close to our whole number, use it.\\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\\n        niceMin = min;\\n      }\\n\\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\\n        niceMax = max;\\n      }\\n    }\\n\\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\\n\\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\\n      numSpaces = Math.round(numSpaces);\\n    } else {\\n      numSpaces = Math.ceil(numSpaces);\\n    }\\n\\n    niceMin = Math.round(niceMin * factor) / factor;\\n    niceMax = Math.round(niceMax * factor) / factor;\\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\\n\\n    for (var j = 1; j < numSpaces; ++j) {\\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\\n    }\\n\\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\\n    return ticks;\\n  }\\n\\n  var scale_linearbase = core_scale.extend({\\n    getRightValue: function getRightValue(value) {\\n      if (typeof value === 'string') {\\n        return +value;\\n      }\\n\\n      return core_scale.prototype.getRightValue.call(this, value);\\n    },\\n    handleTickRangeOptions: function handleTickRangeOptions() {\\n      var me = this;\\n      var opts = me.options;\\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\\n      // axis, they can manually override it\\n\\n      if (tickOpts.beginAtZero) {\\n        var minSign = helpers$1.sign(me.min);\\n        var maxSign = helpers$1.sign(me.max);\\n\\n        if (minSign < 0 && maxSign < 0) {\\n          // move the top up to 0\\n          me.max = 0;\\n        } else if (minSign > 0 && maxSign > 0) {\\n          // move the bottom down to 0\\n          me.min = 0;\\n        }\\n      }\\n\\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\\n\\n      if (tickOpts.min !== undefined) {\\n        me.min = tickOpts.min;\\n      } else if (tickOpts.suggestedMin !== undefined) {\\n        if (me.min === null) {\\n          me.min = tickOpts.suggestedMin;\\n        } else {\\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\\n        }\\n      }\\n\\n      if (tickOpts.max !== undefined) {\\n        me.max = tickOpts.max;\\n      } else if (tickOpts.suggestedMax !== undefined) {\\n        if (me.max === null) {\\n          me.max = tickOpts.suggestedMax;\\n        } else {\\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\\n        }\\n      }\\n\\n      if (setMin !== setMax) {\\n        // We set the min or the max but not both.\\n        // So ensure that our range is good\\n        // Inverted or 0 length range can happen when\\n        // ticks.min is set, and no datasets are visible\\n        if (me.min >= me.max) {\\n          if (setMin) {\\n            me.max = me.min + 1;\\n          } else {\\n            me.min = me.max - 1;\\n          }\\n        }\\n      }\\n\\n      if (me.min === me.max) {\\n        me.max++;\\n\\n        if (!tickOpts.beginAtZero) {\\n          me.min--;\\n        }\\n      }\\n    },\\n    getTickLimit: function getTickLimit() {\\n      var me = this;\\n      var tickOpts = me.options.ticks;\\n      var stepSize = tickOpts.stepSize;\\n      var maxTicksLimit = tickOpts.maxTicksLimit;\\n      var maxTicks;\\n\\n      if (stepSize) {\\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\\n      } else {\\n        maxTicks = me._computeTickLimit();\\n        maxTicksLimit = maxTicksLimit || 11;\\n      }\\n\\n      if (maxTicksLimit) {\\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\\n      }\\n\\n      return maxTicks;\\n    },\\n    _computeTickLimit: function _computeTickLimit() {\\n      return Number.POSITIVE_INFINITY;\\n    },\\n    handleDirectionalChanges: noop,\\n    buildTicks: function buildTicks() {\\n      var me = this;\\n      var opts = me.options;\\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\\n      // the graph. Make sure we always have at least 2 ticks\\n\\n      var maxTicks = me.getTickLimit();\\n      maxTicks = Math.max(2, maxTicks);\\n      var numericGeneratorOptions = {\\n        maxTicks: maxTicks,\\n        min: tickOpts.min,\\n        max: tickOpts.max,\\n        precision: tickOpts.precision,\\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\\n      };\\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\\n      // range of the scale\\n\\n      me.max = helpers$1.max(ticks);\\n      me.min = helpers$1.min(ticks);\\n\\n      if (tickOpts.reverse) {\\n        ticks.reverse();\\n        me.start = me.max;\\n        me.end = me.min;\\n      } else {\\n        me.start = me.min;\\n        me.end = me.max;\\n      }\\n    },\\n    convertTicksToLabels: function convertTicksToLabels() {\\n      var me = this;\\n      me.ticksAsNumbers = me.ticks.slice();\\n      me.zeroLineIndex = me.ticks.indexOf(0);\\n      core_scale.prototype.convertTicksToLabels.call(me);\\n    }\\n  });\\n  var defaultConfig$1 = {\\n    position: 'left',\\n    ticks: {\\n      callback: core_ticks.formatters.linear\\n    }\\n  };\\n  var scale_linear = scale_linearbase.extend({\\n    determineDataLimits: function determineDataLimits() {\\n      var me = this;\\n      var opts = me.options;\\n      var chart = me.chart;\\n      var data = chart.data;\\n      var datasets = data.datasets;\\n      var isHorizontal = me.isHorizontal();\\n      var DEFAULT_MIN = 0;\\n      var DEFAULT_MAX = 1;\\n\\n      function IDMatches(meta) {\\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\\n      } // First Calculate the range\\n\\n\\n      me.min = null;\\n      me.max = null;\\n      var hasStacks = opts.stacked;\\n\\n      if (hasStacks === undefined) {\\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\\n          if (hasStacks) {\\n            return;\\n          }\\n\\n          var meta = chart.getDatasetMeta(datasetIndex);\\n\\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\\n            hasStacks = true;\\n          }\\n        });\\n      }\\n\\n      if (opts.stacked || hasStacks) {\\n        var valuesPerStack = {};\\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\\n          var meta = chart.getDatasetMeta(datasetIndex);\\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\\n\\n          if (valuesPerStack[key] === undefined) {\\n            valuesPerStack[key] = {\\n              positiveValues: [],\\n              negativeValues: []\\n            };\\n          } // Store these per type\\n\\n\\n          var positiveValues = valuesPerStack[key].positiveValues;\\n          var negativeValues = valuesPerStack[key].negativeValues;\\n\\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\\n            helpers$1.each(dataset.data, function (rawValue, index) {\\n              var value = +me.getRightValue(rawValue);\\n\\n              if (isNaN(value) || meta.data[index].hidden) {\\n                return;\\n              }\\n\\n              positiveValues[index] = positiveValues[index] || 0;\\n              negativeValues[index] = negativeValues[index] || 0;\\n\\n              if (opts.relativePoints) {\\n                positiveValues[index] = 100;\\n              } else if (value < 0) {\\n                negativeValues[index] += value;\\n              } else {\\n                positiveValues[index] += value;\\n              }\\n            });\\n          }\\n        });\\n        helpers$1.each(valuesPerStack, function (valuesForType) {\\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\\n          var minVal = helpers$1.min(values);\\n          var maxVal = helpers$1.max(values);\\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\\n        });\\n      } else {\\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\\n          var meta = chart.getDatasetMeta(datasetIndex);\\n\\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\\n            helpers$1.each(dataset.data, function (rawValue, index) {\\n              var value = +me.getRightValue(rawValue);\\n\\n              if (isNaN(value) || meta.data[index].hidden) {\\n                return;\\n              }\\n\\n              if (me.min === null) {\\n                me.min = value;\\n              } else if (value < me.min) {\\n                me.min = value;\\n              }\\n\\n              if (me.max === null) {\\n                me.max = value;\\n              } else if (value > me.max) {\\n                me.max = value;\\n              }\\n            });\\n          }\\n        });\\n      }\\n\\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\\n\\n      this.handleTickRangeOptions();\\n    },\\n    // Returns the maximum number of ticks based on the scale dimension\\n    _computeTickLimit: function _computeTickLimit() {\\n      var me = this;\\n      var tickFont;\\n\\n      if (me.isHorizontal()) {\\n        return Math.ceil(me.width / 40);\\n      }\\n\\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\\n      return Math.ceil(me.height / tickFont.lineHeight);\\n    },\\n    // Called after the ticks are built. We need\\n    handleDirectionalChanges: function handleDirectionalChanges() {\\n      if (!this.isHorizontal()) {\\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\\n        this.ticks.reverse();\\n      }\\n    },\\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\\n    },\\n    // Utils\\n    getPixelForValue: function getPixelForValue(value) {\\n      // This must be called after fit has been run so that\\n      // this.left, this.top, this.right, and this.bottom have been defined\\n      var me = this;\\n      var start = me.start;\\n      var rightValue = +me.getRightValue(value);\\n      var pixel;\\n      var range = me.end - start;\\n\\n      if (me.isHorizontal()) {\\n        pixel = me.left + me.width / range * (rightValue - start);\\n      } else {\\n        pixel = me.bottom - me.height / range * (rightValue - start);\\n      }\\n\\n      return pixel;\\n    },\\n    getValueForPixel: function getValueForPixel(pixel) {\\n      var me = this;\\n      var isHorizontal = me.isHorizontal();\\n      var innerDimension = isHorizontal ? me.width : me.height;\\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\\n      return me.start + (me.end - me.start) * offset;\\n    },\\n    getPixelForTick: function getPixelForTick(index) {\\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\\n    }\\n  }); // INTERNAL: static default options, registered in src/index.js\\n\\n  var _defaults$1 = defaultConfig$1;\\n  scale_linear._defaults = _defaults$1;\\n  var valueOrDefault$a = helpers$1.valueOrDefault;\\n  /**\\n   * Generate a set of logarithmic ticks\\n   * @param generationOptions the options used to generate the ticks\\n   * @param dataRange the range of the data\\n   * @returns {number[]} array of tick values\\n   */\\n\\n  function generateTicks$1(generationOptions, dataRange) {\\n    var ticks = [];\\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\\n    var exp, significand;\\n\\n    if (tickVal === 0) {\\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\\n      ticks.push(tickVal);\\n      tickVal = significand * Math.pow(10, exp);\\n    } else {\\n      exp = Math.floor(helpers$1.log10(tickVal));\\n      significand = Math.floor(tickVal / Math.pow(10, exp));\\n    }\\n\\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\\n\\n    do {\\n      ticks.push(tickVal);\\n      ++significand;\\n\\n      if (significand === 10) {\\n        significand = 1;\\n        ++exp;\\n        precision = exp >= 0 ? 1 : precision;\\n      }\\n\\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\\n\\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\\n    ticks.push(lastTick);\\n    return ticks;\\n  }\\n\\n  var defaultConfig$2 = {\\n    position: 'left',\\n    // label settings\\n    ticks: {\\n      callback: core_ticks.formatters.logarithmic\\n    }\\n  }; // TODO(v3): change this to positiveOrDefault\\n\\n  function nonNegativeOrDefault(value, defaultValue) {\\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\\n  }\\n\\n  var scale_logarithmic = core_scale.extend({\\n    determineDataLimits: function determineDataLimits() {\\n      var me = this;\\n      var opts = me.options;\\n      var chart = me.chart;\\n      var data = chart.data;\\n      var datasets = data.datasets;\\n      var isHorizontal = me.isHorizontal();\\n\\n      function IDMatches(meta) {\\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\\n      } // Calculate Range\\n\\n\\n      me.min = null;\\n      me.max = null;\\n      me.minNotZero = null;\\n      var hasStacks = opts.stacked;\\n\\n      if (hasStacks === undefined) {\\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\\n          if (hasStacks) {\\n            return;\\n          }\\n\\n          var meta = chart.getDatasetMeta(datasetIndex);\\n\\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\\n            hasStacks = true;\\n          }\\n        });\\n      }\\n\\n      if (opts.stacked || hasStacks) {\\n        var valuesPerStack = {};\\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\\n          var meta = chart.getDatasetMeta(datasetIndex);\\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\\n\\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\\n            if (valuesPerStack[key] === undefined) {\\n              valuesPerStack[key] = [];\\n            }\\n\\n            helpers$1.each(dataset.data, function (rawValue, index) {\\n              var values = valuesPerStack[key];\\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\\n\\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\\n                return;\\n              }\\n\\n              values[index] = values[index] || 0;\\n              values[index] += value;\\n            });\\n          }\\n        });\\n        helpers$1.each(valuesPerStack, function (valuesForType) {\\n          if (valuesForType.length > 0) {\\n            var minVal = helpers$1.min(valuesForType);\\n            var maxVal = helpers$1.max(valuesForType);\\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\\n          }\\n        });\\n      } else {\\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\\n          var meta = chart.getDatasetMeta(datasetIndex);\\n\\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\\n            helpers$1.each(dataset.data, function (rawValue, index) {\\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\\n\\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\\n                return;\\n              }\\n\\n              if (me.min === null) {\\n                me.min = value;\\n              } else if (value < me.min) {\\n                me.min = value;\\n              }\\n\\n              if (me.max === null) {\\n                me.max = value;\\n              } else if (value > me.max) {\\n                me.max = value;\\n              }\\n\\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\\n                me.minNotZero = value;\\n              }\\n            });\\n          }\\n        });\\n      } // Common base implementation to handle ticks.min, ticks.max\\n\\n\\n      this.handleTickRangeOptions();\\n    },\\n    handleTickRangeOptions: function handleTickRangeOptions() {\\n      var me = this;\\n      var tickOpts = me.options.ticks;\\n      var DEFAULT_MIN = 1;\\n      var DEFAULT_MAX = 10;\\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\\n\\n      if (me.min === me.max) {\\n        if (me.min !== 0 && me.min !== null) {\\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\\n        } else {\\n          me.min = DEFAULT_MIN;\\n          me.max = DEFAULT_MAX;\\n        }\\n      }\\n\\n      if (me.min === null) {\\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\\n      }\\n\\n      if (me.max === null) {\\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\\n      }\\n\\n      if (me.minNotZero === null) {\\n        if (me.min > 0) {\\n          me.minNotZero = me.min;\\n        } else if (me.max < 1) {\\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\\n        } else {\\n          me.minNotZero = DEFAULT_MIN;\\n        }\\n      }\\n    },\\n    buildTicks: function buildTicks() {\\n      var me = this;\\n      var tickOpts = me.options.ticks;\\n      var reverse = !me.isHorizontal();\\n      var generationOptions = {\\n        min: nonNegativeOrDefault(tickOpts.min),\\n        max: nonNegativeOrDefault(tickOpts.max)\\n      };\\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\\n      // range of the scale\\n\\n      me.max = helpers$1.max(ticks);\\n      me.min = helpers$1.min(ticks);\\n\\n      if (tickOpts.reverse) {\\n        reverse = !reverse;\\n        me.start = me.max;\\n        me.end = me.min;\\n      } else {\\n        me.start = me.min;\\n        me.end = me.max;\\n      }\\n\\n      if (reverse) {\\n        ticks.reverse();\\n      }\\n    },\\n    convertTicksToLabels: function convertTicksToLabels() {\\n      this.tickValues = this.ticks.slice();\\n      core_scale.prototype.convertTicksToLabels.call(this);\\n    },\\n    // Get the correct tooltip label\\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\\n    },\\n    getPixelForTick: function getPixelForTick(index) {\\n      return this.getPixelForValue(this.tickValues[index]);\\n    },\\n\\n    /**\\n     * Returns the value of the first tick.\\n     * @param {number} value - The minimum not zero value.\\n     * @return {number} The first tick value.\\n     * @private\\n     */\\n    _getFirstTickValue: function _getFirstTickValue(value) {\\n      var exp = Math.floor(helpers$1.log10(value));\\n      var significand = Math.floor(value / Math.pow(10, exp));\\n      return significand * Math.pow(10, exp);\\n    },\\n    getPixelForValue: function getPixelForValue(value) {\\n      var me = this;\\n      var tickOpts = me.options.ticks;\\n      var reverse = tickOpts.reverse;\\n      var log10 = helpers$1.log10;\\n\\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\\n\\n      var offset = 0;\\n      var innerDimension, pixel, start, end, sign;\\n      value = +me.getRightValue(value);\\n\\n      if (reverse) {\\n        start = me.end;\\n        end = me.start;\\n        sign = -1;\\n      } else {\\n        start = me.start;\\n        end = me.end;\\n        sign = 1;\\n      }\\n\\n      if (me.isHorizontal()) {\\n        innerDimension = me.width;\\n        pixel = reverse ? me.right : me.left;\\n      } else {\\n        innerDimension = me.height;\\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\\n\\n        pixel = reverse ? me.top : me.bottom;\\n      }\\n\\n      if (value !== start) {\\n        if (start === 0) {\\n          // include zero tick\\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\\n          innerDimension -= offset;\\n          start = firstTickValue;\\n        }\\n\\n        if (value !== 0) {\\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\\n        }\\n\\n        pixel += sign * offset;\\n      }\\n\\n      return pixel;\\n    },\\n    getValueForPixel: function getValueForPixel(pixel) {\\n      var me = this;\\n      var tickOpts = me.options.ticks;\\n      var reverse = tickOpts.reverse;\\n      var log10 = helpers$1.log10;\\n\\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\\n\\n      var innerDimension, start, end, value;\\n\\n      if (reverse) {\\n        start = me.end;\\n        end = me.start;\\n      } else {\\n        start = me.start;\\n        end = me.end;\\n      }\\n\\n      if (me.isHorizontal()) {\\n        innerDimension = me.width;\\n        value = reverse ? me.right - pixel : pixel - me.left;\\n      } else {\\n        innerDimension = me.height;\\n        value = reverse ? pixel - me.top : me.bottom - pixel;\\n      }\\n\\n      if (value !== start) {\\n        if (start === 0) {\\n          // include zero tick\\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\\n          value -= offset;\\n          innerDimension -= offset;\\n          start = firstTickValue;\\n        }\\n\\n        value *= log10(end) - log10(start);\\n        value /= innerDimension;\\n        value = Math.pow(10, log10(start) + value);\\n      }\\n\\n      return value;\\n    }\\n  }); // INTERNAL: static default options, registered in src/index.js\\n\\n  var _defaults$2 = defaultConfig$2;\\n  scale_logarithmic._defaults = _defaults$2;\\n  var valueOrDefault$b = helpers$1.valueOrDefault;\\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\\n  var resolve$7 = helpers$1.options.resolve;\\n  var defaultConfig$3 = {\\n    display: true,\\n    // Boolean - Whether to animate scaling the chart from the centre\\n    animate: true,\\n    position: 'chartArea',\\n    angleLines: {\\n      display: true,\\n      color: 'rgba(0, 0, 0, 0.1)',\\n      lineWidth: 1,\\n      borderDash: [],\\n      borderDashOffset: 0.0\\n    },\\n    gridLines: {\\n      circular: false\\n    },\\n    // label settings\\n    ticks: {\\n      // Boolean - Show a backdrop to the scale label\\n      showLabelBackdrop: true,\\n      // String - The colour of the label backdrop\\n      backdropColor: 'rgba(255,255,255,0.75)',\\n      // Number - The backdrop padding above & below the label in pixels\\n      backdropPaddingY: 2,\\n      // Number - The backdrop padding to the side of the label in pixels\\n      backdropPaddingX: 2,\\n      callback: core_ticks.formatters.linear\\n    },\\n    pointLabels: {\\n      // Boolean - if true, show point labels\\n      display: true,\\n      // Number - Point label font size in pixels\\n      fontSize: 10,\\n      // Function - Used to convert point labels\\n      callback: function callback(label) {\\n        return label;\\n      }\\n    }\\n  };\\n\\n  function getValueCount(scale) {\\n    var opts = scale.options;\\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\\n  }\\n\\n  function getTickBackdropHeight(opts) {\\n    var tickOpts = opts.ticks;\\n\\n    if (tickOpts.display && opts.display) {\\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\\n    }\\n\\n    return 0;\\n  }\\n\\n  function measureLabelSize(ctx, lineHeight, label) {\\n    if (helpers$1.isArray(label)) {\\n      return {\\n        w: helpers$1.longestText(ctx, ctx.font, label),\\n        h: label.length * lineHeight\\n      };\\n    }\\n\\n    return {\\n      w: ctx.measureText(label).width,\\n      h: lineHeight\\n    };\\n  }\\n\\n  function determineLimits(angle, pos, size, min, max) {\\n    if (angle === min || angle === max) {\\n      return {\\n        start: pos - size / 2,\\n        end: pos + size / 2\\n      };\\n    } else if (angle < min || angle > max) {\\n      return {\\n        start: pos - size,\\n        end: pos\\n      };\\n    }\\n\\n    return {\\n      start: pos,\\n      end: pos + size\\n    };\\n  }\\n  /**\\n   * Helper function to fit a radial linear scale with point labels\\n   */\\n\\n\\n  function fitWithPointLabels(scale) {\\n    // Right, this is really confusing and there is a lot of maths going on here\\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\\n    //\\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\\n    //\\n    // Solution:\\n    //\\n    // We assume the radius of the polygon is half the size of the canvas at first\\n    // at each index we check if the text overlaps.\\n    //\\n    // Where it does, we store that angle and that index.\\n    //\\n    // After finding the largest index and angle we calculate how much we need to remove\\n    // from the shape radius to move the point inwards by that x.\\n    //\\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\\n    // along with labels.\\n    //\\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\\n    //\\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\\n    // and position it in the most space efficient manner\\n    //\\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\\n\\n\\n    var furthestLimits = {\\n      l: 0,\\n      r: scale.width,\\n      t: 0,\\n      b: scale.height - scale.paddingTop\\n    };\\n    var furthestAngles = {};\\n    var i, textSize, pointPosition;\\n    scale.ctx.font = plFont.string;\\n    scale._pointLabelSizes = [];\\n    var valueCount = getValueCount(scale);\\n\\n    for (i = 0; i < valueCount; i++) {\\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\\n\\n      var angleRadians = scale.getIndexAngle(i);\\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\\n\\n      if (hLimits.start < furthestLimits.l) {\\n        furthestLimits.l = hLimits.start;\\n        furthestAngles.l = angleRadians;\\n      }\\n\\n      if (hLimits.end > furthestLimits.r) {\\n        furthestLimits.r = hLimits.end;\\n        furthestAngles.r = angleRadians;\\n      }\\n\\n      if (vLimits.start < furthestLimits.t) {\\n        furthestLimits.t = vLimits.start;\\n        furthestAngles.t = angleRadians;\\n      }\\n\\n      if (vLimits.end > furthestLimits.b) {\\n        furthestLimits.b = vLimits.end;\\n        furthestAngles.b = angleRadians;\\n      }\\n    }\\n\\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\\n  }\\n\\n  function getTextAlignForAngle(angle) {\\n    if (angle === 0 || angle === 180) {\\n      return 'center';\\n    } else if (angle < 180) {\\n      return 'left';\\n    }\\n\\n    return 'right';\\n  }\\n\\n  function fillText(ctx, text, position, lineHeight) {\\n    var y = position.y + lineHeight / 2;\\n    var i, ilen;\\n\\n    if (helpers$1.isArray(text)) {\\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\\n        ctx.fillText(text[i], position.x, y);\\n        y += lineHeight;\\n      }\\n    } else {\\n      ctx.fillText(text, position.x, y);\\n    }\\n  }\\n\\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\\n    if (angle === 90 || angle === 270) {\\n      position.y -= textSize.h / 2;\\n    } else if (angle > 270 || angle < 90) {\\n      position.y -= textSize.h;\\n    }\\n  }\\n\\n  function drawPointLabels(scale) {\\n    var ctx = scale.ctx;\\n    var opts = scale.options;\\n    var angleLineOpts = opts.angleLines;\\n    var gridLineOpts = opts.gridLines;\\n    var pointLabelOpts = opts.pointLabels;\\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\\n    var tickBackdropHeight = getTickBackdropHeight(opts);\\n    ctx.save();\\n    ctx.lineWidth = lineWidth;\\n    ctx.strokeStyle = lineColor;\\n\\n    if (ctx.setLineDash) {\\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\\n    }\\n\\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\\n\\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\\n\\n    ctx.font = plFont.string;\\n    ctx.textBaseline = 'middle';\\n\\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\\n      if (angleLineOpts.display && lineWidth && lineColor) {\\n        var outerPosition = scale.getPointPosition(i, outerDistance);\\n        ctx.beginPath();\\n        ctx.moveTo(scale.xCenter, scale.yCenter);\\n        ctx.lineTo(outerPosition.x, outerPosition.y);\\n        ctx.stroke();\\n      }\\n\\n      if (pointLabelOpts.display) {\\n        // Extra pixels out for some label spacing\\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\\n\\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\\n        ctx.fillStyle = pointLabelFontColor;\\n        var angleRadians = scale.getIndexAngle(i);\\n        var angle = helpers$1.toDegrees(angleRadians);\\n        ctx.textAlign = getTextAlignForAngle(angle);\\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\\n      }\\n    }\\n\\n    ctx.restore();\\n  }\\n\\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\\n    var ctx = scale.ctx;\\n    var circular = gridLineOpts.circular;\\n    var valueCount = getValueCount(scale);\\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\\n    var pointPosition;\\n\\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\\n      return;\\n    }\\n\\n    ctx.save();\\n    ctx.strokeStyle = lineColor;\\n    ctx.lineWidth = lineWidth;\\n\\n    if (ctx.setLineDash) {\\n      ctx.setLineDash(gridLineOpts.borderDash || []);\\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\\n    }\\n\\n    ctx.beginPath();\\n\\n    if (circular) {\\n      // Draw circular arcs between the points\\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\\n    } else {\\n      // Draw straight lines connecting each index\\n      pointPosition = scale.getPointPosition(0, radius);\\n      ctx.moveTo(pointPosition.x, pointPosition.y);\\n\\n      for (var i = 1; i < valueCount; i++) {\\n        pointPosition = scale.getPointPosition(i, radius);\\n        ctx.lineTo(pointPosition.x, pointPosition.y);\\n      }\\n    }\\n\\n    ctx.closePath();\\n    ctx.stroke();\\n    ctx.restore();\\n  }\\n\\n  function numberOrZero(param) {\\n    return helpers$1.isNumber(param) ? param : 0;\\n  }\\n\\n  var scale_radialLinear = scale_linearbase.extend({\\n    setDimensions: function setDimensions() {\\n      var me = this; // Set the unconstrained dimension before label rotation\\n\\n      me.width = me.maxWidth;\\n      me.height = me.maxHeight;\\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\\n      me.xCenter = Math.floor(me.width / 2);\\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\\n    },\\n    determineDataLimits: function determineDataLimits() {\\n      var me = this;\\n      var chart = me.chart;\\n      var min = Number.POSITIVE_INFINITY;\\n      var max = Number.NEGATIVE_INFINITY;\\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\\n        if (chart.isDatasetVisible(datasetIndex)) {\\n          var meta = chart.getDatasetMeta(datasetIndex);\\n          helpers$1.each(dataset.data, function (rawValue, index) {\\n            var value = +me.getRightValue(rawValue);\\n\\n            if (isNaN(value) || meta.data[index].hidden) {\\n              return;\\n            }\\n\\n            min = Math.min(value, min);\\n            max = Math.max(value, max);\\n          });\\n        }\\n      });\\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\\n\\n      me.handleTickRangeOptions();\\n    },\\n    // Returns the maximum number of ticks based on the scale dimension\\n    _computeTickLimit: function _computeTickLimit() {\\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\\n    },\\n    convertTicksToLabels: function convertTicksToLabels() {\\n      var me = this;\\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\\n\\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\\n    },\\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\\n    },\\n    fit: function fit() {\\n      var me = this;\\n      var opts = me.options;\\n\\n      if (opts.display && opts.pointLabels.display) {\\n        fitWithPointLabels(me);\\n      } else {\\n        me.setCenterPoint(0, 0, 0, 0);\\n      }\\n    },\\n\\n    /**\\n     * Set radius reductions and determine new radius and center point\\n     * @private\\n     */\\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\\n      var me = this;\\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\\n      radiusReductionRight = numberOrZero(radiusReductionRight);\\n      radiusReductionTop = numberOrZero(radiusReductionTop);\\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\\n    },\\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\\n      var me = this;\\n      var maxRight = me.width - rightMovement - me.drawingArea;\\n      var maxLeft = leftMovement + me.drawingArea;\\n      var maxTop = topMovement + me.drawingArea;\\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\\n    },\\n    getIndexAngle: function getIndexAngle(index) {\\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\\n\\n      return index * angleMultiplier + startAngleRadians;\\n    },\\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\\n      var me = this;\\n\\n      if (value === null) {\\n        return 0; // null always in center\\n      } // Take into account half font size + the yPadding of the top value\\n\\n\\n      var scalingFactor = me.drawingArea / (me.max - me.min);\\n\\n      if (me.options.ticks.reverse) {\\n        return (me.max - value) * scalingFactor;\\n      }\\n\\n      return (value - me.min) * scalingFactor;\\n    },\\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\\n      var me = this;\\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\\n      return {\\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\\n      };\\n    },\\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\\n    },\\n    getBasePosition: function getBasePosition() {\\n      var me = this;\\n      var min = me.min;\\n      var max = me.max;\\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\\n    },\\n    draw: function draw() {\\n      var me = this;\\n      var opts = me.options;\\n      var gridLineOpts = opts.gridLines;\\n      var tickOpts = opts.ticks;\\n\\n      if (opts.display) {\\n        var ctx = me.ctx;\\n        var startAngle = this.getIndexAngle(0);\\n\\n        var tickFont = helpers$1.options._parseFont(tickOpts);\\n\\n        if (opts.angleLines.display || opts.pointLabels.display) {\\n          drawPointLabels(me);\\n        }\\n\\n        helpers$1.each(me.ticks, function (label, index) {\\n          // Don't draw a centre value (if it is minimum)\\n          if (index > 0 || tickOpts.reverse) {\\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\\n\\n            if (gridLineOpts.display && index !== 0) {\\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\\n            }\\n\\n            if (tickOpts.display) {\\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\\n              ctx.font = tickFont.string;\\n              ctx.save();\\n              ctx.translate(me.xCenter, me.yCenter);\\n              ctx.rotate(startAngle);\\n\\n              if (tickOpts.showLabelBackdrop) {\\n                var labelWidth = ctx.measureText(label).width;\\n                ctx.fillStyle = tickOpts.backdropColor;\\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\\n              }\\n\\n              ctx.textAlign = 'center';\\n              ctx.textBaseline = 'middle';\\n              ctx.fillStyle = tickFontColor;\\n              ctx.fillText(label, 0, -yCenterOffset);\\n              ctx.restore();\\n            }\\n          }\\n        });\\n      }\\n    }\\n  }); // INTERNAL: static default options, registered in src/index.js\\n\\n  var _defaults$3 = defaultConfig$3;\\n  scale_radialLinear._defaults = _defaults$3;\\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\\n\\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\\n  var INTERVALS = {\\n    millisecond: {\\n      common: true,\\n      size: 1,\\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\\n    },\\n    second: {\\n      common: true,\\n      size: 1000,\\n      steps: [1, 2, 5, 10, 15, 30]\\n    },\\n    minute: {\\n      common: true,\\n      size: 60000,\\n      steps: [1, 2, 5, 10, 15, 30]\\n    },\\n    hour: {\\n      common: true,\\n      size: 3600000,\\n      steps: [1, 2, 3, 6, 12]\\n    },\\n    day: {\\n      common: true,\\n      size: 86400000,\\n      steps: [1, 2, 5]\\n    },\\n    week: {\\n      common: false,\\n      size: 604800000,\\n      steps: [1, 2, 3, 4]\\n    },\\n    month: {\\n      common: true,\\n      size: 2.628e9,\\n      steps: [1, 2, 3]\\n    },\\n    quarter: {\\n      common: false,\\n      size: 7.884e9,\\n      steps: [1, 2, 3, 4]\\n    },\\n    year: {\\n      common: true,\\n      size: 3.154e10\\n    }\\n  };\\n  var UNITS = Object.keys(INTERVALS);\\n\\n  function sorter(a, b) {\\n    return a - b;\\n  }\\n\\n  function arrayUnique(items) {\\n    var hash = {};\\n    var out = [];\\n    var i, ilen, item;\\n\\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\\n      item = items[i];\\n\\n      if (!hash[item]) {\\n        hash[item] = true;\\n        out.push(item);\\n      }\\n    }\\n\\n    return out;\\n  }\\n  /**\\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\\n   *\\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\\n   * case, only timestamps that break the time linearity are registered, meaning that in the\\n   * best case, all timestamps are linear, the table contains only min and max.\\n   */\\n\\n\\n  function buildLookupTable(timestamps, min, max, distribution) {\\n    if (distribution === 'linear' || !timestamps.length) {\\n      return [{\\n        time: min,\\n        pos: 0\\n      }, {\\n        time: max,\\n        pos: 1\\n      }];\\n    }\\n\\n    var table = [];\\n    var items = [min];\\n    var i, ilen, prev, curr, next;\\n\\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\\n      curr = timestamps[i];\\n\\n      if (curr > min && curr < max) {\\n        items.push(curr);\\n      }\\n    }\\n\\n    items.push(max);\\n\\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\\n      next = items[i + 1];\\n      prev = items[i - 1];\\n      curr = items[i]; // only add points that breaks the scale linearity\\n\\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\\n        table.push({\\n          time: curr,\\n          pos: i / (ilen - 1)\\n        });\\n      }\\n    }\\n\\n    return table;\\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\\n\\n\\n  function lookup(table, key, value) {\\n    var lo = 0;\\n    var hi = table.length - 1;\\n    var mid, i0, i1;\\n\\n    while (lo >= 0 && lo <= hi) {\\n      mid = lo + hi >> 1;\\n      i0 = table[mid - 1] || null;\\n      i1 = table[mid];\\n\\n      if (!i0) {\\n        // given value is outside table (before first item)\\n        return {\\n          lo: null,\\n          hi: i1\\n        };\\n      } else if (i1[key] < value) {\\n        lo = mid + 1;\\n      } else if (i0[key] > value) {\\n        hi = mid - 1;\\n      } else {\\n        return {\\n          lo: i0,\\n          hi: i1\\n        };\\n      }\\n    } // given value is outside table (after last item)\\n\\n\\n    return {\\n      lo: i1,\\n      hi: null\\n    };\\n  }\\n  /**\\n   * Linearly interpolates the given source `value` using the table items `skey` values and\\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\\n   */\\n\\n\\n  function interpolate$1(table, skey, sval, tkey) {\\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\\n\\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\\n    var span = next[skey] - prev[skey];\\n    var ratio = span ? (sval - prev[skey]) / span : 0;\\n    var offset = (next[tkey] - prev[tkey]) * ratio;\\n    return prev[tkey] + offset;\\n  }\\n\\n  function toTimestamp(scale, input) {\\n    var adapter = scale._adapter;\\n    var options = scale.options.time;\\n    var parser = options.parser;\\n    var format = parser || options.format;\\n    var value = input;\\n\\n    if (typeof parser === 'function') {\\n      value = parser(value);\\n    } // Only parse if its not a timestamp already\\n\\n\\n    if (!helpers$1.isFinite(value)) {\\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\\n    }\\n\\n    if (value !== null) {\\n      return +value;\\n    } // Labels are in an incompatible format and no `parser` has been provided.\\n    // The user might still use the deprecated `format` option for parsing.\\n\\n\\n    if (!parser && typeof format === 'function') {\\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\\n\\n      if (!helpers$1.isFinite(value)) {\\n        value = adapter.parse(value);\\n      }\\n    }\\n\\n    return value;\\n  }\\n\\n  function parse(scale, input) {\\n    if (helpers$1.isNullOrUndef(input)) {\\n      return null;\\n    }\\n\\n    var options = scale.options.time;\\n    var value = toTimestamp(scale, scale.getRightValue(input));\\n\\n    if (value === null) {\\n      return value;\\n    }\\n\\n    if (options.round) {\\n      value = +scale._adapter.startOf(value, options.round);\\n    }\\n\\n    return value;\\n  }\\n  /**\\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\\n   */\\n\\n\\n  function determineStepSize(min, max, unit, capacity) {\\n    var range = max - min;\\n    var interval = INTERVALS[unit];\\n    var milliseconds = interval.size;\\n    var steps = interval.steps;\\n    var i, ilen, factor;\\n\\n    if (!steps) {\\n      return Math.ceil(range / (capacity * milliseconds));\\n    }\\n\\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\\n      factor = steps[i];\\n\\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\\n        break;\\n      }\\n    }\\n\\n    return factor;\\n  }\\n  /**\\n   * Figures out what unit results in an appropriate number of auto-generated ticks\\n   */\\n\\n\\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\\n    var ilen = UNITS.length;\\n    var i, interval, factor;\\n\\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\\n      interval = INTERVALS[UNITS[i]];\\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\\n\\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\\n        return UNITS[i];\\n      }\\n    }\\n\\n    return UNITS[ilen - 1];\\n  }\\n  /**\\n   * Figures out what unit to format a set of ticks with\\n   */\\n\\n\\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\\n    var ilen = UNITS.length;\\n    var i, unit;\\n\\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\\n      unit = UNITS[i];\\n\\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\\n        return unit;\\n      }\\n    }\\n\\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\\n  }\\n\\n  function determineMajorUnit(unit) {\\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\\n      if (INTERVALS[UNITS[i]].common) {\\n        return UNITS[i];\\n      }\\n    }\\n  }\\n  /**\\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\\n   * Important: this method can return ticks outside the min and max range, it's the\\n   * responsibility of the calling code to clamp values if needed.\\n   */\\n\\n\\n  function generate(scale, min, max, capacity) {\\n    var adapter = scale._adapter;\\n    var options = scale.options;\\n    var timeOpts = options.time;\\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\\n    var major = determineMajorUnit(minor);\\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\\n    var majorTicksEnabled = options.ticks.major.enabled;\\n    var interval = INTERVALS[minor];\\n    var first = min;\\n    var last = max;\\n    var ticks = [];\\n    var time;\\n\\n    if (!stepSize) {\\n      stepSize = determineStepSize(min, max, minor, capacity);\\n    } // For 'week' unit, handle the first day of week option\\n\\n\\n    if (weekday) {\\n      first = +adapter.startOf(first, 'isoWeek', weekday);\\n      last = +adapter.startOf(last, 'isoWeek', weekday);\\n    } // Align first/last ticks on unit\\n\\n\\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\\n\\n    if (last < max) {\\n      last = +adapter.add(last, 1, minor);\\n    }\\n\\n    time = first;\\n\\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\\n      // we first aligned time on the previous `major` unit then add the number of full\\n      // stepSize there is between first and the previous major time.\\n      time = +adapter.startOf(time, major);\\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\\n    }\\n\\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\\n      ticks.push(+time);\\n    }\\n\\n    ticks.push(+time);\\n    return ticks;\\n  }\\n  /**\\n   * Returns the start and end offsets from edges in the form of {start, end}\\n   * where each value is a relative width to the scale and ranges between 0 and 1.\\n   * They add extra margins on the both sides by scaling down the original scale.\\n   * Offsets are added when the `offset` option is true.\\n   */\\n\\n\\n  function computeOffsets(table, ticks, min, max, options) {\\n    var start = 0;\\n    var end = 0;\\n    var first, last;\\n\\n    if (options.offset && ticks.length) {\\n      if (!options.time.min) {\\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\\n\\n        if (ticks.length === 1) {\\n          start = 1 - first;\\n        } else {\\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\\n        }\\n      }\\n\\n      if (!options.time.max) {\\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\\n\\n        if (ticks.length === 1) {\\n          end = last;\\n        } else {\\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\\n        }\\n      }\\n    }\\n\\n    return {\\n      start: start,\\n      end: end\\n    };\\n  }\\n\\n  function ticksFromTimestamps(scale, values, majorUnit) {\\n    var ticks = [];\\n    var i, ilen, value, major;\\n\\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\\n      value = values[i];\\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\\n      ticks.push({\\n        value: value,\\n        major: major\\n      });\\n    }\\n\\n    return ticks;\\n  }\\n\\n  var defaultConfig$4 = {\\n    position: 'bottom',\\n\\n    /**\\n     * Data distribution along the scale:\\n     * - 'linear': data are spread according to their time (distances can vary),\\n     * - 'series': data are spread at the same distance from each other.\\n     * @see https://github.com/chartjs/Chart.js/pull/4507\\n     * @since 2.7.0\\n     */\\n    distribution: 'linear',\\n\\n    /**\\n     * Scale boundary strategy (bypassed by min/max time options)\\n     * - `data`: make sure data are fully visible, ticks outside are removed\\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\\n     * @see https://github.com/chartjs/Chart.js/pull/4556\\n     * @since 2.7.0\\n     */\\n    bounds: 'data',\\n    adapters: {},\\n    time: {\\n      parser: false,\\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\\n      format: false,\\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\\n      unit: false,\\n      // false == automatic or override with week, month, year, etc.\\n      round: false,\\n      // none, or override with week, month, year, etc.\\n      displayFormat: false,\\n      // DEPRECATED\\n      isoWeekday: false,\\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\\n      minUnit: 'millisecond',\\n      displayFormats: {}\\n    },\\n    ticks: {\\n      autoSkip: false,\\n\\n      /**\\n       * Ticks generation input values:\\n       * - 'auto': generates \\\"optimal\\\" ticks based on scale size and time options.\\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\\n       * @see https://github.com/chartjs/Chart.js/pull/4507\\n       * @since 2.7.0\\n       */\\n      source: 'auto',\\n      major: {\\n        enabled: false\\n      }\\n    }\\n  };\\n  var scale_time = core_scale.extend({\\n    initialize: function initialize() {\\n      this.mergeTicksOptions();\\n      core_scale.prototype.initialize.call(this);\\n    },\\n    update: function update() {\\n      var me = this;\\n      var options = me.options;\\n      var time = options.time || (options.time = {});\\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\\n\\n      if (time.format) {\\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\\n      // supposed to contain *all* unit/string pairs but this can't be resolved\\n      // when loading the scale (adapters are loaded afterward), so let's populate\\n      // missing formats on update\\n\\n\\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\\n      return core_scale.prototype.update.apply(me, arguments);\\n    },\\n\\n    /**\\n     * Allows data to be referenced via 't' attribute\\n     */\\n    getRightValue: function getRightValue(rawValue) {\\n      if (rawValue && rawValue.t !== undefined) {\\n        rawValue = rawValue.t;\\n      }\\n\\n      return core_scale.prototype.getRightValue.call(this, rawValue);\\n    },\\n    determineDataLimits: function determineDataLimits() {\\n      var me = this;\\n      var chart = me.chart;\\n      var adapter = me._adapter;\\n      var timeOpts = me.options.time;\\n      var unit = timeOpts.unit || 'day';\\n      var min = MAX_INTEGER;\\n      var max = MIN_INTEGER;\\n      var timestamps = [];\\n      var datasets = [];\\n      var labels = [];\\n      var i, j, ilen, jlen, data, timestamp;\\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\\n\\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\\n        labels.push(parse(me, dataLabels[i]));\\n      } // Convert data to timestamps\\n\\n\\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\\n        if (chart.isDatasetVisible(i)) {\\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\\n\\n          if (helpers$1.isObject(data[0])) {\\n            datasets[i] = [];\\n\\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\\n              timestamp = parse(me, data[j]);\\n              timestamps.push(timestamp);\\n              datasets[i][j] = timestamp;\\n            }\\n          } else {\\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\\n              timestamps.push(labels[j]);\\n            }\\n\\n            datasets[i] = labels.slice(0);\\n          }\\n        } else {\\n          datasets[i] = [];\\n        }\\n      }\\n\\n      if (labels.length) {\\n        // Sort labels **after** data have been converted\\n        labels = arrayUnique(labels).sort(sorter);\\n        min = Math.min(min, labels[0]);\\n        max = Math.max(max, labels[labels.length - 1]);\\n      }\\n\\n      if (timestamps.length) {\\n        timestamps = arrayUnique(timestamps).sort(sorter);\\n        min = Math.min(min, timestamps[0]);\\n        max = Math.max(max, timestamps[timestamps.length - 1]);\\n      }\\n\\n      min = parse(me, timeOpts.min) || min;\\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\\n\\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\\n\\n      me.min = Math.min(min, max);\\n      me.max = Math.max(min + 1, max); // PRIVATE\\n\\n      me._horizontal = me.isHorizontal();\\n      me._table = [];\\n      me._timestamps = {\\n        data: timestamps,\\n        datasets: datasets,\\n        labels: labels\\n      };\\n    },\\n    buildTicks: function buildTicks() {\\n      var me = this;\\n      var min = me.min;\\n      var max = me.max;\\n      var options = me.options;\\n      var timeOpts = options.time;\\n      var timestamps = [];\\n      var ticks = [];\\n      var i, ilen, timestamp;\\n\\n      switch (options.ticks.source) {\\n        case 'data':\\n          timestamps = me._timestamps.data;\\n          break;\\n\\n        case 'labels':\\n          timestamps = me._timestamps.labels;\\n          break;\\n\\n        case 'auto':\\n        default:\\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\\n      }\\n\\n      if (options.bounds === 'ticks' && timestamps.length) {\\n        min = timestamps[0];\\n        max = timestamps[timestamps.length - 1];\\n      } // Enforce limits with user min/max options\\n\\n\\n      min = parse(me, timeOpts.min) || min;\\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\\n\\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\\n        timestamp = timestamps[i];\\n\\n        if (timestamp >= min && timestamp <= max) {\\n          ticks.push(timestamp);\\n        }\\n      }\\n\\n      me.min = min;\\n      me.max = max; // PRIVATE\\n\\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\\n      me._majorUnit = determineMajorUnit(me._unit);\\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\\n\\n      if (options.ticks.reverse) {\\n        ticks.reverse();\\n      }\\n\\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\\n    },\\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\\n      var me = this;\\n      var adapter = me._adapter;\\n      var data = me.chart.data;\\n      var timeOpts = me.options.time;\\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\\n      var value = data.datasets[datasetIndex].data[index];\\n\\n      if (helpers$1.isObject(value)) {\\n        label = me.getRightValue(value);\\n      }\\n\\n      if (timeOpts.tooltipFormat) {\\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\\n      }\\n\\n      if (typeof label === 'string') {\\n        return label;\\n      }\\n\\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\\n    },\\n\\n    /**\\n     * Function to format an individual tick mark\\n     * @private\\n     */\\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\\n      var me = this;\\n      var adapter = me._adapter;\\n      var options = me.options;\\n      var formats = options.time.displayFormats;\\n      var minorFormat = formats[me._unit];\\n      var majorUnit = me._majorUnit;\\n      var majorFormat = formats[majorUnit];\\n      var majorTime = +adapter.startOf(time, majorUnit);\\n      var majorTickOpts = options.ticks.major;\\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\\n      return formatter ? formatter(label, index, ticks) : label;\\n    },\\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\\n      var labels = [];\\n      var i, ilen;\\n\\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\\n      }\\n\\n      return labels;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    getPixelForOffset: function getPixelForOffset(time) {\\n      var me = this;\\n      var isReverse = me.options.ticks.reverse;\\n      var size = me._horizontal ? me.width : me.height;\\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\\n      return isReverse ? start - offset : start + offset;\\n    },\\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\\n      var me = this;\\n      var time = null;\\n\\n      if (index !== undefined && datasetIndex !== undefined) {\\n        time = me._timestamps.datasets[datasetIndex][index];\\n      }\\n\\n      if (time === null) {\\n        time = parse(me, value);\\n      }\\n\\n      if (time !== null) {\\n        return me.getPixelForOffset(time);\\n      }\\n    },\\n    getPixelForTick: function getPixelForTick(index) {\\n      var ticks = this.getTicks();\\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\\n    },\\n    getValueForPixel: function getValueForPixel(pixel) {\\n      var me = this;\\n      var size = me._horizontal ? me.width : me.height;\\n      var start = me._horizontal ? me.left : me.top;\\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\\n\\n      return me._adapter._create(time);\\n    },\\n\\n    /**\\n     * Crude approximation of what the label width might be\\n     * @private\\n     */\\n    getLabelWidth: function getLabelWidth(label) {\\n      var me = this;\\n      var ticksOpts = me.options.ticks;\\n      var tickLabelWidth = me.ctx.measureText(label).width;\\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\\n      var cosRotation = Math.cos(angle);\\n      var sinRotation = Math.sin(angle);\\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\\n      var me = this; // pick the longest format (milliseconds) for guestimation\\n\\n      var format = me.options.time.displayFormats.millisecond;\\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\\n      return capacity > 0 ? capacity : 1;\\n    }\\n  }); // INTERNAL: static default options, registered in src/index.js\\n\\n  var _defaults$4 = defaultConfig$4;\\n  scale_time._defaults = _defaults$4;\\n  var scales = {\\n    category: scale_category,\\n    linear: scale_linear,\\n    logarithmic: scale_logarithmic,\\n    radialLinear: scale_radialLinear,\\n    time: scale_time\\n  };\\n  var FORMATS = {\\n    datetime: 'MMM D, YYYY, h:mm:ss a',\\n    millisecond: 'h:mm:ss.SSS a',\\n    second: 'h:mm:ss a',\\n    minute: 'h:mm a',\\n    hour: 'hA',\\n    day: 'MMM D',\\n    week: 'll',\\n    month: 'MMM YYYY',\\n    quarter: '[Q]Q - YYYY',\\n    year: 'YYYY'\\n  };\\n\\n  core_adapters._date.override(typeof moment === 'function' ? {\\n    _id: 'moment',\\n    // DEBUG ONLY\\n    formats: function formats() {\\n      return FORMATS;\\n    },\\n    parse: function parse(value, format) {\\n      if (typeof value === 'string' && typeof format === 'string') {\\n        value = moment(value, format);\\n      } else if (!(value instanceof moment)) {\\n        value = moment(value);\\n      }\\n\\n      return value.isValid() ? value.valueOf() : null;\\n    },\\n    format: function format(time, _format) {\\n      return moment(time).format(_format);\\n    },\\n    add: function add(time, amount, unit) {\\n      return moment(time).add(amount, unit).valueOf();\\n    },\\n    diff: function diff(max, min, unit) {\\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\\n    },\\n    startOf: function startOf(time, unit, weekday) {\\n      time = moment(time);\\n\\n      if (unit === 'isoWeek') {\\n        return time.isoWeekday(weekday).valueOf();\\n      }\\n\\n      return time.startOf(unit).valueOf();\\n    },\\n    endOf: function endOf(time, unit) {\\n      return moment(time).endOf(unit).valueOf();\\n    },\\n    // DEPRECATIONS\\n\\n    /**\\n     * Provided for backward compatibility with scale.getValueForPixel().\\n     * @deprecated since version 2.8.0\\n     * @todo remove at version 3\\n     * @private\\n     */\\n    _create: function _create(time) {\\n      return moment(time);\\n    }\\n  } : {});\\n\\n  core_defaults._set('global', {\\n    plugins: {\\n      filler: {\\n        propagate: true\\n      }\\n    }\\n  });\\n\\n  var mappers = {\\n    dataset: function dataset(source) {\\n      var index = source.fill;\\n      var chart = source.chart;\\n      var meta = chart.getDatasetMeta(index);\\n      var visible = meta && chart.isDatasetVisible(index);\\n      var points = visible && meta.dataset._children || [];\\n      var length = points.length || 0;\\n      return !length ? null : function (point, i) {\\n        return i < length && points[i]._view || null;\\n      };\\n    },\\n    boundary: function boundary(source) {\\n      var boundary = source.boundary;\\n      var x = boundary ? boundary.x : null;\\n      var y = boundary ? boundary.y : null;\\n      return function (point) {\\n        return {\\n          x: x === null ? point.x : x,\\n          y: y === null ? point.y : y\\n        };\\n      };\\n    }\\n  }; // @todo if (fill[0] === '#')\\n\\n  function decodeFill(el, index, count) {\\n    var model = el._model || {};\\n    var fill = model.fill;\\n    var target;\\n\\n    if (fill === undefined) {\\n      fill = !!model.backgroundColor;\\n    }\\n\\n    if (fill === false || fill === null) {\\n      return false;\\n    }\\n\\n    if (fill === true) {\\n      return 'origin';\\n    }\\n\\n    target = parseFloat(fill, 10);\\n\\n    if (isFinite(target) && Math.floor(target) === target) {\\n      if (fill[0] === '-' || fill[0] === '+') {\\n        target = index + target;\\n      }\\n\\n      if (target === index || target < 0 || target >= count) {\\n        return false;\\n      }\\n\\n      return target;\\n    }\\n\\n    switch (fill) {\\n      // compatibility\\n      case 'bottom':\\n        return 'start';\\n\\n      case 'top':\\n        return 'end';\\n\\n      case 'zero':\\n        return 'origin';\\n      // supported boundaries\\n\\n      case 'origin':\\n      case 'start':\\n      case 'end':\\n        return fill;\\n      // invalid fill values\\n\\n      default:\\n        return false;\\n    }\\n  }\\n\\n  function computeBoundary(source) {\\n    var model = source.el._model || {};\\n    var scale = source.el._scale || {};\\n    var fill = source.fill;\\n    var target = null;\\n    var horizontal;\\n\\n    if (isFinite(fill)) {\\n      return null;\\n    } // Backward compatibility: until v3, we still need to support boundary values set on\\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\\n    // controllers might still use it (e.g. the Smith chart).\\n\\n\\n    if (fill === 'start') {\\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\\n    } else if (fill === 'end') {\\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\\n    } else if (model.scaleZero !== undefined) {\\n      target = model.scaleZero;\\n    } else if (scale.getBasePosition) {\\n      target = scale.getBasePosition();\\n    } else if (scale.getBasePixel) {\\n      target = scale.getBasePixel();\\n    }\\n\\n    if (target !== undefined && target !== null) {\\n      if (target.x !== undefined && target.y !== undefined) {\\n        return target;\\n      }\\n\\n      if (helpers$1.isFinite(target)) {\\n        horizontal = scale.isHorizontal();\\n        return {\\n          x: horizontal ? target : null,\\n          y: horizontal ? null : target\\n        };\\n      }\\n    }\\n\\n    return null;\\n  }\\n\\n  function resolveTarget(sources, index, propagate) {\\n    var source = sources[index];\\n    var fill = source.fill;\\n    var visited = [index];\\n    var target;\\n\\n    if (!propagate) {\\n      return fill;\\n    }\\n\\n    while (fill !== false && visited.indexOf(fill) === -1) {\\n      if (!isFinite(fill)) {\\n        return fill;\\n      }\\n\\n      target = sources[fill];\\n\\n      if (!target) {\\n        return false;\\n      }\\n\\n      if (target.visible) {\\n        return fill;\\n      }\\n\\n      visited.push(fill);\\n      fill = target.fill;\\n    }\\n\\n    return false;\\n  }\\n\\n  function createMapper(source) {\\n    var fill = source.fill;\\n    var type = 'dataset';\\n\\n    if (fill === false) {\\n      return null;\\n    }\\n\\n    if (!isFinite(fill)) {\\n      type = 'boundary';\\n    }\\n\\n    return mappers[type](source);\\n  }\\n\\n  function isDrawable(point) {\\n    return point && !point.skip;\\n  }\\n\\n  function drawArea(ctx, curve0, curve1, len0, len1) {\\n    var i;\\n\\n    if (!len0 || !len1) {\\n      return;\\n    } // building first area curve (normal)\\n\\n\\n    ctx.moveTo(curve0[0].x, curve0[0].y);\\n\\n    for (i = 1; i < len0; ++i) {\\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\\n    } // joining the two area curves\\n\\n\\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\\n\\n    for (i = len1 - 1; i > 0; --i) {\\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\\n    }\\n  }\\n\\n  function doFill(ctx, points, mapper, view, color, loop) {\\n    var count = points.length;\\n    var span = view.spanGaps;\\n    var curve0 = [];\\n    var curve1 = [];\\n    var len0 = 0;\\n    var len1 = 0;\\n    var i, ilen, index, p0, p1, d0, d1;\\n    ctx.beginPath();\\n\\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\\n      index = i % count;\\n      p0 = points[index]._view;\\n      p1 = mapper(p0, index, view);\\n      d0 = isDrawable(p0);\\n      d1 = isDrawable(p1);\\n\\n      if (d0 && d1) {\\n        len0 = curve0.push(p0);\\n        len1 = curve1.push(p1);\\n      } else if (len0 && len1) {\\n        if (!span) {\\n          drawArea(ctx, curve0, curve1, len0, len1);\\n          len0 = len1 = 0;\\n          curve0 = [];\\n          curve1 = [];\\n        } else {\\n          if (d0) {\\n            curve0.push(p0);\\n          }\\n\\n          if (d1) {\\n            curve1.push(p1);\\n          }\\n        }\\n      }\\n    }\\n\\n    drawArea(ctx, curve0, curve1, len0, len1);\\n    ctx.closePath();\\n    ctx.fillStyle = color;\\n    ctx.fill();\\n  }\\n\\n  var plugin_filler = {\\n    id: 'filler',\\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\\n      var count = (chart.data.datasets || []).length;\\n      var propagate = options.propagate;\\n      var sources = [];\\n      var meta, i, el, source;\\n\\n      for (i = 0; i < count; ++i) {\\n        meta = chart.getDatasetMeta(i);\\n        el = meta.dataset;\\n        source = null;\\n\\n        if (el && el._model && el instanceof elements.Line) {\\n          source = {\\n            visible: chart.isDatasetVisible(i),\\n            fill: decodeFill(el, i, count),\\n            chart: chart,\\n            el: el\\n          };\\n        }\\n\\n        meta.$filler = source;\\n        sources.push(source);\\n      }\\n\\n      for (i = 0; i < count; ++i) {\\n        source = sources[i];\\n\\n        if (!source) {\\n          continue;\\n        }\\n\\n        source.fill = resolveTarget(sources, i, propagate);\\n        source.boundary = computeBoundary(source);\\n        source.mapper = createMapper(source);\\n      }\\n    },\\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\\n      var meta = args.meta.$filler;\\n\\n      if (!meta) {\\n        return;\\n      }\\n\\n      var ctx = chart.ctx;\\n      var el = meta.el;\\n      var view = el._view;\\n      var points = el._children || [];\\n      var mapper = meta.mapper;\\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\\n\\n      if (mapper && color && points.length) {\\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\\n        doFill(ctx, points, mapper, view, color, el._loop);\\n        helpers$1.canvas.unclipArea(ctx);\\n      }\\n    }\\n  };\\n  var noop$1 = helpers$1.noop;\\n  var valueOrDefault$d = helpers$1.valueOrDefault;\\n\\n  core_defaults._set('global', {\\n    legend: {\\n      display: true,\\n      position: 'top',\\n      fullWidth: true,\\n      reverse: false,\\n      weight: 1000,\\n      // a callback that will handle\\n      onClick: function onClick(e, legendItem) {\\n        var index = legendItem.datasetIndex;\\n        var ci = this.chart;\\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\\n\\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\\n\\n        ci.update();\\n      },\\n      onHover: null,\\n      onLeave: null,\\n      labels: {\\n        boxWidth: 40,\\n        padding: 10,\\n        // Generates labels shown in the legend\\n        // Valid properties to return:\\n        // text : text to display\\n        // fillStyle : fill of coloured box\\n        // strokeStyle: stroke of coloured box\\n        // hidden : if this legend item refers to a hidden item\\n        // lineCap : cap style for line\\n        // lineDash\\n        // lineDashOffset :\\n        // lineJoin :\\n        // lineWidth :\\n        generateLabels: function generateLabels(chart) {\\n          var data = chart.data;\\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\\n            return {\\n              text: dataset.label,\\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\\n              hidden: !chart.isDatasetVisible(i),\\n              lineCap: dataset.borderCapStyle,\\n              lineDash: dataset.borderDash,\\n              lineDashOffset: dataset.borderDashOffset,\\n              lineJoin: dataset.borderJoinStyle,\\n              lineWidth: dataset.borderWidth,\\n              strokeStyle: dataset.borderColor,\\n              pointStyle: dataset.pointStyle,\\n              // Below is extra data used for toggling the datasets\\n              datasetIndex: i\\n            };\\n          }, this) : [];\\n        }\\n      }\\n    },\\n    legendCallback: function legendCallback(chart) {\\n      var text = [];\\n      text.push('<ul class=\\\"' + chart.id + '-legend\\\">');\\n\\n      for (var i = 0; i < chart.data.datasets.length; i++) {\\n        text.push('<li><span style=\\\"background-color:' + chart.data.datasets[i].backgroundColor + '\\\"></span>');\\n\\n        if (chart.data.datasets[i].label) {\\n          text.push(chart.data.datasets[i].label);\\n        }\\n\\n        text.push('</li>');\\n      }\\n\\n      text.push('</ul>');\\n      return text.join('');\\n    }\\n  });\\n  /**\\n   * Helper function to get the box width based on the usePointStyle option\\n   * @param {object} labelopts - the label options on the legend\\n   * @param {number} fontSize - the label font size\\n   * @return {number} width of the color box area\\n   */\\n\\n\\n  function getBoxWidth(labelOpts, fontSize) {\\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\\n  }\\n  /**\\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\\n   */\\n\\n\\n  var Legend = core_element.extend({\\n    initialize: function initialize(config) {\\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\\n\\n      this.legendHitBoxes = [];\\n      /**\\n      \\t * @private\\n      \\t */\\n\\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\\n\\n      this.doughnutMode = false;\\n    },\\n    // These methods are ordered by lifecycle. Utilities then follow.\\n    // Any function defined here is inherited by all legend types.\\n    // Any function can be extended by the legend type\\n    beforeUpdate: noop$1,\\n    update: function update(maxWidth, maxHeight, margins) {\\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\\n\\n      me.beforeUpdate(); // Absorb the master measurements\\n\\n      me.maxWidth = maxWidth;\\n      me.maxHeight = maxHeight;\\n      me.margins = margins; // Dimensions\\n\\n      me.beforeSetDimensions();\\n      me.setDimensions();\\n      me.afterSetDimensions(); // Labels\\n\\n      me.beforeBuildLabels();\\n      me.buildLabels();\\n      me.afterBuildLabels(); // Fit\\n\\n      me.beforeFit();\\n      me.fit();\\n      me.afterFit(); //\\n\\n      me.afterUpdate();\\n      return me.minSize;\\n    },\\n    afterUpdate: noop$1,\\n    //\\n    beforeSetDimensions: noop$1,\\n    setDimensions: function setDimensions() {\\n      var me = this; // Set the unconstrained dimension before label rotation\\n\\n      if (me.isHorizontal()) {\\n        // Reset position before calculating rotation\\n        me.width = me.maxWidth;\\n        me.left = 0;\\n        me.right = me.width;\\n      } else {\\n        me.height = me.maxHeight; // Reset position before calculating rotation\\n\\n        me.top = 0;\\n        me.bottom = me.height;\\n      } // Reset padding\\n\\n\\n      me.paddingLeft = 0;\\n      me.paddingTop = 0;\\n      me.paddingRight = 0;\\n      me.paddingBottom = 0; // Reset minSize\\n\\n      me.minSize = {\\n        width: 0,\\n        height: 0\\n      };\\n    },\\n    afterSetDimensions: noop$1,\\n    //\\n    beforeBuildLabels: noop$1,\\n    buildLabels: function buildLabels() {\\n      var me = this;\\n      var labelOpts = me.options.labels || {};\\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\\n\\n      if (labelOpts.filter) {\\n        legendItems = legendItems.filter(function (item) {\\n          return labelOpts.filter(item, me.chart.data);\\n        });\\n      }\\n\\n      if (me.options.reverse) {\\n        legendItems.reverse();\\n      }\\n\\n      me.legendItems = legendItems;\\n    },\\n    afterBuildLabels: noop$1,\\n    //\\n    beforeFit: noop$1,\\n    fit: function fit() {\\n      var me = this;\\n      var opts = me.options;\\n      var labelOpts = opts.labels;\\n      var display = opts.display;\\n      var ctx = me.ctx;\\n\\n      var labelFont = helpers$1.options._parseFont(labelOpts);\\n\\n      var fontSize = labelFont.size; // Reset hit boxes\\n\\n      var hitboxes = me.legendHitBoxes = [];\\n      var minSize = me.minSize;\\n      var isHorizontal = me.isHorizontal();\\n\\n      if (isHorizontal) {\\n        minSize.width = me.maxWidth; // fill all the width\\n\\n        minSize.height = display ? 10 : 0;\\n      } else {\\n        minSize.width = display ? 10 : 0;\\n        minSize.height = me.maxHeight; // fill all the height\\n      } // Increase sizes here\\n\\n\\n      if (display) {\\n        ctx.font = labelFont.string;\\n\\n        if (isHorizontal) {\\n          // Labels\\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\\n          var lineWidths = me.lineWidths = [0];\\n          var totalHeight = 0;\\n          ctx.textAlign = 'left';\\n          ctx.textBaseline = 'top';\\n          helpers$1.each(me.legendItems, function (legendItem, i) {\\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\\n\\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\\n              totalHeight += fontSize + labelOpts.padding;\\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\\n\\n\\n            hitboxes[i] = {\\n              left: 0,\\n              top: 0,\\n              width: width,\\n              height: fontSize\\n            };\\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\\n          });\\n          minSize.height += totalHeight;\\n        } else {\\n          var vPadding = labelOpts.padding;\\n          var columnWidths = me.columnWidths = [];\\n          var totalWidth = labelOpts.padding;\\n          var currentColWidth = 0;\\n          var currentColHeight = 0;\\n          var itemHeight = fontSize + vPadding;\\n          helpers$1.each(me.legendItems, function (legendItem, i) {\\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\\n\\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\\n              totalWidth += currentColWidth + labelOpts.padding;\\n              columnWidths.push(currentColWidth); // previous column width\\n\\n              currentColWidth = 0;\\n              currentColHeight = 0;\\n            } // Get max width\\n\\n\\n            currentColWidth = Math.max(currentColWidth, itemWidth);\\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\\n\\n            hitboxes[i] = {\\n              left: 0,\\n              top: 0,\\n              width: itemWidth,\\n              height: fontSize\\n            };\\n          });\\n          totalWidth += currentColWidth;\\n          columnWidths.push(currentColWidth);\\n          minSize.width += totalWidth;\\n        }\\n      }\\n\\n      me.width = minSize.width;\\n      me.height = minSize.height;\\n    },\\n    afterFit: noop$1,\\n    // Shared Methods\\n    isHorizontal: function isHorizontal() {\\n      return this.options.position === 'top' || this.options.position === 'bottom';\\n    },\\n    // Actually draw the legend on the canvas\\n    draw: function draw() {\\n      var me = this;\\n      var opts = me.options;\\n      var labelOpts = opts.labels;\\n      var globalDefaults = core_defaults.global;\\n      var defaultColor = globalDefaults.defaultColor;\\n      var lineDefault = globalDefaults.elements.line;\\n      var legendWidth = me.width;\\n      var lineWidths = me.lineWidths;\\n\\n      if (opts.display) {\\n        var ctx = me.ctx;\\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\\n\\n        var labelFont = helpers$1.options._parseFont(labelOpts);\\n\\n        var fontSize = labelFont.size;\\n        var cursor; // Canvas setup\\n\\n        ctx.textAlign = 'left';\\n        ctx.textBaseline = 'middle';\\n        ctx.lineWidth = 0.5;\\n        ctx.strokeStyle = fontColor; // for strikethrough effect\\n\\n        ctx.fillStyle = fontColor; // render in correct colour\\n\\n        ctx.font = labelFont.string;\\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\\n        var hitboxes = me.legendHitBoxes; // current position\\n\\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\\n          if (isNaN(boxWidth) || boxWidth <= 0) {\\n            return;\\n          } // Set the ctx for the box\\n\\n\\n          ctx.save();\\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\\n          ctx.lineWidth = lineWidth;\\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\\n\\n          if (ctx.setLineDash) {\\n            // IE 9 and 10 do not support line dash\\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\\n          }\\n\\n          if (opts.labels && opts.labels.usePointStyle) {\\n            // Recalculate x and y for drawPoint() because its expecting\\n            // x and y to be center of figure (instead of top left)\\n            var radius = boxWidth * Math.SQRT2 / 2;\\n            var centerX = x + boxWidth / 2;\\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\\n\\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\\n          } else {\\n            // Draw box as legend symbol\\n            if (lineWidth !== 0) {\\n              ctx.strokeRect(x, y, boxWidth, fontSize);\\n            }\\n\\n            ctx.fillRect(x, y, boxWidth, fontSize);\\n          }\\n\\n          ctx.restore();\\n        };\\n\\n        var fillText = function fillText(x, y, legendItem, textWidth) {\\n          var halfFontSize = fontSize / 2;\\n          var xLeft = boxWidth + halfFontSize + x;\\n          var yMiddle = y + halfFontSize;\\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\\n\\n          if (legendItem.hidden) {\\n            // Strikethrough the text if hidden\\n            ctx.beginPath();\\n            ctx.lineWidth = 2;\\n            ctx.moveTo(xLeft, yMiddle);\\n            ctx.lineTo(xLeft + textWidth, yMiddle);\\n            ctx.stroke();\\n          }\\n        }; // Horizontal\\n\\n\\n        var isHorizontal = me.isHorizontal();\\n\\n        if (isHorizontal) {\\n          cursor = {\\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\\n            y: me.top + labelOpts.padding,\\n            line: 0\\n          };\\n        } else {\\n          cursor = {\\n            x: me.left + labelOpts.padding,\\n            y: me.top + labelOpts.padding,\\n            line: 0\\n          };\\n        }\\n\\n        var itemHeight = fontSize + labelOpts.padding;\\n        helpers$1.each(me.legendItems, function (legendItem, i) {\\n          var textWidth = ctx.measureText(legendItem.text).width;\\n          var width = boxWidth + fontSize / 2 + textWidth;\\n          var x = cursor.x;\\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\\n          // instead of me.right and me.bottom because me.width and me.height\\n          // may have been changed since me.minSize was calculated\\n\\n          if (isHorizontal) {\\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\\n              y = cursor.y += itemHeight;\\n              cursor.line++;\\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\\n            }\\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\\n            y = cursor.y = me.top + labelOpts.padding;\\n            cursor.line++;\\n          }\\n\\n          drawLegendBox(x, y, legendItem);\\n          hitboxes[i].left = x;\\n          hitboxes[i].top = y; // Fill the actual label\\n\\n          fillText(x, y, legendItem, textWidth);\\n\\n          if (isHorizontal) {\\n            cursor.x += width + labelOpts.padding;\\n          } else {\\n            cursor.y += itemHeight;\\n          }\\n        });\\n      }\\n    },\\n\\n    /**\\n     * @private\\n     */\\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\\n      var me = this;\\n      var i, hitBox, lh;\\n\\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\\n        // See if we are touching one of the dataset boxes\\n        lh = me.legendHitBoxes;\\n\\n        for (i = 0; i < lh.length; ++i) {\\n          hitBox = lh[i];\\n\\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\\n            // Touching an element\\n            return me.legendItems[i];\\n          }\\n        }\\n      }\\n\\n      return null;\\n    },\\n\\n    /**\\n     * Handle an event\\n     * @private\\n     * @param {IEvent} event - The event to handle\\n     */\\n    handleEvent: function handleEvent(e) {\\n      var me = this;\\n      var opts = me.options;\\n      var type = e.type === 'mouseup' ? 'click' : e.type;\\n      var hoveredItem;\\n\\n      if (type === 'mousemove') {\\n        if (!opts.onHover && !opts.onLeave) {\\n          return;\\n        }\\n      } else if (type === 'click') {\\n        if (!opts.onClick) {\\n          return;\\n        }\\n      } else {\\n        return;\\n      } // Chart event already has relative position in it\\n\\n\\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\\n\\n      if (type === 'click') {\\n        if (hoveredItem && opts.onClick) {\\n          // use e.native for backwards compatibility\\n          opts.onClick.call(me, e.native, hoveredItem);\\n        }\\n      } else {\\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\\n          if (me._hoveredItem) {\\n            opts.onLeave.call(me, e.native, me._hoveredItem);\\n          }\\n\\n          me._hoveredItem = hoveredItem;\\n        }\\n\\n        if (opts.onHover && hoveredItem) {\\n          // use e.native for backwards compatibility\\n          opts.onHover.call(me, e.native, hoveredItem);\\n        }\\n      }\\n    }\\n  });\\n\\n  function createNewLegendAndAttach(chart, legendOpts) {\\n    var legend = new Legend({\\n      ctx: chart.ctx,\\n      options: legendOpts,\\n      chart: chart\\n    });\\n    core_layouts.configure(chart, legend, legendOpts);\\n    core_layouts.addBox(chart, legend);\\n    chart.legend = legend;\\n  }\\n\\n  var plugin_legend = {\\n    id: 'legend',\\n\\n    /**\\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\\n     * the plugin, which one will be re-exposed in the chart.js file.\\n     * https://github.com/chartjs/Chart.js/pull/2640\\n     * @private\\n     */\\n    _element: Legend,\\n    beforeInit: function beforeInit(chart) {\\n      var legendOpts = chart.options.legend;\\n\\n      if (legendOpts) {\\n        createNewLegendAndAttach(chart, legendOpts);\\n      }\\n    },\\n    beforeUpdate: function beforeUpdate(chart) {\\n      var legendOpts = chart.options.legend;\\n      var legend = chart.legend;\\n\\n      if (legendOpts) {\\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\\n\\n        if (legend) {\\n          core_layouts.configure(chart, legend, legendOpts);\\n          legend.options = legendOpts;\\n        } else {\\n          createNewLegendAndAttach(chart, legendOpts);\\n        }\\n      } else if (legend) {\\n        core_layouts.removeBox(chart, legend);\\n        delete chart.legend;\\n      }\\n    },\\n    afterEvent: function afterEvent(chart, e) {\\n      var legend = chart.legend;\\n\\n      if (legend) {\\n        legend.handleEvent(e);\\n      }\\n    }\\n  };\\n  var noop$2 = helpers$1.noop;\\n\\n  core_defaults._set('global', {\\n    title: {\\n      display: false,\\n      fontStyle: 'bold',\\n      fullWidth: true,\\n      padding: 10,\\n      position: 'top',\\n      text: '',\\n      weight: 2000 // by default greater than legend (1000) to be above\\n\\n    }\\n  });\\n  /**\\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\\n   */\\n\\n\\n  var Title = core_element.extend({\\n    initialize: function initialize(config) {\\n      var me = this;\\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\\n\\n      me.legendHitBoxes = [];\\n    },\\n    // These methods are ordered by lifecycle. Utilities then follow.\\n    beforeUpdate: noop$2,\\n    update: function update(maxWidth, maxHeight, margins) {\\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\\n\\n      me.beforeUpdate(); // Absorb the master measurements\\n\\n      me.maxWidth = maxWidth;\\n      me.maxHeight = maxHeight;\\n      me.margins = margins; // Dimensions\\n\\n      me.beforeSetDimensions();\\n      me.setDimensions();\\n      me.afterSetDimensions(); // Labels\\n\\n      me.beforeBuildLabels();\\n      me.buildLabels();\\n      me.afterBuildLabels(); // Fit\\n\\n      me.beforeFit();\\n      me.fit();\\n      me.afterFit(); //\\n\\n      me.afterUpdate();\\n      return me.minSize;\\n    },\\n    afterUpdate: noop$2,\\n    //\\n    beforeSetDimensions: noop$2,\\n    setDimensions: function setDimensions() {\\n      var me = this; // Set the unconstrained dimension before label rotation\\n\\n      if (me.isHorizontal()) {\\n        // Reset position before calculating rotation\\n        me.width = me.maxWidth;\\n        me.left = 0;\\n        me.right = me.width;\\n      } else {\\n        me.height = me.maxHeight; // Reset position before calculating rotation\\n\\n        me.top = 0;\\n        me.bottom = me.height;\\n      } // Reset padding\\n\\n\\n      me.paddingLeft = 0;\\n      me.paddingTop = 0;\\n      me.paddingRight = 0;\\n      me.paddingBottom = 0; // Reset minSize\\n\\n      me.minSize = {\\n        width: 0,\\n        height: 0\\n      };\\n    },\\n    afterSetDimensions: noop$2,\\n    //\\n    beforeBuildLabels: noop$2,\\n    buildLabels: noop$2,\\n    afterBuildLabels: noop$2,\\n    //\\n    beforeFit: noop$2,\\n    fit: function fit() {\\n      var me = this;\\n      var opts = me.options;\\n      var display = opts.display;\\n      var minSize = me.minSize;\\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\\n\\n      var fontOpts = helpers$1.options._parseFont(opts);\\n\\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\\n\\n      if (me.isHorizontal()) {\\n        minSize.width = me.maxWidth; // fill all the width\\n\\n        minSize.height = textSize;\\n      } else {\\n        minSize.width = textSize;\\n        minSize.height = me.maxHeight; // fill all the height\\n      }\\n\\n      me.width = minSize.width;\\n      me.height = minSize.height;\\n    },\\n    afterFit: noop$2,\\n    // Shared Methods\\n    isHorizontal: function isHorizontal() {\\n      var pos = this.options.position;\\n      return pos === 'top' || pos === 'bottom';\\n    },\\n    // Actually draw the title block on the canvas\\n    draw: function draw() {\\n      var me = this;\\n      var ctx = me.ctx;\\n      var opts = me.options;\\n\\n      if (opts.display) {\\n        var fontOpts = helpers$1.options._parseFont(opts);\\n\\n        var lineHeight = fontOpts.lineHeight;\\n        var offset = lineHeight / 2 + opts.padding;\\n        var rotation = 0;\\n        var top = me.top;\\n        var left = me.left;\\n        var bottom = me.bottom;\\n        var right = me.right;\\n        var maxWidth, titleX, titleY;\\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\\n\\n        ctx.font = fontOpts.string; // Horizontal\\n\\n        if (me.isHorizontal()) {\\n          titleX = left + (right - left) / 2; // midpoint of the width\\n\\n          titleY = top + offset;\\n          maxWidth = right - left;\\n        } else {\\n          titleX = opts.position === 'left' ? left + offset : right - offset;\\n          titleY = top + (bottom - top) / 2;\\n          maxWidth = bottom - top;\\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\\n        }\\n\\n        ctx.save();\\n        ctx.translate(titleX, titleY);\\n        ctx.rotate(rotation);\\n        ctx.textAlign = 'center';\\n        ctx.textBaseline = 'middle';\\n        var text = opts.text;\\n\\n        if (helpers$1.isArray(text)) {\\n          var y = 0;\\n\\n          for (var i = 0; i < text.length; ++i) {\\n            ctx.fillText(text[i], 0, y, maxWidth);\\n            y += lineHeight;\\n          }\\n        } else {\\n          ctx.fillText(text, 0, 0, maxWidth);\\n        }\\n\\n        ctx.restore();\\n      }\\n    }\\n  });\\n\\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\\n    var title = new Title({\\n      ctx: chart.ctx,\\n      options: titleOpts,\\n      chart: chart\\n    });\\n    core_layouts.configure(chart, title, titleOpts);\\n    core_layouts.addBox(chart, title);\\n    chart.titleBlock = title;\\n  }\\n\\n  var plugin_title = {\\n    id: 'title',\\n\\n    /**\\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\\n     * the plugin, which one will be re-exposed in the chart.js file.\\n     * https://github.com/chartjs/Chart.js/pull/2640\\n     * @private\\n     */\\n    _element: Title,\\n    beforeInit: function beforeInit(chart) {\\n      var titleOpts = chart.options.title;\\n\\n      if (titleOpts) {\\n        createNewTitleBlockAndAttach(chart, titleOpts);\\n      }\\n    },\\n    beforeUpdate: function beforeUpdate(chart) {\\n      var titleOpts = chart.options.title;\\n      var titleBlock = chart.titleBlock;\\n\\n      if (titleOpts) {\\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\\n\\n        if (titleBlock) {\\n          core_layouts.configure(chart, titleBlock, titleOpts);\\n          titleBlock.options = titleOpts;\\n        } else {\\n          createNewTitleBlockAndAttach(chart, titleOpts);\\n        }\\n      } else if (titleBlock) {\\n        core_layouts.removeBox(chart, titleBlock);\\n        delete chart.titleBlock;\\n      }\\n    }\\n  };\\n  var plugins = {};\\n  var filler = plugin_filler;\\n  var legend = plugin_legend;\\n  var title = plugin_title;\\n  plugins.filler = filler;\\n  plugins.legend = legend;\\n  plugins.title = title;\\n  /**\\n   * @namespace Chart\\n   */\\n\\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\\n\\n  core_helpers(core_controller);\\n  core_controller._adapters = core_adapters;\\n  core_controller.Animation = core_animation;\\n  core_controller.animationService = core_animations;\\n  core_controller.controllers = controllers;\\n  core_controller.DatasetController = core_datasetController;\\n  core_controller.defaults = core_defaults;\\n  core_controller.Element = core_element;\\n  core_controller.elements = elements;\\n  core_controller.Interaction = core_interaction;\\n  core_controller.layouts = core_layouts;\\n  core_controller.platform = platform;\\n  core_controller.plugins = core_plugins;\\n  core_controller.Scale = core_scale;\\n  core_controller.scaleService = core_scaleService;\\n  core_controller.Ticks = core_ticks;\\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\\n\\n  core_controller.helpers.each(scales, function (scale, type) {\\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\\n  }); // Load to register built-in adapters (as side effects)\\n  // Loading built-in plugins\\n\\n  for (var k in plugins) {\\n    if (plugins.hasOwnProperty(k)) {\\n      core_controller.plugins.register(plugins[k]);\\n    }\\n  }\\n\\n  core_controller.platform.initialize();\\n  var src = core_controller;\\n\\n  if (typeof window !== 'undefined') {\\n    window.Chart = core_controller;\\n  } // DEPRECATIONS\\n\\n  /**\\n   * Provided for backward compatibility, not available anymore\\n   * @namespace Chart.Chart\\n   * @deprecated since version 2.8.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n\\n  core_controller.Chart = core_controller;\\n  /**\\n   * Provided for backward compatibility, not available anymore\\n   * @namespace Chart.Legend\\n   * @deprecated since version 2.1.5\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  core_controller.Legend = plugins.legend._element;\\n  /**\\n   * Provided for backward compatibility, not available anymore\\n   * @namespace Chart.Title\\n   * @deprecated since version 2.1.5\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  core_controller.Title = plugins.title._element;\\n  /**\\n   * Provided for backward compatibility, use Chart.plugins instead\\n   * @namespace Chart.pluginService\\n   * @deprecated since version 2.1.5\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  core_controller.pluginService = core_controller.plugins;\\n  /**\\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\\n   * effect, instead simply create/register plugins via plain JavaScript objects.\\n   * @interface Chart.PluginBase\\n   * @deprecated since version 2.5.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  core_controller.PluginBase = core_controller.Element.extend({});\\n  /**\\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\\n   * @namespace Chart.canvasHelpers\\n   * @deprecated since version 2.6.0\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\\n  /**\\n   * Provided for backward compatibility, use Chart.layouts instead.\\n   * @namespace Chart.layoutService\\n   * @deprecated since version 2.7.3\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  core_controller.layoutService = core_controller.layouts;\\n  /**\\n   * Provided for backward compatibility, not available anymore.\\n   * @namespace Chart.LinearScaleBase\\n   * @deprecated since version 2.8\\n   * @todo remove at version 3\\n   * @private\\n   */\\n\\n  core_controller.LinearScaleBase = scale_linearbase;\\n  /**\\n   * Provided for backward compatibility, instead we should create a new Chart\\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\\n   * @deprecated since version 2.8.0\\n   * @todo remove at version 3\\n   */\\n\\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\\n    core_controller[klass] = function (ctx, cfg) {\\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\\n      }));\\n    };\\n  });\\n  return src;\\n});\",\"var baseIsEqual = require('./_baseIsEqual');\\n/**\\n * Performs a deep comparison between two values to determine if they are\\n * equivalent.\\n *\\n * **Note:** This method supports comparing arrays, array buffers, booleans,\\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\\n * by their own, not inherited, enumerable properties. Functions and DOM\\n * nodes are compared by strict equality, i.e. `===`.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n * @example\\n *\\n * var object = { 'a': 1 };\\n * var other = { 'a': 1 };\\n *\\n * _.isEqual(object, other);\\n * // => true\\n *\\n * object === other;\\n * // => false\\n */\\n\\n\\nfunction isEqual(value, other) {\\n  return baseIsEqual(value, other);\\n}\\n\\nmodule.exports = isEqual;\",\"var baseAssignValue = require('./_baseAssignValue'),\\n    createAggregator = require('./_createAggregator');\\n/**\\n * Creates an object composed of keys generated from the results of running\\n * each element of `collection` thru `iteratee`. The corresponding value of\\n * each key is the last element responsible for generating the key. The\\n * iteratee is invoked with one argument: (value).\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Collection\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\\n * @returns {Object} Returns the composed aggregate object.\\n * @example\\n *\\n * var array = [\\n *   { 'dir': 'left', 'code': 97 },\\n *   { 'dir': 'right', 'code': 100 }\\n * ];\\n *\\n * _.keyBy(array, function(o) {\\n *   return String.fromCharCode(o.code);\\n * });\\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\\n *\\n * _.keyBy(array, 'dir');\\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\\n */\\n\\n\\nvar keyBy = createAggregator(function (result, value, key) {\\n  baseAssignValue(result, key, value);\\n});\\nmodule.exports = keyBy;\",\"var arrayAggregator = require('./_arrayAggregator'),\\n    baseAggregator = require('./_baseAggregator'),\\n    baseIteratee = require('./_baseIteratee'),\\n    isArray = require('./isArray');\\n/**\\n * Creates a function like `_.groupBy`.\\n *\\n * @private\\n * @param {Function} setter The function to set accumulator values.\\n * @param {Function} [initializer] The accumulator object initializer.\\n * @returns {Function} Returns the new aggregator function.\\n */\\n\\n\\nfunction createAggregator(setter, initializer) {\\n  return function (collection, iteratee) {\\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\\n        accumulator = initializer ? initializer() : {};\\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\\n  };\\n}\\n\\nmodule.exports = createAggregator;\",\"/**\\n * A specialized version of `baseAggregator` for arrays.\\n *\\n * @private\\n * @param {Array} [array] The array to iterate over.\\n * @param {Function} setter The function to set `accumulator` values.\\n * @param {Function} iteratee The iteratee to transform keys.\\n * @param {Object} accumulator The initial aggregated object.\\n * @returns {Function} Returns `accumulator`.\\n */\\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\\n  var index = -1,\\n      length = array == null ? 0 : array.length;\\n\\n  while (++index < length) {\\n    var value = array[index];\\n    setter(accumulator, value, iteratee(value), array);\\n  }\\n\\n  return accumulator;\\n}\\n\\nmodule.exports = arrayAggregator;\",\"var baseEach = require('./_baseEach');\\n/**\\n * Aggregates elements of `collection` on `accumulator` with keys transformed\\n * by `iteratee` and values set by `setter`.\\n *\\n * @private\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} setter The function to set `accumulator` values.\\n * @param {Function} iteratee The iteratee to transform keys.\\n * @param {Object} accumulator The initial aggregated object.\\n * @returns {Function} Returns `accumulator`.\\n */\\n\\n\\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\\n  baseEach(collection, function (value, key, collection) {\\n    setter(accumulator, value, iteratee(value), collection);\\n  });\\n  return accumulator;\\n}\\n\\nmodule.exports = baseAggregator;\",\"var baseForOwn = require('./_baseForOwn'),\\n    createBaseEach = require('./_createBaseEach');\\n/**\\n * The base implementation of `_.forEach` without support for iteratee shorthands.\\n *\\n * @private\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {Array|Object} Returns `collection`.\\n */\\n\\n\\nvar baseEach = createBaseEach(baseForOwn);\\nmodule.exports = baseEach;\",\"var isArrayLike = require('./isArrayLike');\\n/**\\n * Creates a `baseEach` or `baseEachRight` function.\\n *\\n * @private\\n * @param {Function} eachFunc The function to iterate over a collection.\\n * @param {boolean} [fromRight] Specify iterating from right to left.\\n * @returns {Function} Returns the new base function.\\n */\\n\\n\\nfunction createBaseEach(eachFunc, fromRight) {\\n  return function (collection, iteratee) {\\n    if (collection == null) {\\n      return collection;\\n    }\\n\\n    if (!isArrayLike(collection)) {\\n      return eachFunc(collection, iteratee);\\n    }\\n\\n    var length = collection.length,\\n        index = fromRight ? length : -1,\\n        iterable = Object(collection);\\n\\n    while (fromRight ? index-- : ++index < length) {\\n      if (iteratee(iterable[index], index, iterable) === false) {\\n        break;\\n      }\\n    }\\n\\n    return collection;\\n  };\\n}\\n\\nmodule.exports = createBaseEach;\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{1111:function(t,e,n){\"use strict\";var i=n(11),a=n(25),r=n(0),o=n.n(r),s=n(1),l=n.n(s),u=n(4),d=n.n(u),c=n(9),h={tag:c.p,inverse:l.a.bool,color:l.a.string,body:l.a.bool,outline:l.a.bool,className:l.a.string,cssModule:l.a.object,innerRef:l.a.oneOfType([l.a.object,l.a.string,l.a.func])},f=function(t){var e=t.className,n=t.cssModule,r=t.color,s=t.body,l=t.inverse,u=t.outline,h=t.tag,f=t.innerRef,g=Object(a.a)(t,[\"className\",\"cssModule\",\"color\",\"body\",\"inverse\",\"outline\",\"tag\",\"innerRef\"]),p=Object(c.l)(d()(e,\"card\",!!l&&\"text-white\",!!s&&\"card-body\",!!r&&(u?\"border\":\"bg\")+\"-\"+r),n);return o.a.createElement(h,Object(i.a)({},g,{className:p,ref:f}))};f.propTypes=h,f.defaultProps={tag:\"div\"},e.a=f},1112:function(t,e,n){\"use strict\";var i=n(11),a=n(25),r=n(0),o=n.n(r),s=n(1),l=n.n(s),u=n(4),d=n.n(u),c=n(9),h={tag:c.p,className:l.a.string,cssModule:l.a.object,innerRef:l.a.oneOfType([l.a.object,l.a.string,l.a.func])},f=function(t){var e=t.className,n=t.cssModule,r=t.innerRef,s=t.tag,l=Object(a.a)(t,[\"className\",\"cssModule\",\"innerRef\",\"tag\"]),u=Object(c.l)(d()(e,\"card-body\"),n);return o.a.createElement(s,Object(i.a)({},l,{className:u,ref:r}))};f.propTypes=h,f.defaultProps={tag:\"div\"},e.a=f},1121:function(t,e,n){var i=n(138),a=n(222),r=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,o=/^\\w*$/;t.exports=function(t,e){if(i(t))return!1;var n=typeof t;return!(\"number\"!=n&&\"symbol\"!=n&&\"boolean\"!=n&&null!=t&&!a(t))||o.test(t)||!r.test(t)||null!=e&&t in Object(e)}},1127:function(t,e,n){var i=n(1138);t.exports=function(t,e,n){\"__proto__\"==e&&i?i(t,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[e]=n}},1132:function(t,e){t.exports=function(t){return t}},1133:function(t,e,n){var i=n(283);t.exports=function(t){return t===t&&!i(t)}},1134:function(t,e){t.exports=function(t,e){return function(n){return null!=n&&n[t]===e&&(void 0!==e||t in Object(n))}}},1135:function(t,e,n){var i=n(1136),a=n(420);t.exports=function(t,e){for(var n=0,r=(e=i(e,t)).length;null!=t&&n<r;)t=t[a(e[n++])];return n&&n==r?t:void 0}},1136:function(t,e,n){var i=n(138),a=n(1121),r=n(427),o=n(428);t.exports=function(t,e){return i(t)?t:a(t,e)?[t]:r(o(t))}},1138:function(t,e,n){var i=n(125),a=function(){try{var t=i(Object,\"defineProperty\");return t({},\"\",{}),t}catch(e){}}();t.exports=a},1139:function(t,e,n){var i=n(1143)();t.exports=i},1143:function(t,e){t.exports=function(t){return function(e,n,i){for(var a=-1,r=Object(e),o=i(e),s=o.length;s--;){var l=o[t?s:++a];if(!1===n(r[l],l,r))break}return e}}},1144:function(t,e,n){var i=n(1139),a=n(422);t.exports=function(t,e){return t&&i(t,e,a)}},1145:function(t,e,n){var i=n(1146),a=n(1149),r=n(1132),o=n(138),s=n(1154);t.exports=function(t){return\"function\"==typeof t?t:null==t?r:\"object\"==typeof t?o(t)?a(t[0],t[1]):i(t):s(t)}},1146:function(t,e,n){var i=n(1147),a=n(1148),r=n(1134);t.exports=function(t){var e=a(t);return 1==e.length&&e[0][2]?r(e[0][0],e[0][1]):function(n){return n===t||i(n,t,e)}}},1147:function(t,e,n){var i=n(424),a=n(421),r=1,o=2;t.exports=function(t,e,n,s){var l=n.length,u=l,d=!s;if(null==t)return!u;for(t=Object(t);l--;){var c=n[l];if(d&&c[2]?c[1]!==t[c[0]]:!(c[0]in t))return!1}for(;++l<u;){var h=(c=n[l])[0],f=t[h],g=c[1];if(d&&c[2]){if(void 0===f&&!(h in t))return!1}else{var p=new i;if(s)var v=s(f,g,h,t,e,p);if(!(void 0===v?a(g,f,r|o,s,p):v))return!1}}return!0}},1148:function(t,e,n){var i=n(1133),a=n(422);t.exports=function(t){for(var e=a(t),n=e.length;n--;){var r=e[n],o=t[r];e[n]=[r,o,i(o)]}return e}},1149:function(t,e,n){var i=n(421),a=n(1150),r=n(1151),o=n(1121),s=n(1133),l=n(1134),u=n(420),d=1,c=2;t.exports=function(t,e){return o(t)&&s(e)?l(u(t),e):function(n){var o=a(n,t);return void 0===o&&o===e?r(n,t):i(e,o,d|c)}}},1150:function(t,e,n){var i=n(1135);t.exports=function(t,e,n){var a=null==t?void 0:i(t,e);return void 0===a?n:a}},1151:function(t,e,n){var i=n(1152),a=n(1153);t.exports=function(t,e){return null!=t&&a(t,e,i)}},1152:function(t,e){t.exports=function(t,e){return null!=t&&e in Object(t)}},1153:function(t,e,n){var i=n(1136),a=n(425),r=n(138),o=n(426),s=n(286),l=n(420);t.exports=function(t,e,n){for(var u=-1,d=(e=i(e,t)).length,c=!1;++u<d;){var h=l(e[u]);if(!(c=null!=t&&n(t,h)))break;t=t[h]}return c||++u!=d?c:!!(d=null==t?0:t.length)&&s(d)&&o(h,d)&&(r(t)||a(t))}},1154:function(t,e,n){var i=n(1155),a=n(1156),r=n(1121),o=n(420);t.exports=function(t){return r(t)?i(o(t)):a(t)}},1155:function(t,e){t.exports=function(t){return function(e){return null==e?void 0:e[t]}}},1156:function(t,e,n){var i=n(1135);t.exports=function(t){return function(e){return i(e,t)}}},1165:function(t,e,n){\"use strict\";(function(t){n.d(e,\"b\",function(){return x}),n.d(e,\"d\",function(){return k}),n.d(e,\"c\",function(){return w}),n.d(e,\"a\",function(){return M}),n.d(e,\"f\",function(){return _}),n.d(e,\"e\",function(){return C});var i=n(0),a=n.n(i),r=n(1),o=n.n(r),s=n(1195),l=n.n(s),u=n(1287),d=n.n(u),c=n(1288),h=n.n(c),f=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t};function g(t,e){var n={};for(var i in t)e.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i]);return n}function p(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function v(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!==typeof e&&\"function\"!==typeof e?t:e}function m(t,e){if(\"function\"!==typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var b=\"undefined\"!==typeof t&&Object({NODE_ENV:\"production\",PUBLIC_URL:\"/kbli-react\"})&&\"production\",y=function(t){function e(){var n,i;p(this,e);for(var a=arguments.length,r=Array(a),o=0;o<a;o++)r[o]=arguments[o];return n=i=v(this,t.call.apply(t,[this].concat(r))),i.handleOnClick=function(t){var e=i.chartInstance,n=i.props,a=n.getDatasetAtEvent,r=n.getElementAtEvent,o=n.getElementsAtEvent,s=n.onElementsClick;a&&a(e.getDatasetAtEvent(t),t),r&&r(e.getElementAtEvent(t),t),o&&o(e.getElementsAtEvent(t),t),s&&s(e.getElementsAtEvent(t),t)},i.ref=function(t){i.element=t},v(i,n)}return m(e,t),e.prototype.componentWillMount=function(){this.chartInstance=void 0},e.prototype.componentDidMount=function(){this.renderChart()},e.prototype.componentDidUpdate=function(){if(this.props.redraw)return this.destroyChart(),void this.renderChart();this.updateChart()},e.prototype.shouldComponentUpdate=function(t){var e=this.props,n=(e.redraw,e.type),i=e.options,a=e.plugins,r=e.legend,o=e.height,s=e.width;if(!0===t.redraw)return!0;if(o!==t.height||s!==t.width)return!0;if(n!==t.type)return!0;if(!d()(r,t.legend))return!0;if(!d()(i,t.options))return!0;var l=this.transformDataProp(t);return!d()(this.shadowDataProp,l)||!d()(a,t.plugins)},e.prototype.componentWillUnmount=function(){this.destroyChart()},e.prototype.transformDataProp=function(t){var e=t.data;return\"function\"==typeof e?e(this.element):e},e.prototype.memoizeDataProps=function(){if(this.props.data){var t=this.transformDataProp(this.props);return this.shadowDataProp=f({},t,{datasets:t.datasets&&t.datasets.map(function(t){return f({},t)})}),this.saveCurrentDatasets(),t}},e.prototype.checkDatasets=function(t){var n=\"production\"!==b&&\"prod\"!==b,i=this.props.datasetKeyProvider!==e.getLabelAsKey,a=t.length>1;if(n&&a&&!i){var r=!1;t.forEach(function(t){t.label||(r=!0)}),r&&console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.')}},e.prototype.getCurrentDatasets=function(){return this.chartInstance&&this.chartInstance.config.data&&this.chartInstance.config.data.datasets||[]},e.prototype.saveCurrentDatasets=function(){var t=this;this.datasets=this.datasets||{},this.getCurrentDatasets().forEach(function(e){t.datasets[t.props.datasetKeyProvider(e)]=e})},e.prototype.updateChart=function(){var t=this,e=this.props.options,n=this.memoizeDataProps(this.props);if(this.chartInstance){e&&(this.chartInstance.options=l.a.helpers.configMerge(this.chartInstance.options,e));var i=this.getCurrentDatasets(),a=n.datasets||[];this.checkDatasets(i);var r=h()(i,this.props.datasetKeyProvider);this.chartInstance.config.data.datasets=a.map(function(e){var n=r[t.props.datasetKeyProvider(e)];if(n&&n.type===e.type){n.data.splice(e.data.length),e.data.forEach(function(t,i){n.data[i]=e.data[i]});e.data;var i=g(e,[\"data\"]);return f({},n,i)}return e});n.datasets;var o=g(n,[\"datasets\"]);this.chartInstance.config.data=f({},this.chartInstance.config.data,o),this.chartInstance.update()}},e.prototype.renderChart=function(){var t=this.props,n=t.options,i=t.legend,a=t.type,r=t.plugins,o=this.element,s=this.memoizeDataProps();\"undefined\"===typeof i||d()(e.defaultProps.legend,i)||(n.legend=i),this.chartInstance=new l.a(o,{type:a,data:s,options:n,plugins:r})},e.prototype.destroyChart=function(){this.saveCurrentDatasets();var t=Object.values(this.datasets);this.chartInstance.config.data.datasets=t,this.chartInstance.destroy()},e.prototype.render=function(){var t=this.props,e=t.height,n=t.width,i=t.id;return a.a.createElement(\"canvas\",{ref:this.ref,height:e,width:n,id:i,onClick:this.handleOnClick})},e}(a.a.Component);y.getLabelAsKey=function(t){return t.label},y.propTypes={data:o.a.oneOfType([o.a.object,o.a.func]).isRequired,getDatasetAtEvent:o.a.func,getElementAtEvent:o.a.func,getElementsAtEvent:o.a.func,height:o.a.number,legend:o.a.object,onElementsClick:o.a.func,options:o.a.object,plugins:o.a.arrayOf(o.a.object),redraw:o.a.bool,type:function(t,e,n){if(!l.a.controllers[t[e]])return new Error(\"Invalid chart type `\"+t[e]+\"` supplied to `\"+n+\"`.\")},width:o.a.number,datasetKeyProvider:o.a.func},y.defaultProps={legend:{display:!0,position:\"bottom\"},type:\"doughnut\",height:150,width:300,redraw:!1,options:{},datasetKeyProvider:y.getLabelAsKey};var x=function(t){function e(){return p(this,e),v(this,t.apply(this,arguments))}return m(e,t),e.prototype.render=function(){var t=this;return a.a.createElement(y,f({},this.props,{ref:function(e){return t.chartInstance=e&&e.chartInstance},type:\"doughnut\"}))},e}(a.a.Component),k=function(t){function e(){return p(this,e),v(this,t.apply(this,arguments))}return m(e,t),e.prototype.render=function(){var t=this;return a.a.createElement(y,f({},this.props,{ref:function(e){return t.chartInstance=e&&e.chartInstance},type:\"pie\"}))},e}(a.a.Component),w=function(t){function e(){return p(this,e),v(this,t.apply(this,arguments))}return m(e,t),e.prototype.render=function(){var t=this;return a.a.createElement(y,f({},this.props,{ref:function(e){return t.chartInstance=e&&e.chartInstance},type:\"line\"}))},e}(a.a.Component),M=function(t){function e(){return p(this,e),v(this,t.apply(this,arguments))}return m(e,t),e.prototype.render=function(){var t=this;return a.a.createElement(y,f({},this.props,{ref:function(e){return t.chartInstance=e&&e.chartInstance},type:\"bar\"}))},e}(a.a.Component),_=(function(t){function e(){return p(this,e),v(this,t.apply(this,arguments))}m(e,t),e.prototype.render=function(){var t=this;return a.a.createElement(y,f({},this.props,{ref:function(e){return t.chartInstance=e&&e.chartInstance},type:\"horizontalBar\"}))}}(a.a.Component),function(t){function e(){return p(this,e),v(this,t.apply(this,arguments))}return m(e,t),e.prototype.render=function(){var t=this;return a.a.createElement(y,f({},this.props,{ref:function(e){return t.chartInstance=e&&e.chartInstance},type:\"radar\"}))},e}(a.a.Component)),C=function(t){function e(){return p(this,e),v(this,t.apply(this,arguments))}return m(e,t),e.prototype.render=function(){var t=this;return a.a.createElement(y,f({},this.props,{ref:function(e){return t.chartInstance=e&&e.chartInstance},type:\"polarArea\"}))},e}(a.a.Component);(function(t){function e(){return p(this,e),v(this,t.apply(this,arguments))}m(e,t),e.prototype.render=function(){var t=this;return a.a.createElement(y,f({},this.props,{ref:function(e){return t.chartInstance=e&&e.chartInstance},type:\"bubble\"}))}})(a.a.Component),function(t){function e(){return p(this,e),v(this,t.apply(this,arguments))}m(e,t),e.prototype.render=function(){var t=this;return a.a.createElement(y,f({},this.props,{ref:function(e){return t.chartInstance=e&&e.chartInstance},type:\"scatter\"}))}}(a.a.Component),l.a.defaults}).call(this,n(173))},1195:function(t,e,n){t.exports=function(t){\"use strict\";t=t&&t.hasOwnProperty(\"default\")?t.default:t;var e={rgb2hsl:n,rgb2hsv:i,rgb2hwb:a,rgb2cmyk:o,rgb2keyword:s,rgb2xyz:l,rgb2lab:u,rgb2lch:function(t){return y(u(t))},hsl2rgb:d,hsl2hsv:function(t){var e=t[0],n=t[1]/100,i=t[2]/100;return 0===i?[0,0,0]:[e,2*(n*=(i*=2)<=1?i:2-i)/(i+n)*100,(i+n)/2*100]},hsl2hwb:function(t){return a(d(t))},hsl2cmyk:function(t){return o(d(t))},hsl2keyword:function(t){return s(d(t))},hsv2rgb:c,hsv2hsl:function(t){var e,n,i=t[0],a=t[1]/100,r=t[2]/100;return e=a*r,[i,100*(e=(e/=(n=(2-a)*r)<=1?n:2-n)||0),100*(n/=2)]},hsv2hwb:function(t){return a(c(t))},hsv2cmyk:function(t){return o(c(t))},hsv2keyword:function(t){return s(c(t))},hwb2rgb:h,hwb2hsl:function(t){return n(h(t))},hwb2hsv:function(t){return i(h(t))},hwb2cmyk:function(t){return o(h(t))},hwb2keyword:function(t){return s(h(t))},cmyk2rgb:f,cmyk2hsl:function(t){return n(f(t))},cmyk2hsv:function(t){return i(f(t))},cmyk2hwb:function(t){return a(f(t))},cmyk2keyword:function(t){return s(f(t))},keyword2rgb:w,keyword2hsl:function(t){return n(w(t))},keyword2hsv:function(t){return i(w(t))},keyword2hwb:function(t){return a(w(t))},keyword2cmyk:function(t){return o(w(t))},keyword2lab:function(t){return u(w(t))},keyword2xyz:function(t){return l(w(t))},xyz2rgb:p,xyz2lab:v,xyz2lch:function(t){return y(v(t))},lab2xyz:m,lab2rgb:x,lab2lch:y,lch2lab:k,lch2xyz:function(t){return m(k(t))},lch2rgb:function(t){return x(k(t))}};function n(t){var e,n,i=t[0]/255,a=t[1]/255,r=t[2]/255,o=Math.min(i,a,r),s=Math.max(i,a,r),l=s-o;return s==o?e=0:i==s?e=(a-r)/l:a==s?e=2+(r-i)/l:r==s&&(e=4+(i-a)/l),(e=Math.min(60*e,360))<0&&(e+=360),n=(o+s)/2,[e,100*(s==o?0:n<=.5?l/(s+o):l/(2-s-o)),100*n]}function i(t){var e,n,i=t[0],a=t[1],r=t[2],o=Math.min(i,a,r),s=Math.max(i,a,r),l=s-o;return n=0==s?0:l/s*1e3/10,s==o?e=0:i==s?e=(a-r)/l:a==s?e=2+(r-i)/l:r==s&&(e=4+(i-a)/l),(e=Math.min(60*e,360))<0&&(e+=360),[e,n,s/255*1e3/10]}function a(t){var e=t[0],i=t[1],a=t[2],r=n(t)[0],o=1/255*Math.min(e,Math.min(i,a)),a=1-1/255*Math.max(e,Math.max(i,a));return[r,100*o,100*a]}function o(t){var e,n=t[0]/255,i=t[1]/255,a=t[2]/255;return e=Math.min(1-n,1-i,1-a),[100*((1-n-e)/(1-e)||0),100*((1-i-e)/(1-e)||0),100*((1-a-e)/(1-e)||0),100*e]}function s(t){return _[JSON.stringify(t)]}function l(t){var e=t[0]/255,n=t[1]/255,i=t[2]/255;e=e>.04045?Math.pow((e+.055)/1.055,2.4):e/12.92,n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92,i=i>.04045?Math.pow((i+.055)/1.055,2.4):i/12.92;var a=.4124*e+.3576*n+.1805*i,r=.2126*e+.7152*n+.0722*i,o=.0193*e+.1192*n+.9505*i;return[100*a,100*r,100*o]}function u(t){var e=l(t),n=e[0],i=e[1],a=e[2];return i/=100,a/=108.883,n=(n/=95.047)>.008856?Math.pow(n,1/3):7.787*n+16/116,i=i>.008856?Math.pow(i,1/3):7.787*i+16/116,a=a>.008856?Math.pow(a,1/3):7.787*a+16/116,[116*i-16,500*(n-i),200*(i-a)]}function d(t){var e,n,i,a,r,o=t[0]/360,s=t[1]/100,l=t[2]/100;if(0==s)return[r=255*l,r,r];e=2*l-(n=l<.5?l*(1+s):l+s-l*s),a=[0,0,0];for(var u=0;u<3;u++)(i=o+1/3*-(u-1))<0&&i++,i>1&&i--,r=6*i<1?e+6*(n-e)*i:2*i<1?n:3*i<2?e+(n-e)*(2/3-i)*6:e,a[u]=255*r;return a}function c(t){var e=t[0]/60,n=t[1]/100,i=t[2]/100,a=Math.floor(e)%6,r=e-Math.floor(e),o=255*i*(1-n),s=255*i*(1-n*r),l=255*i*(1-n*(1-r)),i=255*i;switch(a){case 0:return[i,l,o];case 1:return[s,i,o];case 2:return[o,i,l];case 3:return[o,s,i];case 4:return[l,o,i];case 5:return[i,o,s]}}function h(t){var e,n,i,a,o=t[0]/360,s=t[1]/100,l=t[2]/100,u=s+l;switch(u>1&&(s/=u,l/=u),e=Math.floor(6*o),i=6*o-e,0!=(1&e)&&(i=1-i),a=s+i*((n=1-l)-s),e){default:case 6:case 0:r=n,g=a,b=s;break;case 1:r=a,g=n,b=s;break;case 2:r=s,g=n,b=a;break;case 3:r=s,g=a,b=n;break;case 4:r=a,g=s,b=n;break;case 5:r=n,g=s,b=a}return[255*r,255*g,255*b]}function f(t){var e,n,i,a=t[0]/100,r=t[1]/100,o=t[2]/100,s=t[3]/100;return e=1-Math.min(1,a*(1-s)+s),n=1-Math.min(1,r*(1-s)+s),i=1-Math.min(1,o*(1-s)+s),[255*e,255*n,255*i]}function p(t){var e,n,i,a=t[0]/100,r=t[1]/100,o=t[2]/100;return n=-.9689*a+1.8758*r+.0415*o,i=.0557*a+-.204*r+1.057*o,e=(e=3.2406*a+-1.5372*r+-.4986*o)>.0031308?1.055*Math.pow(e,1/2.4)-.055:e*=12.92,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:n*=12.92,i=i>.0031308?1.055*Math.pow(i,1/2.4)-.055:i*=12.92,e=Math.min(Math.max(0,e),1),n=Math.min(Math.max(0,n),1),i=Math.min(Math.max(0,i),1),[255*e,255*n,255*i]}function v(t){var e=t[0],n=t[1],i=t[2];return n/=100,i/=108.883,e=(e/=95.047)>.008856?Math.pow(e,1/3):7.787*e+16/116,n=n>.008856?Math.pow(n,1/3):7.787*n+16/116,i=i>.008856?Math.pow(i,1/3):7.787*i+16/116,[116*n-16,500*(e-n),200*(n-i)]}function m(t){var e,n,i,a,r=t[0],o=t[1],s=t[2];return r<=8?a=(n=100*r/903.3)/100*7.787+16/116:(n=100*Math.pow((r+16)/116,3),a=Math.pow(n/100,1/3)),e=e/95.047<=.008856?e=95.047*(o/500+a-16/116)/7.787:95.047*Math.pow(o/500+a,3),i=i/108.883<=.008859?i=108.883*(a-s/200-16/116)/7.787:108.883*Math.pow(a-s/200,3),[e,n,i]}function y(t){var e,n,i,a=t[0],r=t[1],o=t[2];return e=Math.atan2(o,r),(n=360*e/2/Math.PI)<0&&(n+=360),i=Math.sqrt(r*r+o*o),[a,i,n]}function x(t){return p(m(t))}function k(t){var e,n,i,a=t[0],r=t[1],o=t[2];return i=o/360*2*Math.PI,e=r*Math.cos(i),n=r*Math.sin(i),[a,e,n]}function w(t){return M[t]}var M={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},_={};for(var C in M)_[JSON.stringify(M[C])]=C;var S=function(){return new T};for(var P in e){S[P+\"Raw\"]=function(t){return function(n){return\"number\"==typeof n&&(n=Array.prototype.slice.call(arguments)),e[t](n)}}(P);var I=/(\\w+)2(\\w+)/.exec(P),A=I[1],D=I[2];(S[A]=S[A]||{})[D]=S[P]=function(t){return function(n){\"number\"==typeof n&&(n=Array.prototype.slice.call(arguments));var i=e[t](n);if(\"string\"==typeof i||void 0===i)return i;for(var a=0;a<i.length;a++)i[a]=Math.round(i[a]);return i}}(P)}var T=function(){this.convs={}};T.prototype.routeSpace=function(t,e){var n=e[0];return void 0===n?this.getValues(t):(\"number\"==typeof n&&(n=Array.prototype.slice.call(e)),this.setValues(t,n))},T.prototype.setValues=function(t,e){return this.space=t,this.convs={},this.convs[t]=e,this},T.prototype.getValues=function(t){var e=this.convs[t];if(!e){var n=this.space,i=this.convs[n];e=S[n][t](i),this.convs[t]=e}return e},[\"rgb\",\"hsl\",\"hsv\",\"cmyk\",\"keyword\"].forEach(function(t){T.prototype[t]=function(e){return this.routeSpace(t,arguments)}});var F=S,O={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},L={getRgba:R,getHsla:z,getRgb:function(t){var e=R(t);return e&&e.slice(0,3)},getHsl:function(t){var e=z(t);return e&&e.slice(0,3)},getHwb:N,getAlpha:function(t){var e=R(t);return e?e[3]:(e=z(t))?e[3]:(e=N(t))?e[3]:void 0},hexString:function(t,e){var e=void 0!==e&&3===t.length?e:t[3];return\"#\"+H(t[0])+H(t[1])+H(t[2])+(e>=0&&e<1?H(Math.round(255*e)):\"\")},rgbString:function(t,e){return e<1||t[3]&&t[3]<1?B(t,e):\"rgb(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\")\"},rgbaString:B,percentString:function(t,e){if(e<1||t[3]&&t[3]<1)return W(t,e);var n=Math.round(t[0]/255*100),i=Math.round(t[1]/255*100),a=Math.round(t[2]/255*100);return\"rgb(\"+n+\"%, \"+i+\"%, \"+a+\"%)\"},percentaString:W,hslString:function(t,e){return e<1||t[3]&&t[3]<1?E(t,e):\"hsl(\"+t[0]+\", \"+t[1]+\"%, \"+t[2]+\"%)\"},hslaString:E,hwbString:function(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),\"hwb(\"+t[0]+\", \"+t[1]+\"%, \"+t[2]+\"%\"+(void 0!==e&&1!==e?\", \"+e:\"\")+\")\"},keyword:function(t){return j[t.slice(0,3)]}};function R(t){if(t){var e=[0,0,0],n=1,i=t.match(/^#([a-fA-F0-9]{3,4})$/i),a=\"\";if(i){i=i[1],a=i[3];for(var r=0;r<e.length;r++)e[r]=parseInt(i[r]+i[r],16);a&&(n=Math.round(parseInt(a+a,16)/255*100)/100)}else if(i=t.match(/^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i)){a=i[2],i=i[1];for(var r=0;r<e.length;r++)e[r]=parseInt(i.slice(2*r,2*r+2),16);a&&(n=Math.round(parseInt(a,16)/255*100)/100)}else if(i=t.match(/^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i)){for(var r=0;r<e.length;r++)e[r]=parseInt(i[r+1]);n=parseFloat(i[4])}else if(i=t.match(/^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i)){for(var r=0;r<e.length;r++)e[r]=Math.round(2.55*parseFloat(i[r+1]));n=parseFloat(i[4])}else if(i=t.match(/(\\w+)/)){if(\"transparent\"==i[1])return[0,0,0,0];if(!(e=O[i[1]]))return}for(var r=0;r<e.length;r++)e[r]=V(e[r],0,255);return n=n||0==n?V(n,0,1):1,e[3]=n,e}}function z(t){if(t){var e=t.match(/^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/);if(e){var n=parseFloat(e[4]),i=V(parseInt(e[1]),0,360),a=V(parseFloat(e[2]),0,100),r=V(parseFloat(e[3]),0,100),o=V(isNaN(n)?1:n,0,1);return[i,a,r,o]}}}function N(t){if(t){var e=t.match(/^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/);if(e){var n=parseFloat(e[4]),i=V(parseInt(e[1]),0,360),a=V(parseFloat(e[2]),0,100),r=V(parseFloat(e[3]),0,100),o=V(isNaN(n)?1:n,0,1);return[i,a,r,o]}}}function B(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),\"rgba(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+e+\")\"}function W(t,e){var n=Math.round(t[0]/255*100),i=Math.round(t[1]/255*100),a=Math.round(t[2]/255*100);return\"rgba(\"+n+\"%, \"+i+\"%, \"+a+\"%, \"+(e||t[3]||1)+\")\"}function E(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),\"hsla(\"+t[0]+\", \"+t[1]+\"%, \"+t[2]+\"%, \"+e+\")\"}function V(t,e,n){return Math.min(Math.max(e,t),n)}function H(t){var e=t.toString(16).toUpperCase();return e.length<2?\"0\"+e:e}var j={};for(var q in O)j[O[q]]=q;var U=function t(e){return e instanceof t?e:this instanceof t?(this.valid=!1,this.values={rgb:[0,0,0],hsl:[0,0,0],hsv:[0,0,0],hwb:[0,0,0],cmyk:[0,0,0,0],alpha:1},void(\"string\"===typeof e?(n=L.getRgba(e))?this.setValues(\"rgb\",n):(n=L.getHsla(e))?this.setValues(\"hsl\",n):(n=L.getHwb(e))&&this.setValues(\"hwb\",n):\"object\"===typeof e&&(void 0!==(n=e).r||void 0!==n.red?this.setValues(\"rgb\",n):void 0!==n.l||void 0!==n.lightness?this.setValues(\"hsl\",n):void 0!==n.v||void 0!==n.value?this.setValues(\"hsv\",n):void 0!==n.w||void 0!==n.whiteness?this.setValues(\"hwb\",n):void 0===n.c&&void 0===n.cyan||this.setValues(\"cmyk\",n)))):new t(e);var n};(U.prototype={isValid:function(){return this.valid},rgb:function(){return this.setSpace(\"rgb\",arguments)},hsl:function(){return this.setSpace(\"hsl\",arguments)},hsv:function(){return this.setSpace(\"hsv\",arguments)},hwb:function(){return this.setSpace(\"hwb\",arguments)},cmyk:function(){return this.setSpace(\"cmyk\",arguments)},rgbArray:function(){return this.values.rgb},hslArray:function(){return this.values.hsl},hsvArray:function(){return this.values.hsv},hwbArray:function(){var t=this.values;return 1!==t.alpha?t.hwb.concat([t.alpha]):t.hwb},cmykArray:function(){return this.values.cmyk},rgbaArray:function(){var t=this.values;return t.rgb.concat([t.alpha])},hslaArray:function(){var t=this.values;return t.hsl.concat([t.alpha])},alpha:function(t){return void 0===t?this.values.alpha:(this.setValues(\"alpha\",t),this)},red:function(t){return this.setChannel(\"rgb\",0,t)},green:function(t){return this.setChannel(\"rgb\",1,t)},blue:function(t){return this.setChannel(\"rgb\",2,t)},hue:function(t){return t&&(t=(t%=360)<0?360+t:t),this.setChannel(\"hsl\",0,t)},saturation:function(t){return this.setChannel(\"hsl\",1,t)},lightness:function(t){return this.setChannel(\"hsl\",2,t)},saturationv:function(t){return this.setChannel(\"hsv\",1,t)},whiteness:function(t){return this.setChannel(\"hwb\",1,t)},blackness:function(t){return this.setChannel(\"hwb\",2,t)},value:function(t){return this.setChannel(\"hsv\",2,t)},cyan:function(t){return this.setChannel(\"cmyk\",0,t)},magenta:function(t){return this.setChannel(\"cmyk\",1,t)},yellow:function(t){return this.setChannel(\"cmyk\",2,t)},black:function(t){return this.setChannel(\"cmyk\",3,t)},hexString:function(){return L.hexString(this.values.rgb)},rgbString:function(){return L.rgbString(this.values.rgb,this.values.alpha)},rgbaString:function(){return L.rgbaString(this.values.rgb,this.values.alpha)},percentString:function(){return L.percentString(this.values.rgb,this.values.alpha)},hslString:function(){return L.hslString(this.values.hsl,this.values.alpha)},hslaString:function(){return L.hslaString(this.values.hsl,this.values.alpha)},hwbString:function(){return L.hwbString(this.values.hwb,this.values.alpha)},keyword:function(){return L.keyword(this.values.rgb,this.values.alpha)},rgbNumber:function(){var t=this.values.rgb;return t[0]<<16|t[1]<<8|t[2]},luminosity:function(){for(var t=this.values.rgb,e=[],n=0;n<t.length;n++){var i=t[n]/255;e[n]=i<=.03928?i/12.92:Math.pow((i+.055)/1.055,2.4)}return.2126*e[0]+.7152*e[1]+.0722*e[2]},contrast:function(t){var e=this.luminosity(),n=t.luminosity();return e>n?(e+.05)/(n+.05):(n+.05)/(e+.05)},level:function(t){var e=this.contrast(t);return e>=7.1?\"AAA\":e>=4.5?\"AA\":\"\"},dark:function(){var t=this.values.rgb;return(299*t[0]+587*t[1]+114*t[2])/1e3<128},light:function(){return!this.dark()},negate:function(){for(var t=[],e=0;e<3;e++)t[e]=255-this.values.rgb[e];return this.setValues(\"rgb\",t),this},lighten:function(t){var e=this.values.hsl;return e[2]+=e[2]*t,this.setValues(\"hsl\",e),this},darken:function(t){var e=this.values.hsl;return e[2]-=e[2]*t,this.setValues(\"hsl\",e),this},saturate:function(t){var e=this.values.hsl;return e[1]+=e[1]*t,this.setValues(\"hsl\",e),this},desaturate:function(t){var e=this.values.hsl;return e[1]-=e[1]*t,this.setValues(\"hsl\",e),this},whiten:function(t){var e=this.values.hwb;return e[1]+=e[1]*t,this.setValues(\"hwb\",e),this},blacken:function(t){var e=this.values.hwb;return e[2]+=e[2]*t,this.setValues(\"hwb\",e),this},greyscale:function(){var t=this.values.rgb,e=.3*t[0]+.59*t[1]+.11*t[2];return this.setValues(\"rgb\",[e,e,e]),this},clearer:function(t){var e=this.values.alpha;return this.setValues(\"alpha\",e-e*t),this},opaquer:function(t){var e=this.values.alpha;return this.setValues(\"alpha\",e+e*t),this},rotate:function(t){var e=this.values.hsl,n=(e[0]+t)%360;return e[0]=n<0?360+n:n,this.setValues(\"hsl\",e),this},mix:function(t,e){var n=t,i=void 0===e?.5:e,a=2*i-1,r=this.alpha()-n.alpha(),o=((a*r===-1?a:(a+r)/(1+a*r))+1)/2,s=1-o;return this.rgb(o*this.red()+s*n.red(),o*this.green()+s*n.green(),o*this.blue()+s*n.blue()).alpha(this.alpha()*i+n.alpha()*(1-i))},toJSON:function(){return this.rgb()},clone:function(){var t,e,n=new U,i=this.values,a=n.values;for(var r in i)i.hasOwnProperty(r)&&(t=i[r],\"[object Array]\"===(e={}.toString.call(t))?a[r]=t.slice(0):\"[object Number]\"===e?a[r]=t:console.error(\"unexpected color value:\",t));return n}}).spaces={rgb:[\"red\",\"green\",\"blue\"],hsl:[\"hue\",\"saturation\",\"lightness\"],hsv:[\"hue\",\"saturation\",\"value\"],hwb:[\"hue\",\"whiteness\",\"blackness\"],cmyk:[\"cyan\",\"magenta\",\"yellow\",\"black\"]},U.prototype.maxes={rgb:[255,255,255],hsl:[360,100,100],hsv:[360,100,100],hwb:[360,100,100],cmyk:[100,100,100,100]},U.prototype.getValues=function(t){for(var e=this.values,n={},i=0;i<t.length;i++)n[t.charAt(i)]=e[t][i];return 1!==e.alpha&&(n.a=e.alpha),n},U.prototype.setValues=function(t,e){var n,i,a=this.values,r=this.spaces,o=this.maxes,s=1;if(this.valid=!0,\"alpha\"===t)s=e;else if(e.length)a[t]=e.slice(0,t.length),s=e[t.length];else if(void 0!==e[t.charAt(0)]){for(n=0;n<t.length;n++)a[t][n]=e[t.charAt(n)];s=e.a}else if(void 0!==e[r[t][0]]){var l=r[t];for(n=0;n<t.length;n++)a[t][n]=e[l[n]];s=e.alpha}if(a.alpha=Math.max(0,Math.min(1,void 0===s?a.alpha:s)),\"alpha\"===t)return!1;for(n=0;n<t.length;n++)i=Math.max(0,Math.min(o[t][n],a[t][n])),a[t][n]=Math.round(i);for(var u in r)u!==t&&(a[u]=F[t][u](a[t]));return!0},U.prototype.setSpace=function(t,e){var n=e[0];return void 0===n?this.getValues(t):(\"number\"===typeof n&&(n=Array.prototype.slice.call(e)),this.setValues(t,n),this)},U.prototype.setChannel=function(t,e,n){var i=this.values[t];return void 0===n?i[e]:n===i[e]?this:(i[e]=n,this.setValues(t,i),this)},\"undefined\"!==typeof window&&(window.Color=U);var Y=U,K={noop:function(){},uid:function(){var t=0;return function(){return t++}}(),isNullOrUndef:function(t){return null===t||\"undefined\"===typeof t},isArray:function(t){if(Array.isArray&&Array.isArray(t))return!0;var e=Object.prototype.toString.call(t);return\"[object\"===e.substr(0,7)&&\"Array]\"===e.substr(-6)},isObject:function(t){return null!==t&&\"[object Object]\"===Object.prototype.toString.call(t)},isFinite:function(t){function e(e){return t.apply(this,arguments)}return e.toString=function(){return t.toString()},e}(function(t){return(\"number\"===typeof t||t instanceof Number)&&isFinite(t)}),valueOrDefault:function(t,e){return\"undefined\"===typeof t?e:t},valueAtIndexOrDefault:function(t,e,n){return K.valueOrDefault(K.isArray(t)?t[e]:t,n)},callback:function(t,e,n){if(t&&\"function\"===typeof t.call)return t.apply(n,e)},each:function(t,e,n,i){var a,r,o;if(K.isArray(t))if(r=t.length,i)for(a=r-1;a>=0;a--)e.call(n,t[a],a);else for(a=0;a<r;a++)e.call(n,t[a],a);else if(K.isObject(t))for(o=Object.keys(t),r=o.length,a=0;a<r;a++)e.call(n,t[o[a]],o[a])},arrayEquals:function(t,e){var n,i,a,r;if(!t||!e||t.length!==e.length)return!1;for(n=0,i=t.length;n<i;++n)if(a=t[n],r=e[n],a instanceof Array&&r instanceof Array){if(!K.arrayEquals(a,r))return!1}else if(a!==r)return!1;return!0},clone:function(t){if(K.isArray(t))return t.map(K.clone);if(K.isObject(t)){for(var e={},n=Object.keys(t),i=n.length,a=0;a<i;++a)e[n[a]]=K.clone(t[n[a]]);return e}return t},_merger:function(t,e,n,i){var a=e[t],r=n[t];K.isObject(a)&&K.isObject(r)?K.merge(a,r,i):e[t]=K.clone(r)},_mergerIf:function(t,e,n){var i=e[t],a=n[t];K.isObject(i)&&K.isObject(a)?K.mergeIf(i,a):e.hasOwnProperty(t)||(e[t]=K.clone(a))},merge:function(t,e,n){var i,a,r,o,s,l=K.isArray(e)?e:[e],u=l.length;if(!K.isObject(t))return t;for(i=(n=n||{}).merger||K._merger,a=0;a<u;++a)if(e=l[a],K.isObject(e))for(r=Object.keys(e),s=0,o=r.length;s<o;++s)i(r[s],t,e,n);return t},mergeIf:function(t,e){return K.merge(t,e,{merger:K._mergerIf})},extend:function(t){for(var e=function(e,n){t[n]=e},n=1,i=arguments.length;n<i;++n)K.each(arguments[n],e);return t},inherits:function(t){var e=this,n=t&&t.hasOwnProperty(\"constructor\")?t.constructor:function(){return e.apply(this,arguments)},i=function(){this.constructor=n};return i.prototype=e.prototype,n.prototype=new i,n.extend=K.inherits,t&&K.extend(n.prototype,t),n.__super__=e.prototype,n}},X=K;K.callCallback=K.callback,K.indexOf=function(t,e,n){return Array.prototype.indexOf.call(t,e,n)},K.getValueOrDefault=K.valueOrDefault,K.getValueAtIndexOrDefault=K.valueAtIndexOrDefault;var G={linear:function(t){return t},easeInQuad:function(t){return t*t},easeOutQuad:function(t){return-t*(t-2)},easeInOutQuad:function(t){return(t/=.5)<1?.5*t*t:-.5*(--t*(t-2)-1)},easeInCubic:function(t){return t*t*t},easeOutCubic:function(t){return(t-=1)*t*t+1},easeInOutCubic:function(t){return(t/=.5)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},easeInQuart:function(t){return t*t*t*t},easeOutQuart:function(t){return-((t-=1)*t*t*t-1)},easeInOutQuart:function(t){return(t/=.5)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},easeInQuint:function(t){return t*t*t*t*t},easeOutQuint:function(t){return(t-=1)*t*t*t*t+1},easeInOutQuint:function(t){return(t/=.5)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},easeInSine:function(t){return 1-Math.cos(t*(Math.PI/2))},easeOutSine:function(t){return Math.sin(t*(Math.PI/2))},easeInOutSine:function(t){return-.5*(Math.cos(Math.PI*t)-1)},easeInExpo:function(t){return 0===t?0:Math.pow(2,10*(t-1))},easeOutExpo:function(t){return 1===t?1:1-Math.pow(2,-10*t)},easeInOutExpo:function(t){return 0===t?0:1===t?1:(t/=.5)<1?.5*Math.pow(2,10*(t-1)):.5*(2-Math.pow(2,-10*--t))},easeInCirc:function(t){return t>=1?t:-(Math.sqrt(1-t*t)-1)},easeOutCirc:function(t){return Math.sqrt(1-(t-=1)*t)},easeInOutCirc:function(t){return(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},easeInElastic:function(t){var e=1.70158,n=0,i=1;return 0===t?0:1===t?1:(n||(n=.3),i<1?(i=1,e=n/4):e=n/(2*Math.PI)*Math.asin(1/i),-i*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/n))},easeOutElastic:function(t){var e=1.70158,n=0,i=1;return 0===t?0:1===t?1:(n||(n=.3),i<1?(i=1,e=n/4):e=n/(2*Math.PI)*Math.asin(1/i),i*Math.pow(2,-10*t)*Math.sin((t-e)*(2*Math.PI)/n)+1)},easeInOutElastic:function(t){var e=1.70158,n=0,i=1;return 0===t?0:2===(t/=.5)?1:(n||(n=.45),i<1?(i=1,e=n/4):e=n/(2*Math.PI)*Math.asin(1/i),t<1?i*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/n)*-.5:i*Math.pow(2,-10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/n)*.5+1)},easeInBack:function(t){var e=1.70158;return t*t*((e+1)*t-e)},easeOutBack:function(t){var e=1.70158;return(t-=1)*t*((e+1)*t+e)+1},easeInOutBack:function(t){var e=1.70158;return(t/=.5)<1?t*t*((1+(e*=1.525))*t-e)*.5:.5*((t-=2)*t*((1+(e*=1.525))*t+e)+2)},easeInBounce:function(t){return 1-G.easeOutBounce(1-t)},easeOutBounce:function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},easeInOutBounce:function(t){return t<.5?.5*G.easeInBounce(2*t):.5*G.easeOutBounce(2*t-1)+.5}},$={effects:G};X.easingEffects=G;var Z=Math.PI,J=Z/180,Q=2*Z,tt=Z/2,et=Z/4,nt=2*Z/3,it={clear:function(t){t.ctx.clearRect(0,0,t.width,t.height)},roundedRect:function(t,e,n,i,a,r){if(r){var o=Math.min(r,a/2,i/2),s=e+o,l=n+o,u=e+i-o,d=n+a-o;t.moveTo(e,l),s<u&&l<d?(t.arc(s,l,o,-Z,-tt),t.arc(u,l,o,-tt,0),t.arc(u,d,o,0,tt),t.arc(s,d,o,tt,Z)):s<u?(t.moveTo(s,n),t.arc(u,l,o,-tt,tt),t.arc(s,l,o,tt,Z+tt)):l<d?(t.arc(s,l,o,-Z,0),t.arc(s,d,o,0,Z)):t.arc(s,l,o,-Z,Z),t.closePath(),t.moveTo(e,n)}else t.rect(e,n,i,a)},drawPoint:function(t,e,n,i,a,r){var o,s,l,u,d,c=(r||0)*J;if(!e||\"object\"!==typeof e||\"[object HTMLImageElement]\"!==(o=e.toString())&&\"[object HTMLCanvasElement]\"!==o){if(!(isNaN(n)||n<=0)){switch(t.beginPath(),e){default:t.arc(i,a,n,0,Q),t.closePath();break;case\"triangle\":t.moveTo(i+Math.sin(c)*n,a-Math.cos(c)*n),c+=nt,t.lineTo(i+Math.sin(c)*n,a-Math.cos(c)*n),c+=nt,t.lineTo(i+Math.sin(c)*n,a-Math.cos(c)*n),t.closePath();break;case\"rectRounded\":u=n-(d=.516*n),s=Math.cos(c+et)*u,l=Math.sin(c+et)*u,t.arc(i-s,a-l,d,c-Z,c-tt),t.arc(i+l,a-s,d,c-tt,c),t.arc(i+s,a+l,d,c,c+tt),t.arc(i-l,a+s,d,c+tt,c+Z),t.closePath();break;case\"rect\":if(!r){u=Math.SQRT1_2*n,t.rect(i-u,a-u,2*u,2*u);break}c+=et;case\"rectRot\":s=Math.cos(c)*n,l=Math.sin(c)*n,t.moveTo(i-s,a-l),t.lineTo(i+l,a-s),t.lineTo(i+s,a+l),t.lineTo(i-l,a+s),t.closePath();break;case\"crossRot\":c+=et;case\"cross\":s=Math.cos(c)*n,l=Math.sin(c)*n,t.moveTo(i-s,a-l),t.lineTo(i+s,a+l),t.moveTo(i+l,a-s),t.lineTo(i-l,a+s);break;case\"star\":s=Math.cos(c)*n,l=Math.sin(c)*n,t.moveTo(i-s,a-l),t.lineTo(i+s,a+l),t.moveTo(i+l,a-s),t.lineTo(i-l,a+s),c+=et,s=Math.cos(c)*n,l=Math.sin(c)*n,t.moveTo(i-s,a-l),t.lineTo(i+s,a+l),t.moveTo(i+l,a-s),t.lineTo(i-l,a+s);break;case\"line\":s=Math.cos(c)*n,l=Math.sin(c)*n,t.moveTo(i-s,a-l),t.lineTo(i+s,a+l);break;case\"dash\":t.moveTo(i,a),t.lineTo(i+Math.cos(c)*n,a+Math.sin(c)*n)}t.fill(),t.stroke()}}else t.drawImage(e,i-e.width/2,a-e.height/2,e.width,e.height)},_isPointInArea:function(t,e){return t.x>e.left-1e-6&&t.x<e.right+1e-6&&t.y>e.top-1e-6&&t.y<e.bottom+1e-6},clipArea:function(t,e){t.save(),t.beginPath(),t.rect(e.left,e.top,e.right-e.left,e.bottom-e.top),t.clip()},unclipArea:function(t){t.restore()},lineTo:function(t,e,n,i){var a=n.steppedLine;if(a){if(\"middle\"===a){var r=(e.x+n.x)/2;t.lineTo(r,i?n.y:e.y),t.lineTo(r,i?e.y:n.y)}else\"after\"===a&&!i||\"after\"!==a&&i?t.lineTo(e.x,n.y):t.lineTo(n.x,e.y);t.lineTo(n.x,n.y)}else n.tension?t.bezierCurveTo(i?e.controlPointPreviousX:e.controlPointNextX,i?e.controlPointPreviousY:e.controlPointNextY,i?n.controlPointNextX:n.controlPointPreviousX,i?n.controlPointNextY:n.controlPointPreviousY,n.x,n.y):t.lineTo(n.x,n.y)}},at=it;X.clear=it.clear,X.drawRoundedRectangle=function(t){t.beginPath(),it.roundedRect.apply(it,arguments)};var rt={_set:function(t,e){return X.merge(this[t]||(this[t]={}),e)}};rt._set(\"global\",{defaultColor:\"rgba(0,0,0,0.1)\",defaultFontColor:\"#666\",defaultFontFamily:\"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",defaultFontSize:12,defaultFontStyle:\"normal\",defaultLineHeight:1.2,showLines:!0});var ot=rt,st=X.valueOrDefault,lt={toLineHeight:function(t,e){var n=(\"\"+t).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);if(!n||\"normal\"===n[1])return 1.2*e;switch(t=+n[2],n[3]){case\"px\":return t;case\"%\":t/=100}return e*t},toPadding:function(t){var e,n,i,a;return X.isObject(t)?(e=+t.top||0,n=+t.right||0,i=+t.bottom||0,a=+t.left||0):e=n=i=a=+t||0,{top:e,right:n,bottom:i,left:a,height:e+i,width:a+n}},_parseFont:function(t){var e=ot.global,n=st(t.fontSize,e.defaultFontSize),i={family:st(t.fontFamily,e.defaultFontFamily),lineHeight:X.options.toLineHeight(st(t.lineHeight,e.defaultLineHeight),n),size:n,style:st(t.fontStyle,e.defaultFontStyle),weight:null,string:\"\"};return i.string=function(t){return!t||X.isNullOrUndef(t.size)||X.isNullOrUndef(t.family)?null:(t.style?t.style+\" \":\"\")+(t.weight?t.weight+\" \":\"\")+t.size+\"px \"+t.family}(i),i},resolve:function(t,e,n){var i,a,r;for(i=0,a=t.length;i<a;++i)if(void 0!==(r=t[i])&&(void 0!==e&&\"function\"===typeof r&&(r=r(e)),void 0!==n&&X.isArray(r)&&(r=r[n]),void 0!==r))return r}},ut=X,dt=$,ct=at,ht=lt;ut.easing=dt,ut.canvas=ct,ut.options=ht;var ft=function(t){ut.extend(this,t),this.initialize.apply(this,arguments)};ut.extend(ft.prototype,{initialize:function(){this.hidden=!1},pivot:function(){var t=this;return t._view||(t._view=ut.clone(t._model)),t._start={},t},transition:function(t){var e=this,n=e._model,i=e._start,a=e._view;return n&&1!==t?(a||(a=e._view={}),i||(i=e._start={}),function(t,e,n,i){var a,r,o,s,l,u,d,c,h,f=Object.keys(n);for(a=0,r=f.length;a<r;++a)if(o=f[a],u=n[o],e.hasOwnProperty(o)||(e[o]=u),(s=e[o])!==u&&\"_\"!==o[0]){if(t.hasOwnProperty(o)||(t[o]=s),l=t[o],(d=typeof u)===typeof l)if(\"string\"===d){if((c=Y(l)).valid&&(h=Y(u)).valid){e[o]=h.mix(c,i).rgbString();continue}}else if(ut.isFinite(l)&&ut.isFinite(u)){e[o]=l+(u-l)*i;continue}e[o]=u}}(i,a,n,t),e):(e._view=n,e._start=null,e)},tooltipPosition:function(){return{x:this._model.x,y:this._model.y}},hasValue:function(){return ut.isNumber(this._model.x)&&ut.isNumber(this._model.y)}}),ft.extend=ut.inherits;var gt=ft,pt=gt.extend({chart:null,currentStep:0,numSteps:60,easing:\"\",render:null,onAnimationProgress:null,onAnimationComplete:null}),vt=pt;Object.defineProperty(pt.prototype,\"animationObject\",{get:function(){return this}}),Object.defineProperty(pt.prototype,\"chartInstance\",{get:function(){return this.chart},set:function(t){this.chart=t}}),ot._set(\"global\",{animation:{duration:1e3,easing:\"easeOutQuart\",onProgress:ut.noop,onComplete:ut.noop}});var mt={animations:[],request:null,addAnimation:function(t,e,n,i){var a,r,o=this.animations;for(e.chart=t,e.startTime=Date.now(),e.duration=n,i||(t.animating=!0),a=0,r=o.length;a<r;++a)if(o[a].chart===t)return void(o[a]=e);o.push(e),1===o.length&&this.requestAnimationFrame()},cancelAnimation:function(t){var e=ut.findIndex(this.animations,function(e){return e.chart===t});-1!==e&&(this.animations.splice(e,1),t.animating=!1)},requestAnimationFrame:function(){var t=this;null===t.request&&(t.request=ut.requestAnimFrame.call(window,function(){t.request=null,t.startDigest()}))},startDigest:function(){this.advance(),this.animations.length>0&&this.requestAnimationFrame()},advance:function(){for(var t,e,n,i,a=this.animations,r=0;r<a.length;)t=a[r],e=t.chart,n=t.numSteps,i=Math.floor((Date.now()-t.startTime)/t.duration*n)+1,t.currentStep=Math.min(i,n),ut.callback(t.render,[e,t],e),ut.callback(t.onAnimationProgress,[t],e),t.currentStep>=n?(ut.callback(t.onAnimationComplete,[t],e),e.animating=!1,a.splice(r,1)):++r}},bt=ut.options.resolve,yt=[\"push\",\"pop\",\"shift\",\"splice\",\"unshift\"];function xt(t,e){var n=t._chartjs;if(n){var i=n.listeners,a=i.indexOf(e);-1!==a&&i.splice(a,1),i.length>0||(yt.forEach(function(e){delete t[e]}),delete t._chartjs)}}var kt=function(t,e){this.initialize(t,e)};ut.extend(kt.prototype,{datasetElementType:null,dataElementType:null,initialize:function(t,e){this.chart=t,this.index=e,this.linkScales(),this.addElements()},updateIndex:function(t){this.index=t},linkScales:function(){var t=this,e=t.getMeta(),n=t.getDataset();null!==e.xAxisID&&e.xAxisID in t.chart.scales||(e.xAxisID=n.xAxisID||t.chart.options.scales.xAxes[0].id),null!==e.yAxisID&&e.yAxisID in t.chart.scales||(e.yAxisID=n.yAxisID||t.chart.options.scales.yAxes[0].id)},getDataset:function(){return this.chart.data.datasets[this.index]},getMeta:function(){return this.chart.getDatasetMeta(this.index)},getScaleForId:function(t){return this.chart.scales[t]},_getValueScaleId:function(){return this.getMeta().yAxisID},_getIndexScaleId:function(){return this.getMeta().xAxisID},_getValueScale:function(){return this.getScaleForId(this._getValueScaleId())},_getIndexScale:function(){return this.getScaleForId(this._getIndexScaleId())},reset:function(){this.update(!0)},destroy:function(){this._data&&xt(this._data,this)},createMetaDataset:function(){var t=this.datasetElementType;return t&&new t({_chart:this.chart,_datasetIndex:this.index})},createMetaData:function(t){var e=this.dataElementType;return e&&new e({_chart:this.chart,_datasetIndex:this.index,_index:t})},addElements:function(){var t,e,n=this.getMeta(),i=this.getDataset().data||[],a=n.data;for(t=0,e=i.length;t<e;++t)a[t]=a[t]||this.createMetaData(t);n.dataset=n.dataset||this.createMetaDataset()},addElementAndReset:function(t){var e=this.createMetaData(t);this.getMeta().data.splice(t,0,e),this.updateElement(e,t,!0)},buildOrUpdateElements:function(){var t,e,n=this,i=n.getDataset(),a=i.data||(i.data=[]);n._data!==a&&(n._data&&xt(n._data,n),a&&Object.isExtensible(a)&&(e=n,(t=a)._chartjs?t._chartjs.listeners.push(e):(Object.defineProperty(t,\"_chartjs\",{configurable:!0,enumerable:!1,value:{listeners:[e]}}),yt.forEach(function(e){var n=\"onData\"+e.charAt(0).toUpperCase()+e.slice(1),i=t[e];Object.defineProperty(t,e,{configurable:!0,enumerable:!1,value:function(){var e=Array.prototype.slice.call(arguments),a=i.apply(this,e);return ut.each(t._chartjs.listeners,function(t){\"function\"===typeof t[n]&&t[n].apply(t,e)}),a}})}))),n._data=a),n.resyncElements()},update:ut.noop,transition:function(t){for(var e=this.getMeta(),n=e.data||[],i=n.length,a=0;a<i;++a)n[a].transition(t);e.dataset&&e.dataset.transition(t)},draw:function(){var t=this.getMeta(),e=t.data||[],n=e.length,i=0;for(t.dataset&&t.dataset.draw();i<n;++i)e[i].draw()},removeHoverStyle:function(t){ut.merge(t._model,t.$previousStyle||{}),delete t.$previousStyle},setHoverStyle:function(t){var e=this.chart.data.datasets[t._datasetIndex],n=t._index,i=t.custom||{},a=t._model,r=ut.getHoverColor;t.$previousStyle={backgroundColor:a.backgroundColor,borderColor:a.borderColor,borderWidth:a.borderWidth},a.backgroundColor=bt([i.hoverBackgroundColor,e.hoverBackgroundColor,r(a.backgroundColor)],void 0,n),a.borderColor=bt([i.hoverBorderColor,e.hoverBorderColor,r(a.borderColor)],void 0,n),a.borderWidth=bt([i.hoverBorderWidth,e.hoverBorderWidth,a.borderWidth],void 0,n)},resyncElements:function(){var t=this.getMeta(),e=this.getDataset().data,n=t.data.length,i=e.length;i<n?t.data.splice(i,n-i):i>n&&this.insertElements(n,i-n)},insertElements:function(t,e){for(var n=0;n<e;++n)this.addElementAndReset(t+n)},onDataPush:function(){var t=arguments.length;this.insertElements(this.getDataset().data.length-t,t)},onDataPop:function(){this.getMeta().data.pop()},onDataShift:function(){this.getMeta().data.shift()},onDataSplice:function(t,e){this.getMeta().data.splice(t,e),this.insertElements(t,arguments.length-2)},onDataUnshift:function(){this.insertElements(0,arguments.length)}}),kt.extend=ut.inherits;var wt=kt;ot._set(\"global\",{elements:{arc:{backgroundColor:ot.global.defaultColor,borderColor:\"#fff\",borderWidth:2,borderAlign:\"center\"}}});var Mt=gt.extend({inLabelRange:function(t){var e=this._view;return!!e&&Math.pow(t-e.x,2)<Math.pow(e.radius+e.hoverRadius,2)},inRange:function(t,e){var n=this._view;if(n){for(var i=ut.getAngleFromPoint(n,{x:t,y:e}),a=i.angle,r=i.distance,o=n.startAngle,s=n.endAngle;s<o;)s+=2*Math.PI;for(;a>s;)a-=2*Math.PI;for(;a<o;)a+=2*Math.PI;var l=a>=o&&a<=s,u=r>=n.innerRadius&&r<=n.outerRadius;return l&&u}return!1},getCenterPoint:function(){var t=this._view,e=(t.startAngle+t.endAngle)/2,n=(t.innerRadius+t.outerRadius)/2;return{x:t.x+Math.cos(e)*n,y:t.y+Math.sin(e)*n}},getArea:function(){var t=this._view;return Math.PI*((t.endAngle-t.startAngle)/(2*Math.PI))*(Math.pow(t.outerRadius,2)-Math.pow(t.innerRadius,2))},tooltipPosition:function(){var t=this._view,e=t.startAngle+(t.endAngle-t.startAngle)/2,n=(t.outerRadius-t.innerRadius)/2+t.innerRadius;return{x:t.x+Math.cos(e)*n,y:t.y+Math.sin(e)*n}},draw:function(){var t,e=this._chart.ctx,n=this._view,i=n.startAngle,a=n.endAngle,r=\"inner\"===n.borderAlign?.33:0;e.save(),e.beginPath(),e.arc(n.x,n.y,Math.max(n.outerRadius-r,0),i,a),e.arc(n.x,n.y,n.innerRadius,a,i,!0),e.closePath(),e.fillStyle=n.backgroundColor,e.fill(),n.borderWidth&&(\"inner\"===n.borderAlign?(e.beginPath(),t=r/n.outerRadius,e.arc(n.x,n.y,n.outerRadius,i-t,a+t),n.innerRadius>r?(t=r/n.innerRadius,e.arc(n.x,n.y,n.innerRadius-r,a+t,i-t,!0)):e.arc(n.x,n.y,r,a+Math.PI/2,i-Math.PI/2),e.closePath(),e.clip(),e.beginPath(),e.arc(n.x,n.y,n.outerRadius,i,a),e.arc(n.x,n.y,n.innerRadius,a,i,!0),e.closePath(),e.lineWidth=2*n.borderWidth,e.lineJoin=\"round\"):(e.lineWidth=n.borderWidth,e.lineJoin=\"bevel\"),e.strokeStyle=n.borderColor,e.stroke()),e.restore()}}),_t=ut.valueOrDefault,Ct=ot.global.defaultColor;ot._set(\"global\",{elements:{line:{tension:.4,backgroundColor:Ct,borderWidth:3,borderColor:Ct,borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0,borderJoinStyle:\"miter\",capBezierPoints:!0,fill:!0}}});var St=gt.extend({draw:function(){var t,e,n,i,a=this._view,r=this._chart.ctx,o=a.spanGaps,s=this._children.slice(),l=ot.global,u=l.elements.line,d=-1;for(this._loop&&s.length&&s.push(s[0]),r.save(),r.lineCap=a.borderCapStyle||u.borderCapStyle,r.setLineDash&&r.setLineDash(a.borderDash||u.borderDash),r.lineDashOffset=_t(a.borderDashOffset,u.borderDashOffset),r.lineJoin=a.borderJoinStyle||u.borderJoinStyle,r.lineWidth=_t(a.borderWidth,u.borderWidth),r.strokeStyle=a.borderColor||l.defaultColor,r.beginPath(),d=-1,t=0;t<s.length;++t)e=s[t],n=ut.previousItem(s,t),i=e._view,0===t?i.skip||(r.moveTo(i.x,i.y),d=t):(n=-1===d?n:s[d],i.skip||(d!==t-1&&!o||-1===d?r.moveTo(i.x,i.y):ut.canvas.lineTo(r,n._view,e._view),d=t));r.stroke(),r.restore()}}),Pt=ut.valueOrDefault,It=ot.global.defaultColor;function At(t){var e=this._view;return!!e&&Math.abs(t-e.x)<e.radius+e.hitRadius}ot._set(\"global\",{elements:{point:{radius:3,pointStyle:\"circle\",backgroundColor:It,borderColor:It,borderWidth:1,hitRadius:1,hoverRadius:4,hoverBorderWidth:1}}});var Dt=gt.extend({inRange:function(t,e){var n=this._view;return!!n&&Math.pow(t-n.x,2)+Math.pow(e-n.y,2)<Math.pow(n.hitRadius+n.radius,2)},inLabelRange:At,inXRange:At,inYRange:function(t){var e=this._view;return!!e&&Math.abs(t-e.y)<e.radius+e.hitRadius},getCenterPoint:function(){var t=this._view;return{x:t.x,y:t.y}},getArea:function(){return Math.PI*Math.pow(this._view.radius,2)},tooltipPosition:function(){var t=this._view;return{x:t.x,y:t.y,padding:t.radius+t.borderWidth}},draw:function(t){var e=this._view,n=this._chart.ctx,i=e.pointStyle,a=e.rotation,r=e.radius,o=e.x,s=e.y,l=ot.global,u=l.defaultColor;e.skip||(void 0===t||ut.canvas._isPointInArea(e,t))&&(n.strokeStyle=e.borderColor||u,n.lineWidth=Pt(e.borderWidth,l.elements.point.borderWidth),n.fillStyle=e.backgroundColor||u,ut.canvas.drawPoint(n,i,r,o,s,a))}}),Tt=ot.global.defaultColor;function Ft(t){return t&&void 0!==t.width}function Ot(t){var e,n,i,a,r;return Ft(t)?(r=t.width/2,e=t.x-r,n=t.x+r,i=Math.min(t.y,t.base),a=Math.max(t.y,t.base)):(r=t.height/2,e=Math.min(t.x,t.base),n=Math.max(t.x,t.base),i=t.y-r,a=t.y+r),{left:e,top:i,right:n,bottom:a}}function Lt(t,e,n){return t===e?n:t===n?e:t}function Rt(t,e,n){var i,a,r,o,s=t.borderWidth,l=function(t){var e=t.borderSkipped,n={};return e?(t.horizontal?t.base>t.x&&(e=Lt(e,\"left\",\"right\")):t.base<t.y&&(e=Lt(e,\"bottom\",\"top\")),n[e]=!0,n):n}(t);return ut.isObject(s)?(i=+s.top||0,a=+s.right||0,r=+s.bottom||0,o=+s.left||0):i=a=r=o=+s||0,{t:l.top||i<0?0:i>n?n:i,r:l.right||a<0?0:a>e?e:a,b:l.bottom||r<0?0:r>n?n:r,l:l.left||o<0?0:o>e?e:o}}function zt(t,e,n){var i=null===e,a=null===n,r=!(!t||i&&a)&&Ot(t);return r&&(i||e>=r.left&&e<=r.right)&&(a||n>=r.top&&n<=r.bottom)}ot._set(\"global\",{elements:{rectangle:{backgroundColor:Tt,borderColor:Tt,borderSkipped:\"bottom\",borderWidth:0}}});var Nt=gt.extend({draw:function(){var t=this._chart.ctx,e=this._view,n=function(t){var e=Ot(t),n=e.right-e.left,i=e.bottom-e.top,a=Rt(t,n/2,i/2);return{outer:{x:e.left,y:e.top,w:n,h:i},inner:{x:e.left+a.l,y:e.top+a.t,w:n-a.l-a.r,h:i-a.t-a.b}}}(e),i=n.outer,a=n.inner;t.fillStyle=e.backgroundColor,t.fillRect(i.x,i.y,i.w,i.h),i.w===a.w&&i.h===a.h||(t.save(),t.beginPath(),t.rect(i.x,i.y,i.w,i.h),t.clip(),t.fillStyle=e.borderColor,t.rect(a.x,a.y,a.w,a.h),t.fill(\"evenodd\"),t.restore())},height:function(){var t=this._view;return t.base-t.y},inRange:function(t,e){return zt(this._view,t,e)},inLabelRange:function(t,e){var n=this._view;return Ft(n)?zt(n,t,null):zt(n,null,e)},inXRange:function(t){return zt(this._view,t,null)},inYRange:function(t){return zt(this._view,null,t)},getCenterPoint:function(){var t,e,n=this._view;return Ft(n)?(t=n.x,e=(n.y+n.base)/2):(t=(n.x+n.base)/2,e=n.y),{x:t,y:e}},getArea:function(){var t=this._view;return Ft(t)?t.width*Math.abs(t.y-t.base):t.height*Math.abs(t.x-t.base)},tooltipPosition:function(){var t=this._view;return{x:t.x,y:t.y}}}),Bt={},Wt=Mt,Et=St,Vt=Dt,Ht=Nt;Bt.Arc=Wt,Bt.Line=Et,Bt.Point=Vt,Bt.Rectangle=Ht;var jt=ut.options.resolve;ot._set(\"bar\",{hover:{mode:\"label\"},scales:{xAxes:[{type:\"category\",categoryPercentage:.8,barPercentage:.9,offset:!0,gridLines:{offsetGridLines:!0}}],yAxes:[{type:\"linear\"}]}});var qt=wt.extend({dataElementType:Bt.Rectangle,initialize:function(){var t;wt.prototype.initialize.apply(this,arguments),(t=this.getMeta()).stack=this.getDataset().stack,t.bar=!0},update:function(t){var e,n,i=this.getMeta().data;for(this._ruler=this.getRuler(),e=0,n=i.length;e<n;++e)this.updateElement(i[e],e,t)},updateElement:function(t,e,n){var i=this,a=i.getMeta(),r=i.getDataset(),o=i._resolveElementOptions(t,e);t._xScale=i.getScaleForId(a.xAxisID),t._yScale=i.getScaleForId(a.yAxisID),t._datasetIndex=i.index,t._index=e,t._model={backgroundColor:o.backgroundColor,borderColor:o.borderColor,borderSkipped:o.borderSkipped,borderWidth:o.borderWidth,datasetLabel:r.label,label:i.chart.data.labels[e]},i._updateElementGeometry(t,e,n),t.pivot()},_updateElementGeometry:function(t,e,n){var i=this,a=t._model,r=i._getValueScale(),o=r.getBasePixel(),s=r.isHorizontal(),l=i._ruler||i.getRuler(),u=i.calculateBarValuePixels(i.index,e),d=i.calculateBarIndexPixels(i.index,e,l);a.horizontal=s,a.base=n?o:u.base,a.x=s?n?o:u.head:d.center,a.y=s?d.center:n?o:u.head,a.height=s?d.size:void 0,a.width=s?void 0:d.size},_getStacks:function(t){var e,n,i=this.chart,a=this._getIndexScale(),r=a.options.stacked,o=void 0===t?i.data.datasets.length:t+1,s=[];for(e=0;e<o;++e)(n=i.getDatasetMeta(e)).bar&&i.isDatasetVisible(e)&&(!1===r||!0===r&&-1===s.indexOf(n.stack)||void 0===r&&(void 0===n.stack||-1===s.indexOf(n.stack)))&&s.push(n.stack);return s},getStackCount:function(){return this._getStacks().length},getStackIndex:function(t,e){var n=this._getStacks(t),i=void 0!==e?n.indexOf(e):-1;return-1===i?n.length-1:i},getRuler:function(){var t,e,n=this._getIndexScale(),i=this.getStackCount(),a=this.index,r=n.isHorizontal(),o=r?n.left:n.top,s=o+(r?n.width:n.height),l=[];for(t=0,e=this.getMeta().data.length;t<e;++t)l.push(n.getPixelForValue(null,t,a));return{min:ut.isNullOrUndef(n.options.barThickness)?function(t,e){var n,i,a,r,o=t.isHorizontal()?t.width:t.height,s=t.getTicks();for(a=1,r=e.length;a<r;++a)o=Math.min(o,Math.abs(e[a]-e[a-1]));for(a=0,r=s.length;a<r;++a)i=t.getPixelForTick(a),o=a>0?Math.min(o,i-n):o,n=i;return o}(n,l):-1,pixels:l,start:o,end:s,stackCount:i,scale:n}},calculateBarValuePixels:function(t,e){var n,i,a,r,o,s,l=this.chart,u=this.getMeta(),d=this._getValueScale(),c=d.isHorizontal(),h=l.data.datasets,f=+d.getRightValue(h[t].data[e]),g=d.options.minBarLength,p=d.options.stacked,v=u.stack,m=0;if(p||void 0===p&&void 0!==v)for(n=0;n<t;++n)(i=l.getDatasetMeta(n)).bar&&i.stack===v&&i.controller._getValueScaleId()===d.id&&l.isDatasetVisible(n)&&(a=+d.getRightValue(h[n].data[e]),(f<0&&a<0||f>=0&&a>0)&&(m+=a));return r=d.getPixelForValue(m),o=d.getPixelForValue(m+f),s=o-r,void 0!==g&&Math.abs(s)<g&&(s=g,o=f>=0&&!c||f<0&&c?r-g:r+g),{size:s,base:r,head:o,center:o+s/2}},calculateBarIndexPixels:function(t,e,n){var i=n.scale.options,a=\"flex\"===i.barThickness?function(t,e,n){var i,a=e.pixels,r=a[t],o=t>0?a[t-1]:null,s=t<a.length-1?a[t+1]:null,l=n.categoryPercentage;return null===o&&(o=r-(null===s?e.end-e.start:s-r)),null===s&&(s=r+r-o),i=r-(r-Math.min(o,s))/2*l,{chunk:Math.abs(s-o)/2*l/e.stackCount,ratio:n.barPercentage,start:i}}(e,n,i):function(t,e,n){var i,a,r=n.barThickness,o=e.stackCount,s=e.pixels[t];return ut.isNullOrUndef(r)?(i=e.min*n.categoryPercentage,a=n.barPercentage):(i=r*o,a=1),{chunk:i/o,ratio:a,start:s-i/2}}(e,n,i),r=this.getStackIndex(t,this.getMeta().stack),o=a.start+a.chunk*r+a.chunk/2,s=Math.min(ut.valueOrDefault(i.maxBarThickness,1/0),a.chunk*a.ratio);return{base:o-s/2,head:o+s/2,center:o,size:s}},draw:function(){var t=this.chart,e=this._getValueScale(),n=this.getMeta().data,i=this.getDataset(),a=n.length,r=0;for(ut.canvas.clipArea(t.ctx,t.chartArea);r<a;++r)isNaN(e.getRightValue(i.data[r]))||n[r].draw();ut.canvas.unclipArea(t.ctx)},_resolveElementOptions:function(t,e){var n,i,a,r=this.chart,o=r.data.datasets,s=o[this.index],l=t.custom||{},u=r.options.elements.rectangle,d={},c={chart:r,dataIndex:e,dataset:s,datasetIndex:this.index},h=[\"backgroundColor\",\"borderColor\",\"borderSkipped\",\"borderWidth\"];for(n=0,i=h.length;n<i;++n)d[a=h[n]]=jt([l[a],s[a],u[a]],c,e);return d}}),Ut=ut.valueOrDefault,Yt=ut.options.resolve;ot._set(\"bubble\",{hover:{mode:\"single\"},scales:{xAxes:[{type:\"linear\",position:\"bottom\",id:\"x-axis-0\"}],yAxes:[{type:\"linear\",position:\"left\",id:\"y-axis-0\"}]},tooltips:{callbacks:{title:function(){return\"\"},label:function(t,e){var n=e.datasets[t.datasetIndex].label||\"\",i=e.datasets[t.datasetIndex].data[t.index];return n+\": (\"+t.xLabel+\", \"+t.yLabel+\", \"+i.r+\")\"}}}});var Kt=wt.extend({dataElementType:Bt.Point,update:function(t){var e=this,n=e.getMeta(),i=n.data;ut.each(i,function(n,i){e.updateElement(n,i,t)})},updateElement:function(t,e,n){var i=this,a=i.getMeta(),r=t.custom||{},o=i.getScaleForId(a.xAxisID),s=i.getScaleForId(a.yAxisID),l=i._resolveElementOptions(t,e),u=i.getDataset().data[e],d=i.index,c=n?o.getPixelForDecimal(.5):o.getPixelForValue(\"object\"===typeof u?u:NaN,e,d),h=n?s.getBasePixel():s.getPixelForValue(u,e,d);t._xScale=o,t._yScale=s,t._options=l,t._datasetIndex=d,t._index=e,t._model={backgroundColor:l.backgroundColor,borderColor:l.borderColor,borderWidth:l.borderWidth,hitRadius:l.hitRadius,pointStyle:l.pointStyle,rotation:l.rotation,radius:n?0:l.radius,skip:r.skip||isNaN(c)||isNaN(h),x:c,y:h},t.pivot()},setHoverStyle:function(t){var e=t._model,n=t._options,i=ut.getHoverColor;t.$previousStyle={backgroundColor:e.backgroundColor,borderColor:e.borderColor,borderWidth:e.borderWidth,radius:e.radius},e.backgroundColor=Ut(n.hoverBackgroundColor,i(n.backgroundColor)),e.borderColor=Ut(n.hoverBorderColor,i(n.borderColor)),e.borderWidth=Ut(n.hoverBorderWidth,n.borderWidth),e.radius=n.radius+n.hoverRadius},_resolveElementOptions:function(t,e){var n,i,a,r=this.chart,o=r.data.datasets,s=o[this.index],l=t.custom||{},u=r.options.elements.point,d=s.data[e],c={},h={chart:r,dataIndex:e,dataset:s,datasetIndex:this.index},f=[\"backgroundColor\",\"borderColor\",\"borderWidth\",\"hoverBackgroundColor\",\"hoverBorderColor\",\"hoverBorderWidth\",\"hoverRadius\",\"hitRadius\",\"pointStyle\",\"rotation\"];for(n=0,i=f.length;n<i;++n)c[a=f[n]]=Yt([l[a],s[a],u[a]],h,e);return c.radius=Yt([l.radius,d?d.r:void 0,s.radius,u.radius],h,e),c}}),Xt=ut.options.resolve,Gt=ut.valueOrDefault;ot._set(\"doughnut\",{animation:{animateRotate:!0,animateScale:!1},hover:{mode:\"single\"},legendCallback:function(t){var e=[];e.push('<ul class=\"'+t.id+'-legend\">');var n=t.data,i=n.datasets,a=n.labels;if(i.length)for(var r=0;r<i[0].data.length;++r)e.push('<li><span style=\"background-color:'+i[0].backgroundColor[r]+'\"></span>'),a[r]&&e.push(a[r]),e.push(\"</li>\");return e.push(\"</ul>\"),e.join(\"\")},legend:{labels:{generateLabels:function(t){var e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(function(n,i){var a=t.getDatasetMeta(0),r=e.datasets[0],o=a.data[i],s=o&&o.custom||{},l=t.options.elements.arc,u=Xt([s.backgroundColor,r.backgroundColor,l.backgroundColor],void 0,i),d=Xt([s.borderColor,r.borderColor,l.borderColor],void 0,i),c=Xt([s.borderWidth,r.borderWidth,l.borderWidth],void 0,i);return{text:n,fillStyle:u,strokeStyle:d,lineWidth:c,hidden:isNaN(r.data[i])||a.data[i].hidden,index:i}}):[]}},onClick:function(t,e){var n,i,a,r=e.index,o=this.chart;for(n=0,i=(o.data.datasets||[]).length;n<i;++n)(a=o.getDatasetMeta(n)).data[r]&&(a.data[r].hidden=!a.data[r].hidden);o.update()}},cutoutPercentage:50,rotation:-.5*Math.PI,circumference:2*Math.PI,tooltips:{callbacks:{title:function(){return\"\"},label:function(t,e){var n=e.labels[t.index],i=\": \"+e.datasets[t.datasetIndex].data[t.index];return ut.isArray(n)?(n=n.slice())[0]+=i:n+=i,n}}}});var $t=wt.extend({dataElementType:Bt.Arc,linkScales:ut.noop,getRingIndex:function(t){for(var e=0,n=0;n<t;++n)this.chart.isDatasetVisible(n)&&++e;return e},update:function(t){var e,n,i=this,a=i.chart,r=a.chartArea,o=a.options,s=r.right-r.left,l=r.bottom-r.top,u=Math.min(s,l),d={x:0,y:0},c=i.getMeta(),h=c.data,f=o.cutoutPercentage,g=o.circumference,p=i._getRingWeight(i.index);if(g<2*Math.PI){var v=o.rotation%(2*Math.PI),m=(v+=2*Math.PI*(v>=Math.PI?-1:v<-Math.PI?1:0))+g,b={x:Math.cos(v),y:Math.sin(v)},y={x:Math.cos(m),y:Math.sin(m)},x=v<=0&&m>=0||v<=2*Math.PI&&2*Math.PI<=m,k=v<=.5*Math.PI&&.5*Math.PI<=m||v<=2.5*Math.PI&&2.5*Math.PI<=m,w=v<=-Math.PI&&-Math.PI<=m||v<=Math.PI&&Math.PI<=m,M=v<=.5*-Math.PI&&.5*-Math.PI<=m||v<=1.5*Math.PI&&1.5*Math.PI<=m,_=f/100,C={x:w?-1:Math.min(b.x*(b.x<0?1:_),y.x*(y.x<0?1:_)),y:M?-1:Math.min(b.y*(b.y<0?1:_),y.y*(y.y<0?1:_))},S={x:x?1:Math.max(b.x*(b.x>0?1:_),y.x*(y.x>0?1:_)),y:k?1:Math.max(b.y*(b.y>0?1:_),y.y*(y.y>0?1:_))},P={width:.5*(S.x-C.x),height:.5*(S.y-C.y)};u=Math.min(s/P.width,l/P.height),d={x:-.5*(S.x+C.x),y:-.5*(S.y+C.y)}}for(e=0,n=h.length;e<n;++e)h[e]._options=i._resolveElementOptions(h[e],e);for(a.borderWidth=i.getMaxBorderWidth(),a.outerRadius=Math.max((u-a.borderWidth)/2,0),a.innerRadius=Math.max(f?a.outerRadius/100*f:0,0),a.radiusLength=(a.outerRadius-a.innerRadius)/(i._getVisibleDatasetWeightTotal()||1),a.offsetX=d.x*a.outerRadius,a.offsetY=d.y*a.outerRadius,c.total=i.calculateTotal(),i.outerRadius=a.outerRadius-a.radiusLength*i._getRingWeightOffset(i.index),i.innerRadius=Math.max(i.outerRadius-a.radiusLength*p,0),e=0,n=h.length;e<n;++e)i.updateElement(h[e],e,t)},updateElement:function(t,e,n){var i=this,a=i.chart,r=a.chartArea,o=a.options,s=o.animation,l=(r.left+r.right)/2,u=(r.top+r.bottom)/2,d=o.rotation,c=o.rotation,h=i.getDataset(),f=n&&s.animateRotate?0:t.hidden?0:i.calculateCircumference(h.data[e])*(o.circumference/(2*Math.PI)),g=n&&s.animateScale?0:i.innerRadius,p=n&&s.animateScale?0:i.outerRadius,v=t._options||{};ut.extend(t,{_datasetIndex:i.index,_index:e,_model:{backgroundColor:v.backgroundColor,borderColor:v.borderColor,borderWidth:v.borderWidth,borderAlign:v.borderAlign,x:l+a.offsetX,y:u+a.offsetY,startAngle:d,endAngle:c,circumference:f,outerRadius:p,innerRadius:g,label:ut.valueAtIndexOrDefault(h.label,e,a.data.labels[e])}});var m=t._model;n&&s.animateRotate||(m.startAngle=0===e?o.rotation:i.getMeta().data[e-1]._model.endAngle,m.endAngle=m.startAngle+m.circumference),t.pivot()},calculateTotal:function(){var t,e=this.getDataset(),n=this.getMeta(),i=0;return ut.each(n.data,function(n,a){t=e.data[a],isNaN(t)||n.hidden||(i+=Math.abs(t))}),i},calculateCircumference:function(t){var e=this.getMeta().total;return e>0&&!isNaN(t)?2*Math.PI*(Math.abs(t)/e):0},getMaxBorderWidth:function(t){var e,n,i,a,r,o,s,l,u=0,d=this.chart;if(!t)for(e=0,n=d.data.datasets.length;e<n;++e)if(d.isDatasetVisible(e)){i=d.getDatasetMeta(e),t=i.data,e!==this.index&&(r=i.controller);break}if(!t)return 0;for(e=0,n=t.length;e<n;++e)a=t[e],\"inner\"!==(o=r?r._resolveElementOptions(a,e):a._options).borderAlign&&(s=o.borderWidth,l=o.hoverBorderWidth,u=l>(u=s>u?s:u)?l:u);return u},setHoverStyle:function(t){var e=t._model,n=t._options,i=ut.getHoverColor;t.$previousStyle={backgroundColor:e.backgroundColor,borderColor:e.borderColor,borderWidth:e.borderWidth},e.backgroundColor=Gt(n.hoverBackgroundColor,i(n.backgroundColor)),e.borderColor=Gt(n.hoverBorderColor,i(n.borderColor)),e.borderWidth=Gt(n.hoverBorderWidth,n.borderWidth)},_resolveElementOptions:function(t,e){var n,i,a,r=this.chart,o=this.getDataset(),s=t.custom||{},l=r.options.elements.arc,u={},d={chart:r,dataIndex:e,dataset:o,datasetIndex:this.index},c=[\"backgroundColor\",\"borderColor\",\"borderWidth\",\"borderAlign\",\"hoverBackgroundColor\",\"hoverBorderColor\",\"hoverBorderWidth\"];for(n=0,i=c.length;n<i;++n)u[a=c[n]]=Xt([s[a],o[a],l[a]],d,e);return u},_getRingWeightOffset:function(t){for(var e=0,n=0;n<t;++n)this.chart.isDatasetVisible(n)&&(e+=this._getRingWeight(n));return e},_getRingWeight:function(t){return Math.max(Gt(this.chart.data.datasets[t].weight,1),0)},_getVisibleDatasetWeightTotal:function(){return this._getRingWeightOffset(this.chart.data.datasets.length)}});ot._set(\"horizontalBar\",{hover:{mode:\"index\",axis:\"y\"},scales:{xAxes:[{type:\"linear\",position:\"bottom\"}],yAxes:[{type:\"category\",position:\"left\",categoryPercentage:.8,barPercentage:.9,offset:!0,gridLines:{offsetGridLines:!0}}]},elements:{rectangle:{borderSkipped:\"left\"}},tooltips:{mode:\"index\",axis:\"y\"}});var Zt=qt.extend({_getValueScaleId:function(){return this.getMeta().xAxisID},_getIndexScaleId:function(){return this.getMeta().yAxisID}}),Jt=ut.valueOrDefault,Qt=ut.options.resolve,te=ut.canvas._isPointInArea;function ee(t,e){return Jt(t.showLine,e.showLines)}ot._set(\"line\",{showLines:!0,spanGaps:!1,hover:{mode:\"label\"},scales:{xAxes:[{type:\"category\",id:\"x-axis-0\"}],yAxes:[{type:\"linear\",id:\"y-axis-0\"}]}});var ne=wt.extend({datasetElementType:Bt.Line,dataElementType:Bt.Point,update:function(t){var e,n,i=this,a=i.getMeta(),r=a.dataset,o=a.data||[],s=i.getScaleForId(a.yAxisID),l=i.getDataset(),u=ee(l,i.chart.options);for(u&&(void 0!==l.tension&&void 0===l.lineTension&&(l.lineTension=l.tension),r._scale=s,r._datasetIndex=i.index,r._children=o,r._model=i._resolveLineOptions(r),r.pivot()),e=0,n=o.length;e<n;++e)i.updateElement(o[e],e,t);for(u&&0!==r._model.tension&&i.updateBezierControlPoints(),e=0,n=o.length;e<n;++e)o[e].pivot()},updateElement:function(t,e,n){var i,a,r=this,o=r.getMeta(),s=t.custom||{},l=r.getDataset(),u=r.index,d=l.data[e],c=r.getScaleForId(o.yAxisID),h=r.getScaleForId(o.xAxisID),f=o.dataset._model,g=r._resolvePointOptions(t,e);i=h.getPixelForValue(\"object\"===typeof d?d:NaN,e,u),a=n?c.getBasePixel():r.calculatePointY(d,e,u),t._xScale=h,t._yScale=c,t._options=g,t._datasetIndex=u,t._index=e,t._model={x:i,y:a,skip:s.skip||isNaN(i)||isNaN(a),radius:g.radius,pointStyle:g.pointStyle,rotation:g.rotation,backgroundColor:g.backgroundColor,borderColor:g.borderColor,borderWidth:g.borderWidth,tension:Jt(s.tension,f?f.tension:0),steppedLine:!!f&&f.steppedLine,hitRadius:g.hitRadius}},_resolvePointOptions:function(t,e){var n,i,a,r=this.chart,o=r.data.datasets[this.index],s=t.custom||{},l=r.options.elements.point,u={},d={chart:r,dataIndex:e,dataset:o,datasetIndex:this.index},c={backgroundColor:\"pointBackgroundColor\",borderColor:\"pointBorderColor\",borderWidth:\"pointBorderWidth\",hitRadius:\"pointHitRadius\",hoverBackgroundColor:\"pointHoverBackgroundColor\",hoverBorderColor:\"pointHoverBorderColor\",hoverBorderWidth:\"pointHoverBorderWidth\",hoverRadius:\"pointHoverRadius\",pointStyle:\"pointStyle\",radius:\"pointRadius\",rotation:\"pointRotation\"},h=Object.keys(c);for(n=0,i=h.length;n<i;++n)a=h[n],u[a]=Qt([s[a],o[c[a]],o[a],l[a]],d,e);return u},_resolveLineOptions:function(t){var e,n,i,a=this.chart,r=a.data.datasets[this.index],o=t.custom||{},s=a.options,l=s.elements.line,u={},d=[\"backgroundColor\",\"borderWidth\",\"borderColor\",\"borderCapStyle\",\"borderDash\",\"borderDashOffset\",\"borderJoinStyle\",\"fill\",\"cubicInterpolationMode\"];for(e=0,n=d.length;e<n;++e)u[i=d[e]]=Qt([o[i],r[i],l[i]]);return u.spanGaps=Jt(r.spanGaps,s.spanGaps),u.tension=Jt(r.lineTension,l.tension),u.steppedLine=Qt([o.steppedLine,r.steppedLine,l.stepped]),u},calculatePointY:function(t,e,n){var i,a,r,o=this.chart,s=this.getMeta(),l=this.getScaleForId(s.yAxisID),u=0,d=0;if(l.options.stacked){for(i=0;i<n;i++)if(a=o.data.datasets[i],\"line\"===(r=o.getDatasetMeta(i)).type&&r.yAxisID===l.id&&o.isDatasetVisible(i)){var c=Number(l.getRightValue(a.data[e]));c<0?d+=c||0:u+=c||0}var h=Number(l.getRightValue(t));return h<0?l.getPixelForValue(d+h):l.getPixelForValue(u+h)}return l.getPixelForValue(t)},updateBezierControlPoints:function(){var t,e,n,i,a=this.chart,r=this.getMeta(),o=r.dataset._model,s=a.chartArea,l=r.data||[];function u(t,e,n){return Math.max(Math.min(t,n),e)}if(o.spanGaps&&(l=l.filter(function(t){return!t._model.skip})),\"monotone\"===o.cubicInterpolationMode)ut.splineCurveMonotone(l);else for(t=0,e=l.length;t<e;++t)n=l[t]._model,i=ut.splineCurve(ut.previousItem(l,t)._model,n,ut.nextItem(l,t)._model,o.tension),n.controlPointPreviousX=i.previous.x,n.controlPointPreviousY=i.previous.y,n.controlPointNextX=i.next.x,n.controlPointNextY=i.next.y;if(a.options.elements.line.capBezierPoints)for(t=0,e=l.length;t<e;++t)n=l[t]._model,te(n,s)&&(t>0&&te(l[t-1]._model,s)&&(n.controlPointPreviousX=u(n.controlPointPreviousX,s.left,s.right),n.controlPointPreviousY=u(n.controlPointPreviousY,s.top,s.bottom)),t<l.length-1&&te(l[t+1]._model,s)&&(n.controlPointNextX=u(n.controlPointNextX,s.left,s.right),n.controlPointNextY=u(n.controlPointNextY,s.top,s.bottom)))},draw:function(){var t,e=this.chart,n=this.getMeta(),i=n.data||[],a=e.chartArea,r=i.length,o=0;for(ee(this.getDataset(),e.options)&&(t=(n.dataset._model.borderWidth||0)/2,ut.canvas.clipArea(e.ctx,{left:a.left,right:a.right,top:a.top-t,bottom:a.bottom+t}),n.dataset.draw(),ut.canvas.unclipArea(e.ctx));o<r;++o)i[o].draw(a)},setHoverStyle:function(t){var e=t._model,n=t._options,i=ut.getHoverColor;t.$previousStyle={backgroundColor:e.backgroundColor,borderColor:e.borderColor,borderWidth:e.borderWidth,radius:e.radius},e.backgroundColor=Jt(n.hoverBackgroundColor,i(n.backgroundColor)),e.borderColor=Jt(n.hoverBorderColor,i(n.borderColor)),e.borderWidth=Jt(n.hoverBorderWidth,n.borderWidth),e.radius=Jt(n.hoverRadius,n.radius)}}),ie=ut.options.resolve;ot._set(\"polarArea\",{scale:{type:\"radialLinear\",angleLines:{display:!1},gridLines:{circular:!0},pointLabels:{display:!1},ticks:{beginAtZero:!0}},animation:{animateRotate:!0,animateScale:!0},startAngle:-.5*Math.PI,legendCallback:function(t){var e=[];e.push('<ul class=\"'+t.id+'-legend\">');var n=t.data,i=n.datasets,a=n.labels;if(i.length)for(var r=0;r<i[0].data.length;++r)e.push('<li><span style=\"background-color:'+i[0].backgroundColor[r]+'\"></span>'),a[r]&&e.push(a[r]),e.push(\"</li>\");return e.push(\"</ul>\"),e.join(\"\")},legend:{labels:{generateLabels:function(t){var e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(function(n,i){var a=t.getDatasetMeta(0),r=e.datasets[0],o=a.data[i],s=o.custom||{},l=t.options.elements.arc,u=ie([s.backgroundColor,r.backgroundColor,l.backgroundColor],void 0,i),d=ie([s.borderColor,r.borderColor,l.borderColor],void 0,i),c=ie([s.borderWidth,r.borderWidth,l.borderWidth],void 0,i);return{text:n,fillStyle:u,strokeStyle:d,lineWidth:c,hidden:isNaN(r.data[i])||a.data[i].hidden,index:i}}):[]}},onClick:function(t,e){var n,i,a,r=e.index,o=this.chart;for(n=0,i=(o.data.datasets||[]).length;n<i;++n)(a=o.getDatasetMeta(n)).data[r].hidden=!a.data[r].hidden;o.update()}},tooltips:{callbacks:{title:function(){return\"\"},label:function(t,e){return e.labels[t.index]+\": \"+t.yLabel}}}});var ae=wt.extend({dataElementType:Bt.Arc,linkScales:ut.noop,update:function(t){var e,n,i,a=this,r=a.getDataset(),o=a.getMeta(),s=a.chart.options.startAngle||0,l=a._starts=[],u=a._angles=[],d=o.data;for(a._updateRadius(),o.count=a.countVisibleElements(),e=0,n=r.data.length;e<n;e++)l[e]=s,i=a._computeAngle(e),u[e]=i,s+=i;for(e=0,n=d.length;e<n;++e)d[e]._options=a._resolveElementOptions(d[e],e),a.updateElement(d[e],e,t)},_updateRadius:function(){var t=this,e=t.chart,n=e.chartArea,i=e.options,a=Math.min(n.right-n.left,n.bottom-n.top);e.outerRadius=Math.max(a/2,0),e.innerRadius=Math.max(i.cutoutPercentage?e.outerRadius/100*i.cutoutPercentage:1,0),e.radiusLength=(e.outerRadius-e.innerRadius)/e.getVisibleDatasetCount(),t.outerRadius=e.outerRadius-e.radiusLength*t.index,t.innerRadius=t.outerRadius-e.radiusLength},updateElement:function(t,e,n){var i=this,a=i.chart,r=i.getDataset(),o=a.options,s=o.animation,l=a.scale,u=a.data.labels,d=l.xCenter,c=l.yCenter,h=o.startAngle,f=t.hidden?0:l.getDistanceFromCenterForValue(r.data[e]),g=i._starts[e],p=g+(t.hidden?0:i._angles[e]),v=s.animateScale?0:l.getDistanceFromCenterForValue(r.data[e]),m=t._options||{};ut.extend(t,{_datasetIndex:i.index,_index:e,_scale:l,_model:{backgroundColor:m.backgroundColor,borderColor:m.borderColor,borderWidth:m.borderWidth,borderAlign:m.borderAlign,x:d,y:c,innerRadius:0,outerRadius:n?v:f,startAngle:n&&s.animateRotate?h:g,endAngle:n&&s.animateRotate?h:p,label:ut.valueAtIndexOrDefault(u,e,u[e])}}),t.pivot()},countVisibleElements:function(){var t=this.getDataset(),e=this.getMeta(),n=0;return ut.each(e.data,function(e,i){isNaN(t.data[i])||e.hidden||n++}),n},setHoverStyle:function(t){var e=t._model,n=t._options,i=ut.getHoverColor,a=ut.valueOrDefault;t.$previousStyle={backgroundColor:e.backgroundColor,borderColor:e.borderColor,borderWidth:e.borderWidth},e.backgroundColor=a(n.hoverBackgroundColor,i(n.backgroundColor)),e.borderColor=a(n.hoverBorderColor,i(n.borderColor)),e.borderWidth=a(n.hoverBorderWidth,n.borderWidth)},_resolveElementOptions:function(t,e){var n,i,a,r=this.chart,o=this.getDataset(),s=t.custom||{},l=r.options.elements.arc,u={},d={chart:r,dataIndex:e,dataset:o,datasetIndex:this.index},c=[\"backgroundColor\",\"borderColor\",\"borderWidth\",\"borderAlign\",\"hoverBackgroundColor\",\"hoverBorderColor\",\"hoverBorderWidth\"];for(n=0,i=c.length;n<i;++n)u[a=c[n]]=ie([s[a],o[a],l[a]],d,e);return u},_computeAngle:function(t){var e=this,n=this.getMeta().count,i=e.getDataset(),a=e.getMeta();if(isNaN(i.data[t])||a.data[t].hidden)return 0;var r={chart:e.chart,dataIndex:t,dataset:i,datasetIndex:e.index};return ie([e.chart.options.elements.arc.angle,2*Math.PI/n],r,t)}});ot._set(\"pie\",ut.clone(ot.doughnut)),ot._set(\"pie\",{cutoutPercentage:0});var re=$t,oe=ut.valueOrDefault,se=ut.options.resolve;ot._set(\"radar\",{scale:{type:\"radialLinear\"},elements:{line:{tension:0}}});var le=wt.extend({datasetElementType:Bt.Line,dataElementType:Bt.Point,linkScales:ut.noop,update:function(t){var e,n,i=this,a=i.getMeta(),r=a.dataset,o=a.data||[],s=i.chart.scale,l=i.getDataset();for(void 0!==l.tension&&void 0===l.lineTension&&(l.lineTension=l.tension),r._scale=s,r._datasetIndex=i.index,r._children=o,r._loop=!0,r._model=i._resolveLineOptions(r),r.pivot(),e=0,n=o.length;e<n;++e)i.updateElement(o[e],e,t);for(i.updateBezierControlPoints(),e=0,n=o.length;e<n;++e)o[e].pivot()},updateElement:function(t,e,n){var i=this,a=t.custom||{},r=i.getDataset(),o=i.chart.scale,s=o.getPointPositionForValue(e,r.data[e]),l=i._resolvePointOptions(t,e),u=i.getMeta().dataset._model,d=n?o.xCenter:s.x,c=n?o.yCenter:s.y;t._scale=o,t._options=l,t._datasetIndex=i.index,t._index=e,t._model={x:d,y:c,skip:a.skip||isNaN(d)||isNaN(c),radius:l.radius,pointStyle:l.pointStyle,rotation:l.rotation,backgroundColor:l.backgroundColor,borderColor:l.borderColor,borderWidth:l.borderWidth,tension:oe(a.tension,u?u.tension:0),hitRadius:l.hitRadius}},_resolvePointOptions:function(t,e){var n,i,a,r=this.chart,o=r.data.datasets[this.index],s=t.custom||{},l=r.options.elements.point,u={},d={chart:r,dataIndex:e,dataset:o,datasetIndex:this.index},c={backgroundColor:\"pointBackgroundColor\",borderColor:\"pointBorderColor\",borderWidth:\"pointBorderWidth\",hitRadius:\"pointHitRadius\",hoverBackgroundColor:\"pointHoverBackgroundColor\",hoverBorderColor:\"pointHoverBorderColor\",hoverBorderWidth:\"pointHoverBorderWidth\",hoverRadius:\"pointHoverRadius\",pointStyle:\"pointStyle\",radius:\"pointRadius\",rotation:\"pointRotation\"},h=Object.keys(c);for(n=0,i=h.length;n<i;++n)a=h[n],u[a]=se([s[a],o[c[a]],o[a],l[a]],d,e);return u},_resolveLineOptions:function(t){var e,n,i,a=this.chart,r=a.data.datasets[this.index],o=t.custom||{},s=a.options.elements.line,l={},u=[\"backgroundColor\",\"borderWidth\",\"borderColor\",\"borderCapStyle\",\"borderDash\",\"borderDashOffset\",\"borderJoinStyle\",\"fill\"];for(e=0,n=u.length;e<n;++e)l[i=u[e]]=se([o[i],r[i],s[i]]);return l.tension=oe(r.lineTension,s.tension),l},updateBezierControlPoints:function(){var t,e,n,i,a=this.getMeta(),r=this.chart.chartArea,o=a.data||[];function s(t,e,n){return Math.max(Math.min(t,n),e)}for(t=0,e=o.length;t<e;++t)n=o[t]._model,i=ut.splineCurve(ut.previousItem(o,t,!0)._model,n,ut.nextItem(o,t,!0)._model,n.tension),n.controlPointPreviousX=s(i.previous.x,r.left,r.right),n.controlPointPreviousY=s(i.previous.y,r.top,r.bottom),n.controlPointNextX=s(i.next.x,r.left,r.right),n.controlPointNextY=s(i.next.y,r.top,r.bottom)},setHoverStyle:function(t){var e=t._model,n=t._options,i=ut.getHoverColor;t.$previousStyle={backgroundColor:e.backgroundColor,borderColor:e.borderColor,borderWidth:e.borderWidth,radius:e.radius},e.backgroundColor=oe(n.hoverBackgroundColor,i(n.backgroundColor)),e.borderColor=oe(n.hoverBorderColor,i(n.borderColor)),e.borderWidth=oe(n.hoverBorderWidth,n.borderWidth),e.radius=oe(n.hoverRadius,n.radius)}});ot._set(\"scatter\",{hover:{mode:\"single\"},scales:{xAxes:[{id:\"x-axis-1\",type:\"linear\",position:\"bottom\"}],yAxes:[{id:\"y-axis-1\",type:\"linear\",position:\"left\"}]},showLines:!1,tooltips:{callbacks:{title:function(){return\"\"},label:function(t){return\"(\"+t.xLabel+\", \"+t.yLabel+\")\"}}}});var ue={bar:qt,bubble:Kt,doughnut:$t,horizontalBar:Zt,line:ne,polarArea:ae,pie:re,radar:le,scatter:ne};function de(t,e){return t.native?{x:t.x,y:t.y}:ut.getRelativePosition(t,e)}function ce(t,e){var n,i,a,r,o,s=t.data.datasets;for(i=0,r=s.length;i<r;++i)if(t.isDatasetVisible(i))for(n=t.getDatasetMeta(i),a=0,o=n.data.length;a<o;++a){var l=n.data[a];l._view.skip||e(l)}}function he(t,e){var n=[];return ce(t,function(t){t.inRange(e.x,e.y)&&n.push(t)}),n}function fe(t,e,n,i){var a=Number.POSITIVE_INFINITY,r=[];return ce(t,function(t){if(!n||t.inRange(e.x,e.y)){var o=t.getCenterPoint(),s=i(e,o);s<a?(r=[t],a=s):s===a&&r.push(t)}}),r}function ge(t){var e=-1!==t.indexOf(\"x\"),n=-1!==t.indexOf(\"y\");return function(t,i){var a=e?Math.abs(t.x-i.x):0,r=n?Math.abs(t.y-i.y):0;return Math.sqrt(Math.pow(a,2)+Math.pow(r,2))}}function pe(t,e,n){var i=de(e,t);n.axis=n.axis||\"x\";var a=ge(n.axis),r=n.intersect?he(t,i):fe(t,i,!1,a),o=[];return r.length?(t.data.datasets.forEach(function(e,n){if(t.isDatasetVisible(n)){var i=t.getDatasetMeta(n),a=i.data[r[0]._index];a&&!a._view.skip&&o.push(a)}}),o):[]}var ve={modes:{single:function(t,e){var n=de(e,t),i=[];return ce(t,function(t){if(t.inRange(n.x,n.y))return i.push(t),i}),i.slice(0,1)},label:pe,index:pe,dataset:function(t,e,n){var i=de(e,t);n.axis=n.axis||\"xy\";var a=ge(n.axis),r=n.intersect?he(t,i):fe(t,i,!1,a);return r.length>0&&(r=t.getDatasetMeta(r[0]._datasetIndex).data),r},\"x-axis\":function(t,e){return pe(t,e,{intersect:!1})},point:function(t,e){var n=de(e,t);return he(t,n)},nearest:function(t,e,n){var i=de(e,t);n.axis=n.axis||\"xy\";var a=ge(n.axis);return fe(t,i,n.intersect,a)},x:function(t,e,n){var i=de(e,t),a=[],r=!1;return ce(t,function(t){t.inXRange(i.x)&&a.push(t),t.inRange(i.x,i.y)&&(r=!0)}),n.intersect&&!r&&(a=[]),a},y:function(t,e,n){var i=de(e,t),a=[],r=!1;return ce(t,function(t){t.inYRange(i.y)&&a.push(t),t.inRange(i.x,i.y)&&(r=!0)}),n.intersect&&!r&&(a=[]),a}}};function me(t,e){return ut.where(t,function(t){return t.position===e})}function be(t,e){t.forEach(function(t,e){return t._tmpIndex_=e,t}),t.sort(function(t,n){var i=e?n:t,a=e?t:n;return i.weight===a.weight?i._tmpIndex_-a._tmpIndex_:i.weight-a.weight}),t.forEach(function(t){delete t._tmpIndex_})}function ye(t,e){ut.each(t,function(t){e[t.position]+=t.isHorizontal()?t.height:t.width})}ot._set(\"global\",{layout:{padding:{top:0,right:0,bottom:0,left:0}}});var xe,ke={defaults:{},addBox:function(t,e){t.boxes||(t.boxes=[]),e.fullWidth=e.fullWidth||!1,e.position=e.position||\"top\",e.weight=e.weight||0,t.boxes.push(e)},removeBox:function(t,e){var n=t.boxes?t.boxes.indexOf(e):-1;-1!==n&&t.boxes.splice(n,1)},configure:function(t,e,n){for(var i,a=[\"fullWidth\",\"position\",\"weight\"],r=a.length,o=0;o<r;++o)i=a[o],n.hasOwnProperty(i)&&(e[i]=n[i])},update:function(t,e,n){if(t){var i=t.options.layout||{},a=ut.options.toPadding(i.padding),r=a.left,o=a.right,s=a.top,l=a.bottom,u=me(t.boxes,\"left\"),d=me(t.boxes,\"right\"),c=me(t.boxes,\"top\"),h=me(t.boxes,\"bottom\"),f=me(t.boxes,\"chartArea\");be(u,!0),be(d,!1),be(c,!0),be(h,!1);var g,p=u.concat(d),v=c.concat(h),m=p.concat(v),b=e-r-o,y=n-s-l,x=b/2,k=(e-x)/p.length,w=b,M=y,_={top:s,left:r,bottom:l,right:o},C=[];ut.each(m,function(t){var e,n=t.isHorizontal();n?(e=t.update(t.fullWidth?b:w,y/2),M-=e.height):(e=t.update(k,M),w-=e.width),C.push({horizontal:n,width:e.width,box:t})}),g=function(t){var e=0,n=0,i=0,a=0;return ut.each(t,function(t){if(t.getPadding){var r=t.getPadding();e=Math.max(e,r.top),n=Math.max(n,r.left),i=Math.max(i,r.bottom),a=Math.max(a,r.right)}}),{top:e,left:n,bottom:i,right:a}}(m),ut.each(p,F),ye(p,_),ut.each(v,F),ye(v,_),ut.each(p,function(t){var e=ut.findNextWhere(C,function(e){return e.box===t}),n={left:0,right:0,top:_.top,bottom:_.bottom};e&&t.update(e.width,M,n)}),ye(m,_={top:s,left:r,bottom:l,right:o});var S=Math.max(g.left-_.left,0);_.left+=S,_.right+=Math.max(g.right-_.right,0);var P=Math.max(g.top-_.top,0);_.top+=P,_.bottom+=Math.max(g.bottom-_.bottom,0);var I=n-_.top-_.bottom,A=e-_.left-_.right;A===w&&I===M||(ut.each(p,function(t){t.height=I}),ut.each(v,function(t){t.fullWidth||(t.width=A)}),M=I,w=A);var D=r+S,T=s+P;ut.each(u.concat(c),O),D+=w,T+=M,ut.each(d,O),ut.each(h,O),t.chartArea={left:_.left,top:_.top,right:_.left+w,bottom:_.top+M},ut.each(f,function(e){e.left=t.chartArea.left,e.top=t.chartArea.top,e.right=t.chartArea.right,e.bottom=t.chartArea.bottom,e.update(w,M)})}function F(t){var e=ut.findNextWhere(C,function(e){return e.box===t});if(e)if(e.horizontal){var n={left:Math.max(_.left,g.left),right:Math.max(_.right,g.right),top:0,bottom:0};t.update(t.fullWidth?b:w,y/2,n)}else t.update(e.width,M)}function O(t){t.isHorizontal()?(t.left=t.fullWidth?r:_.left,t.right=t.fullWidth?e-o:_.left+w,t.top=T,t.bottom=T+t.height,T=t.bottom):(t.left=D,t.right=D+t.width,t.top=_.top,t.bottom=_.top+M,D=t.right)}}},we=(xe=Object.freeze({default:\"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\"}))&&xe.default||xe,Me=\"$chartjs\",_e=\"chartjs-size-monitor\",Ce=\"chartjs-render-monitor\",Se=\"chartjs-render-animation\",Pe=[\"animationstart\",\"webkitAnimationStart\"],Ie={touchstart:\"mousedown\",touchmove:\"mousemove\",touchend:\"mouseup\",pointerenter:\"mouseenter\",pointerdown:\"mousedown\",pointermove:\"mousemove\",pointerup:\"mouseup\",pointerleave:\"mouseout\",pointerout:\"mouseout\"};function Ae(t,e){var n=ut.getStyle(t,e),i=n&&n.match(/^(\\d+)(\\.\\d+)?px$/);return i?Number(i[1]):void 0}var De=!!function(){var t=!1;try{var e=Object.defineProperty({},\"passive\",{get:function(){t=!0}});window.addEventListener(\"e\",null,e)}catch(n){}return t}()&&{passive:!0};function Te(t,e,n){t.addEventListener(e,n,De)}function Fe(t,e,n){t.removeEventListener(e,n,De)}function Oe(t,e,n,i,a){return{type:t,chart:e,native:a||null,x:void 0!==n?n:null,y:void 0!==i?i:null}}function Le(t){var e=document.createElement(\"div\");return e.className=t||\"\",e}function Re(t,e,n){var i=t[Me]||(t[Me]={}),a=i.resizer=function(t){var e=Le(_e),n=Le(_e+\"-expand\"),i=Le(_e+\"-shrink\");n.appendChild(Le()),i.appendChild(Le()),e.appendChild(n),e.appendChild(i),e._reset=function(){n.scrollLeft=1e6,n.scrollTop=1e6,i.scrollLeft=1e6,i.scrollTop=1e6};var a=function(){e._reset(),t()};return Te(n,\"scroll\",a.bind(n,\"expand\")),Te(i,\"scroll\",a.bind(i,\"shrink\")),e}(function(t,e){var n=!1,i=[];return function(){i=Array.prototype.slice.call(arguments),e=e||this,n||(n=!0,ut.requestAnimFrame.call(window,function(){n=!1,t.apply(e,i)}))}}(function(){if(i.resizer){var a=n.options.maintainAspectRatio&&t.parentNode,r=a?a.clientWidth:0;e(Oe(\"resize\",n)),a&&a.clientWidth<r&&n.canvas&&e(Oe(\"resize\",n))}}));!function(t,e){var n=t[Me]||(t[Me]={}),i=n.renderProxy=function(t){t.animationName===Se&&e()};ut.each(Pe,function(e){Te(t,e,i)}),n.reflow=!!t.offsetParent,t.classList.add(Ce)}(t,function(){if(i.resizer){var e=t.parentNode;e&&e!==a.parentNode&&e.insertBefore(a,e.firstChild),a._reset()}})}function ze(t){var e=t[Me]||{},n=e.resizer;delete e.resizer,function(t){var e=t[Me]||{},n=e.renderProxy;n&&(ut.each(Pe,function(e){Fe(t,e,n)}),delete e.renderProxy),t.classList.remove(Ce)}(t),n&&n.parentNode&&n.parentNode.removeChild(n)}var Ne={disableCSSInjection:!1,_enabled:\"undefined\"!==typeof window&&\"undefined\"!==typeof document,_ensureLoaded:function(){this._loaded||(this._loaded=!0,this.disableCSSInjection||function(t,e){var n=t._style||document.createElement(\"style\");t._style||(t._style=n,e=\"/* Chart.js */\\n\"+e,n.setAttribute(\"type\",\"text/css\"),document.getElementsByTagName(\"head\")[0].appendChild(n)),n.appendChild(document.createTextNode(e))}(this,we))},acquireContext:function(t,e){\"string\"===typeof t?t=document.getElementById(t):t.length&&(t=t[0]),t&&t.canvas&&(t=t.canvas);var n=t&&t.getContext&&t.getContext(\"2d\");return this._ensureLoaded(),n&&n.canvas===t?(function(t,e){var n=t.style,i=t.getAttribute(\"height\"),a=t.getAttribute(\"width\");if(t[Me]={initial:{height:i,width:a,style:{display:n.display,height:n.height,width:n.width}}},n.display=n.display||\"block\",null===a||\"\"===a){var r=Ae(t,\"width\");void 0!==r&&(t.width=r)}if(null===i||\"\"===i)if(\"\"===t.style.height)t.height=t.width/(e.options.aspectRatio||2);else{var o=Ae(t,\"height\");void 0!==r&&(t.height=o)}}(t,e),n):null},releaseContext:function(t){var e=t.canvas;if(e[Me]){var n=e[Me].initial;[\"height\",\"width\"].forEach(function(t){var i=n[t];ut.isNullOrUndef(i)?e.removeAttribute(t):e.setAttribute(t,i)}),ut.each(n.style||{},function(t,n){e.style[n]=t}),e.width=e.width,delete e[Me]}},addEventListener:function(t,e,n){var i=t.canvas;if(\"resize\"!==e){var a=n[Me]||(n[Me]={}),r=a.proxies||(a.proxies={}),o=r[t.id+\"_\"+e]=function(e){n(function(t,e){var n=Ie[t.type]||t.type,i=ut.getRelativePosition(t,e);return Oe(n,e,i.x,i.y,t)}(e,t))};Te(i,e,o)}else Re(i,n,t)},removeEventListener:function(t,e,n){var i=t.canvas;if(\"resize\"!==e){var a=n[Me]||{},r=a.proxies||{},o=r[t.id+\"_\"+e];o&&Fe(i,e,o)}else ze(i)}};ut.addEvent=Te,ut.removeEvent=Fe;var Be=Ne._enabled?Ne:{acquireContext:function(t){return t&&t.canvas&&(t=t.canvas),t&&t.getContext(\"2d\")||null}},We=ut.extend({initialize:function(){},acquireContext:function(){},releaseContext:function(){},addEventListener:function(){},removeEventListener:function(){}},Be);ot._set(\"global\",{plugins:{}});var Ee={_plugins:[],_cacheId:0,register:function(t){var e=this._plugins;[].concat(t).forEach(function(t){-1===e.indexOf(t)&&e.push(t)}),this._cacheId++},unregister:function(t){var e=this._plugins;[].concat(t).forEach(function(t){var n=e.indexOf(t);-1!==n&&e.splice(n,1)}),this._cacheId++},clear:function(){this._plugins=[],this._cacheId++},count:function(){return this._plugins.length},getAll:function(){return this._plugins},notify:function(t,e,n){var i,a,r,o,s,l=this.descriptors(t),u=l.length;for(i=0;i<u;++i)if(a=l[i],r=a.plugin,\"function\"===typeof(s=r[e])&&((o=[t].concat(n||[])).push(a.options),!1===s.apply(r,o)))return!1;return!0},descriptors:function(t){var e=t.$plugins||(t.$plugins={});if(e.id===this._cacheId)return e.descriptors;var n=[],i=[],a=t&&t.config||{},r=a.options&&a.options.plugins||{};return this._plugins.concat(a.plugins||[]).forEach(function(t){var e=n.indexOf(t);if(-1===e){var a=t.id,o=r[a];!1!==o&&(!0===o&&(o=ut.clone(ot.global.plugins[a])),n.push(t),i.push({plugin:t,options:o||{}}))}}),e.descriptors=i,e.id=this._cacheId,i},_invalidate:function(t){delete t.$plugins}},Ve={constructors:{},defaults:{},registerScaleType:function(t,e,n){this.constructors[t]=e,this.defaults[t]=ut.clone(n)},getScaleConstructor:function(t){return this.constructors.hasOwnProperty(t)?this.constructors[t]:void 0},getScaleDefaults:function(t){return this.defaults.hasOwnProperty(t)?ut.merge({},[ot.scale,this.defaults[t]]):{}},updateScaleDefaults:function(t,e){this.defaults.hasOwnProperty(t)&&(this.defaults[t]=ut.extend(this.defaults[t],e))},addScalesToLayout:function(t){ut.each(t.scales,function(e){e.fullWidth=e.options.fullWidth,e.position=e.options.position,e.weight=e.options.weight,ke.addBox(t,e)})}},He=ut.valueOrDefault;ot._set(\"global\",{tooltips:{enabled:!0,custom:null,mode:\"nearest\",position:\"average\",intersect:!0,backgroundColor:\"rgba(0,0,0,0.8)\",titleFontStyle:\"bold\",titleSpacing:2,titleMarginBottom:6,titleFontColor:\"#fff\",titleAlign:\"left\",bodySpacing:2,bodyFontColor:\"#fff\",bodyAlign:\"left\",footerFontStyle:\"bold\",footerSpacing:2,footerMarginTop:6,footerFontColor:\"#fff\",footerAlign:\"left\",yPadding:6,xPadding:6,caretPadding:2,caretSize:5,cornerRadius:6,multiKeyBackground:\"#fff\",displayColors:!0,borderColor:\"rgba(0,0,0,0)\",borderWidth:0,callbacks:{beforeTitle:ut.noop,title:function(t,e){var n=\"\",i=e.labels,a=i?i.length:0;if(t.length>0){var r=t[0];r.label?n=r.label:r.xLabel?n=r.xLabel:a>0&&r.index<a&&(n=i[r.index])}return n},afterTitle:ut.noop,beforeBody:ut.noop,beforeLabel:ut.noop,label:function(t,e){var n=e.datasets[t.datasetIndex].label||\"\";return n&&(n+=\": \"),ut.isNullOrUndef(t.value)?n+=t.yLabel:n+=t.value,n},labelColor:function(t,e){var n=e.getDatasetMeta(t.datasetIndex),i=n.data[t.index],a=i._view;return{borderColor:a.borderColor,backgroundColor:a.backgroundColor}},labelTextColor:function(){return this._options.bodyFontColor},afterLabel:ut.noop,afterBody:ut.noop,beforeFooter:ut.noop,footer:ut.noop,afterFooter:ut.noop}}});var je={average:function(t){if(!t.length)return!1;var e,n,i=0,a=0,r=0;for(e=0,n=t.length;e<n;++e){var o=t[e];if(o&&o.hasValue()){var s=o.tooltipPosition();i+=s.x,a+=s.y,++r}}return{x:i/r,y:a/r}},nearest:function(t,e){var n,i,a,r=e.x,o=e.y,s=Number.POSITIVE_INFINITY;for(n=0,i=t.length;n<i;++n){var l=t[n];if(l&&l.hasValue()){var u=l.getCenterPoint(),d=ut.distanceBetweenPoints(e,u);d<s&&(s=d,a=l)}}if(a){var c=a.tooltipPosition();r=c.x,o=c.y}return{x:r,y:o}}};function qe(t,e){return e&&(ut.isArray(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function Ue(t){return(\"string\"===typeof t||t instanceof String)&&t.indexOf(\"\\n\")>-1?t.split(\"\\n\"):t}function Ye(t){var e=t._xScale,n=t._yScale||t._scale,i=t._index,a=t._datasetIndex,r=t._chart.getDatasetMeta(a).controller,o=r._getIndexScale(),s=r._getValueScale();return{xLabel:e?e.getLabelForIndex(i,a):\"\",yLabel:n?n.getLabelForIndex(i,a):\"\",label:o?\"\"+o.getLabelForIndex(i,a):\"\",value:s?\"\"+s.getLabelForIndex(i,a):\"\",index:i,datasetIndex:a,x:t._model.x,y:t._model.y}}function Ke(t){var e=ot.global;return{xPadding:t.xPadding,yPadding:t.yPadding,xAlign:t.xAlign,yAlign:t.yAlign,bodyFontColor:t.bodyFontColor,_bodyFontFamily:He(t.bodyFontFamily,e.defaultFontFamily),_bodyFontStyle:He(t.bodyFontStyle,e.defaultFontStyle),_bodyAlign:t.bodyAlign,bodyFontSize:He(t.bodyFontSize,e.defaultFontSize),bodySpacing:t.bodySpacing,titleFontColor:t.titleFontColor,_titleFontFamily:He(t.titleFontFamily,e.defaultFontFamily),_titleFontStyle:He(t.titleFontStyle,e.defaultFontStyle),titleFontSize:He(t.titleFontSize,e.defaultFontSize),_titleAlign:t.titleAlign,titleSpacing:t.titleSpacing,titleMarginBottom:t.titleMarginBottom,footerFontColor:t.footerFontColor,_footerFontFamily:He(t.footerFontFamily,e.defaultFontFamily),_footerFontStyle:He(t.footerFontStyle,e.defaultFontStyle),footerFontSize:He(t.footerFontSize,e.defaultFontSize),_footerAlign:t.footerAlign,footerSpacing:t.footerSpacing,footerMarginTop:t.footerMarginTop,caretSize:t.caretSize,cornerRadius:t.cornerRadius,backgroundColor:t.backgroundColor,opacity:0,legendColorBackground:t.multiKeyBackground,displayColors:t.displayColors,borderColor:t.borderColor,borderWidth:t.borderWidth}}function Xe(t,e){return\"center\"===e?t.x+t.width/2:\"right\"===e?t.x+t.width-t.xPadding:t.x+t.xPadding}function Ge(t){return qe([],Ue(t))}var $e=gt.extend({initialize:function(){this._model=Ke(this._options),this._lastActive=[]},getTitle:function(){var t=this._options,e=t.callbacks,n=e.beforeTitle.apply(this,arguments),i=e.title.apply(this,arguments),a=e.afterTitle.apply(this,arguments),r=[];return r=qe(r,Ue(n)),r=qe(r,Ue(i)),r=qe(r,Ue(a))},getBeforeBody:function(){return Ge(this._options.callbacks.beforeBody.apply(this,arguments))},getBody:function(t,e){var n=this,i=n._options.callbacks,a=[];return ut.each(t,function(t){var r={before:[],lines:[],after:[]};qe(r.before,Ue(i.beforeLabel.call(n,t,e))),qe(r.lines,i.label.call(n,t,e)),qe(r.after,Ue(i.afterLabel.call(n,t,e))),a.push(r)}),a},getAfterBody:function(){return Ge(this._options.callbacks.afterBody.apply(this,arguments))},getFooter:function(){var t=this._options.callbacks,e=t.beforeFooter.apply(this,arguments),n=t.footer.apply(this,arguments),i=t.afterFooter.apply(this,arguments),a=[];return a=qe(a,Ue(e)),a=qe(a,Ue(n)),a=qe(a,Ue(i))},update:function(t){var e,n,i=this,a=i._options,r=i._model,o=i._model=Ke(a),s=i._active,l=i._data,u={xAlign:r.xAlign,yAlign:r.yAlign},d={x:r.x,y:r.y},c={width:r.width,height:r.height},h={x:r.caretX,y:r.caretY};if(s.length){o.opacity=1;var f=[],g=[];h=je[a.position].call(i,s,i._eventPosition);var p=[];for(e=0,n=s.length;e<n;++e)p.push(Ye(s[e]));a.filter&&(p=p.filter(function(t){return a.filter(t,l)})),a.itemSort&&(p=p.sort(function(t,e){return a.itemSort(t,e,l)})),ut.each(p,function(t){f.push(a.callbacks.labelColor.call(i,t,i._chart)),g.push(a.callbacks.labelTextColor.call(i,t,i._chart))}),o.title=i.getTitle(p,l),o.beforeBody=i.getBeforeBody(p,l),o.body=i.getBody(p,l),o.afterBody=i.getAfterBody(p,l),o.footer=i.getFooter(p,l),o.x=h.x,o.y=h.y,o.caretPadding=a.caretPadding,o.labelColors=f,o.labelTextColors=g,o.dataPoints=p,c=function(t,e){var n=t._chart.ctx,i=2*e.yPadding,a=0,r=e.body,o=r.reduce(function(t,e){return t+e.before.length+e.lines.length+e.after.length},0);o+=e.beforeBody.length+e.afterBody.length;var s=e.title.length,l=e.footer.length,u=e.titleFontSize,d=e.bodyFontSize,c=e.footerFontSize;i+=s*u,i+=s?(s-1)*e.titleSpacing:0,i+=s?e.titleMarginBottom:0,i+=o*d,i+=o?(o-1)*e.bodySpacing:0,i+=l?e.footerMarginTop:0,i+=l*c,i+=l?(l-1)*e.footerSpacing:0;var h=0,f=function(t){a=Math.max(a,n.measureText(t).width+h)};return n.font=ut.fontString(u,e._titleFontStyle,e._titleFontFamily),ut.each(e.title,f),n.font=ut.fontString(d,e._bodyFontStyle,e._bodyFontFamily),ut.each(e.beforeBody.concat(e.afterBody),f),h=e.displayColors?d+2:0,ut.each(r,function(t){ut.each(t.before,f),ut.each(t.lines,f),ut.each(t.after,f)}),h=0,n.font=ut.fontString(c,e._footerFontStyle,e._footerFontFamily),ut.each(e.footer,f),{width:a+=2*e.xPadding,height:i}}(this,o),u=function(t,e){var n,i,a,r,o,s=t._model,l=t._chart,u=t._chart.chartArea,d=\"center\",c=\"center\";s.y<e.height?c=\"top\":s.y>l.height-e.height&&(c=\"bottom\");var h=(u.left+u.right)/2,f=(u.top+u.bottom)/2;\"center\"===c?(n=function(t){return t<=h},i=function(t){return t>h}):(n=function(t){return t<=e.width/2},i=function(t){return t>=l.width-e.width/2}),a=function(t){return t+e.width+s.caretSize+s.caretPadding>l.width},r=function(t){return t-e.width-s.caretSize-s.caretPadding<0},o=function(t){return t<=f?\"top\":\"bottom\"},n(s.x)?(d=\"left\",a(s.x)&&(d=\"center\",c=o(s.y))):i(s.x)&&(d=\"right\",r(s.x)&&(d=\"center\",c=o(s.y)));var g=t._options;return{xAlign:g.xAlign?g.xAlign:d,yAlign:g.yAlign?g.yAlign:c}}(this,c),d=function(t,e,n,i){var a=t.x,r=t.y,o=t.caretSize,s=t.caretPadding,l=t.cornerRadius,u=n.xAlign,d=n.yAlign,c=o+s,h=l+s;return\"right\"===u?a-=e.width:\"center\"===u&&((a-=e.width/2)+e.width>i.width&&(a=i.width-e.width),a<0&&(a=0)),\"top\"===d?r+=c:r-=\"bottom\"===d?e.height+c:e.height/2,\"center\"===d?\"left\"===u?a+=c:\"right\"===u&&(a-=c):\"left\"===u?a-=h:\"right\"===u&&(a+=h),{x:a,y:r}}(o,c,u,i._chart)}else o.opacity=0;return o.xAlign=u.xAlign,o.yAlign=u.yAlign,o.x=d.x,o.y=d.y,o.width=c.width,o.height=c.height,o.caretX=h.x,o.caretY=h.y,i._model=o,t&&a.custom&&a.custom.call(i,o),i},drawCaret:function(t,e){var n=this._chart.ctx,i=this._view,a=this.getCaretPosition(t,e,i);n.lineTo(a.x1,a.y1),n.lineTo(a.x2,a.y2),n.lineTo(a.x3,a.y3)},getCaretPosition:function(t,e,n){var i,a,r,o,s,l,u=n.caretSize,d=n.cornerRadius,c=n.xAlign,h=n.yAlign,f=t.x,g=t.y,p=e.width,v=e.height;if(\"center\"===h)s=g+v/2,\"left\"===c?(a=(i=f)-u,r=i,o=s+u,l=s-u):(a=(i=f+p)+u,r=i,o=s-u,l=s+u);else if(\"left\"===c?(i=(a=f+d+u)-u,r=a+u):\"right\"===c?(i=(a=f+p-d-u)-u,r=a+u):(a=n.caretX,i=a-u,r=a+u),\"top\"===h)s=(o=g)-u,l=o;else{s=(o=g+v)+u,l=o;var m=r;r=i,i=m}return{x1:i,x2:a,x3:r,y1:o,y2:s,y3:l}},drawTitle:function(t,e,n){var i=e.title;if(i.length){t.x=Xe(e,e._titleAlign),n.textAlign=e._titleAlign,n.textBaseline=\"top\";var a,r,o=e.titleFontSize,s=e.titleSpacing;for(n.fillStyle=e.titleFontColor,n.font=ut.fontString(o,e._titleFontStyle,e._titleFontFamily),a=0,r=i.length;a<r;++a)n.fillText(i[a],t.x,t.y),t.y+=o+s,a+1===i.length&&(t.y+=e.titleMarginBottom-s)}},drawBody:function(t,e,n){var i,a=e.bodyFontSize,r=e.bodySpacing,o=e._bodyAlign,s=e.body,l=e.displayColors,u=e.labelColors,d=0,c=l?Xe(e,\"left\"):0;n.textAlign=o,n.textBaseline=\"top\",n.font=ut.fontString(a,e._bodyFontStyle,e._bodyFontFamily),t.x=Xe(e,o);var h=function(e){n.fillText(e,t.x+d,t.y),t.y+=a+r};n.fillStyle=e.bodyFontColor,ut.each(e.beforeBody,h),d=l&&\"right\"!==o?\"center\"===o?a/2+1:a+2:0,ut.each(s,function(r,o){i=e.labelTextColors[o],n.fillStyle=i,ut.each(r.before,h),ut.each(r.lines,function(r){l&&(n.fillStyle=e.legendColorBackground,n.fillRect(c,t.y,a,a),n.lineWidth=1,n.strokeStyle=u[o].borderColor,n.strokeRect(c,t.y,a,a),n.fillStyle=u[o].backgroundColor,n.fillRect(c+1,t.y+1,a-2,a-2),n.fillStyle=i),h(r)}),ut.each(r.after,h)}),d=0,ut.each(e.afterBody,h),t.y-=r},drawFooter:function(t,e,n){var i=e.footer;i.length&&(t.x=Xe(e,e._footerAlign),t.y+=e.footerMarginTop,n.textAlign=e._footerAlign,n.textBaseline=\"top\",n.fillStyle=e.footerFontColor,n.font=ut.fontString(e.footerFontSize,e._footerFontStyle,e._footerFontFamily),ut.each(i,function(i){n.fillText(i,t.x,t.y),t.y+=e.footerFontSize+e.footerSpacing}))},drawBackground:function(t,e,n,i){n.fillStyle=e.backgroundColor,n.strokeStyle=e.borderColor,n.lineWidth=e.borderWidth;var a=e.xAlign,r=e.yAlign,o=t.x,s=t.y,l=i.width,u=i.height,d=e.cornerRadius;n.beginPath(),n.moveTo(o+d,s),\"top\"===r&&this.drawCaret(t,i),n.lineTo(o+l-d,s),n.quadraticCurveTo(o+l,s,o+l,s+d),\"center\"===r&&\"right\"===a&&this.drawCaret(t,i),n.lineTo(o+l,s+u-d),n.quadraticCurveTo(o+l,s+u,o+l-d,s+u),\"bottom\"===r&&this.drawCaret(t,i),n.lineTo(o+d,s+u),n.quadraticCurveTo(o,s+u,o,s+u-d),\"center\"===r&&\"left\"===a&&this.drawCaret(t,i),n.lineTo(o,s+d),n.quadraticCurveTo(o,s,o+d,s),n.closePath(),n.fill(),e.borderWidth>0&&n.stroke()},draw:function(){var t=this._chart.ctx,e=this._view;if(0!==e.opacity){var n={width:e.width,height:e.height},i={x:e.x,y:e.y},a=Math.abs(e.opacity<.001)?0:e.opacity,r=e.title.length||e.beforeBody.length||e.body.length||e.afterBody.length||e.footer.length;this._options.enabled&&r&&(t.save(),t.globalAlpha=a,this.drawBackground(i,e,t,n),i.y+=e.yPadding,this.drawTitle(i,e,t),this.drawBody(i,e,t),this.drawFooter(i,e,t),t.restore())}},handleEvent:function(t){var e=this,n=e._options,i=!1;return e._lastActive=e._lastActive||[],\"mouseout\"===t.type?e._active=[]:e._active=e._chart.getElementsAtEventForMode(t,n.mode,n),(i=!ut.arrayEquals(e._active,e._lastActive))&&(e._lastActive=e._active,(n.enabled||n.custom)&&(e._eventPosition={x:t.x,y:t.y},e.update(!0),e.pivot())),i}}),Ze=je,Je=$e;Je.positioners=Ze;var Qe=ut.valueOrDefault;function tn(){return ut.merge({},[].slice.call(arguments),{merger:function(t,e,n,i){if(\"xAxes\"===t||\"yAxes\"===t){var a,r,o,s=n[t].length;for(e[t]||(e[t]=[]),a=0;a<s;++a)o=n[t][a],r=Qe(o.type,\"xAxes\"===t?\"category\":\"linear\"),a>=e[t].length&&e[t].push({}),!e[t][a].type||o.type&&o.type!==e[t][a].type?ut.merge(e[t][a],[Ve.getScaleDefaults(r),o]):ut.merge(e[t][a],o)}else ut._merger(t,e,n,i)}})}function en(){return ut.merge({},[].slice.call(arguments),{merger:function(t,e,n,i){var a=e[t]||{},r=n[t];\"scales\"===t?e[t]=tn(a,r):\"scale\"===t?e[t]=ut.merge(a,[Ve.getScaleDefaults(r.type),r]):ut._merger(t,e,n,i)}})}function nn(t){return\"top\"===t||\"bottom\"===t}ot._set(\"global\",{elements:{},events:[\"mousemove\",\"mouseout\",\"click\",\"touchstart\",\"touchmove\"],hover:{onHover:null,mode:\"nearest\",intersect:!0,animationDuration:400},onClick:null,maintainAspectRatio:!0,responsive:!0,responsiveAnimationDuration:0});var an=function(t,e){return this.construct(t,e),this};ut.extend(an.prototype,{construct:function(t,e){var n=this;e=function(t){var e=(t=t||{}).data=t.data||{};return e.datasets=e.datasets||[],e.labels=e.labels||[],t.options=en(ot.global,ot[t.type],t.options||{}),t}(e);var i=We.acquireContext(t,e),a=i&&i.canvas,r=a&&a.height,o=a&&a.width;n.id=ut.uid(),n.ctx=i,n.canvas=a,n.config=e,n.width=o,n.height=r,n.aspectRatio=r?o/r:null,n.options=e.options,n._bufferedRender=!1,n.chart=n,n.controller=n,an.instances[n.id]=n,Object.defineProperty(n,\"data\",{get:function(){return n.config.data},set:function(t){n.config.data=t}}),i&&a?(n.initialize(),n.update()):console.error(\"Failed to create chart: can't acquire context from the given item\")},initialize:function(){var t=this;return Ee.notify(t,\"beforeInit\"),ut.retinaScale(t,t.options.devicePixelRatio),t.bindEvents(),t.options.responsive&&t.resize(!0),t.ensureScalesHaveIDs(),t.buildOrUpdateScales(),t.initToolTip(),Ee.notify(t,\"afterInit\"),t},clear:function(){return ut.canvas.clear(this),this},stop:function(){return mt.cancelAnimation(this),this},resize:function(t){var e=this,n=e.options,i=e.canvas,a=n.maintainAspectRatio&&e.aspectRatio||null,r=Math.max(0,Math.floor(ut.getMaximumWidth(i))),o=Math.max(0,Math.floor(a?r/a:ut.getMaximumHeight(i)));if((e.width!==r||e.height!==o)&&(i.width=e.width=r,i.height=e.height=o,i.style.width=r+\"px\",i.style.height=o+\"px\",ut.retinaScale(e,n.devicePixelRatio),!t)){var s={width:r,height:o};Ee.notify(e,\"resize\",[s]),n.onResize&&n.onResize(e,s),e.stop(),e.update({duration:n.responsiveAnimationDuration})}},ensureScalesHaveIDs:function(){var t=this.options,e=t.scales||{},n=t.scale;ut.each(e.xAxes,function(t,e){t.id=t.id||\"x-axis-\"+e}),ut.each(e.yAxes,function(t,e){t.id=t.id||\"y-axis-\"+e}),n&&(n.id=n.id||\"scale\")},buildOrUpdateScales:function(){var t=this,e=t.options,n=t.scales||{},i=[],a=Object.keys(n).reduce(function(t,e){return t[e]=!1,t},{});e.scales&&(i=i.concat((e.scales.xAxes||[]).map(function(t){return{options:t,dtype:\"category\",dposition:\"bottom\"}}),(e.scales.yAxes||[]).map(function(t){return{options:t,dtype:\"linear\",dposition:\"left\"}}))),e.scale&&i.push({options:e.scale,dtype:\"radialLinear\",isDefault:!0,dposition:\"chartArea\"}),ut.each(i,function(e){var i=e.options,r=i.id,o=Qe(i.type,e.dtype);nn(i.position)!==nn(e.dposition)&&(i.position=e.dposition),a[r]=!0;var s=null;if(r in n&&n[r].type===o)(s=n[r]).options=i,s.ctx=t.ctx,s.chart=t;else{var l=Ve.getScaleConstructor(o);if(!l)return;s=new l({id:r,type:o,options:i,ctx:t.ctx,chart:t}),n[s.id]=s}s.mergeTicksOptions(),e.isDefault&&(t.scale=s)}),ut.each(a,function(t,e){t||delete n[e]}),t.scales=n,Ve.addScalesToLayout(this)},buildOrUpdateControllers:function(){var t=this,e=[];return ut.each(t.data.datasets,function(n,i){var a=t.getDatasetMeta(i),r=n.type||t.config.type;if(a.type&&a.type!==r&&(t.destroyDatasetMeta(i),a=t.getDatasetMeta(i)),a.type=r,a.controller)a.controller.updateIndex(i),a.controller.linkScales();else{var o=ue[a.type];if(void 0===o)throw new Error('\"'+a.type+'\" is not a chart type.');a.controller=new o(t,i),e.push(a.controller)}},t),e},resetElements:function(){var t=this;ut.each(t.data.datasets,function(e,n){t.getDatasetMeta(n).controller.reset()},t)},reset:function(){this.resetElements(),this.tooltip.initialize()},update:function(t){var e=this;if(t&&\"object\"===typeof t||(t={duration:t,lazy:arguments[1]}),function(t){var e=t.options;ut.each(t.scales,function(e){ke.removeBox(t,e)}),e=en(ot.global,ot[t.config.type],e),t.options=t.config.options=e,t.ensureScalesHaveIDs(),t.buildOrUpdateScales(),t.tooltip._options=e.tooltips,t.tooltip.initialize()}(e),Ee._invalidate(e),!1!==Ee.notify(e,\"beforeUpdate\")){e.tooltip._data=e.data;var n=e.buildOrUpdateControllers();ut.each(e.data.datasets,function(t,n){e.getDatasetMeta(n).controller.buildOrUpdateElements()},e),e.updateLayout(),e.options.animation&&e.options.animation.duration&&ut.each(n,function(t){t.reset()}),e.updateDatasets(),e.tooltip.initialize(),e.lastActive=[],Ee.notify(e,\"afterUpdate\"),e._bufferedRender?e._bufferedRequest={duration:t.duration,easing:t.easing,lazy:t.lazy}:e.render(t)}},updateLayout:function(){!1!==Ee.notify(this,\"beforeLayout\")&&(ke.update(this,this.width,this.height),Ee.notify(this,\"afterScaleUpdate\"),Ee.notify(this,\"afterLayout\"))},updateDatasets:function(){if(!1!==Ee.notify(this,\"beforeDatasetsUpdate\")){for(var t=0,e=this.data.datasets.length;t<e;++t)this.updateDataset(t);Ee.notify(this,\"afterDatasetsUpdate\")}},updateDataset:function(t){var e=this.getDatasetMeta(t),n={meta:e,index:t};!1!==Ee.notify(this,\"beforeDatasetUpdate\",[n])&&(e.controller.update(),Ee.notify(this,\"afterDatasetUpdate\",[n]))},render:function(t){var e=this;t&&\"object\"===typeof t||(t={duration:t,lazy:arguments[1]});var n=e.options.animation,i=Qe(t.duration,n&&n.duration),a=t.lazy;if(!1!==Ee.notify(e,\"beforeRender\")){var r=function(t){Ee.notify(e,\"afterRender\"),ut.callback(n&&n.onComplete,[t],e)};if(n&&i){var o=new vt({numSteps:i/16.66,easing:t.easing||n.easing,render:function(t,e){var n=ut.easing.effects[e.easing],i=e.currentStep,a=i/e.numSteps;t.draw(n(a),a,i)},onAnimationProgress:n.onProgress,onAnimationComplete:r});mt.addAnimation(e,o,i,a)}else e.draw(),r(new vt({numSteps:0,chart:e}));return e}},draw:function(t){var e=this;e.clear(),ut.isNullOrUndef(t)&&(t=1),e.transition(t),e.width<=0||e.height<=0||!1!==Ee.notify(e,\"beforeDraw\",[t])&&(ut.each(e.boxes,function(t){t.draw(e.chartArea)},e),e.drawDatasets(t),e._drawTooltip(t),Ee.notify(e,\"afterDraw\",[t]))},transition:function(t){for(var e=0,n=(this.data.datasets||[]).length;e<n;++e)this.isDatasetVisible(e)&&this.getDatasetMeta(e).controller.transition(t);this.tooltip.transition(t)},drawDatasets:function(t){var e=this;if(!1!==Ee.notify(e,\"beforeDatasetsDraw\",[t])){for(var n=(e.data.datasets||[]).length-1;n>=0;--n)e.isDatasetVisible(n)&&e.drawDataset(n,t);Ee.notify(e,\"afterDatasetsDraw\",[t])}},drawDataset:function(t,e){var n=this.getDatasetMeta(t),i={meta:n,index:t,easingValue:e};!1!==Ee.notify(this,\"beforeDatasetDraw\",[i])&&(n.controller.draw(e),Ee.notify(this,\"afterDatasetDraw\",[i]))},_drawTooltip:function(t){var e=this.tooltip,n={tooltip:e,easingValue:t};!1!==Ee.notify(this,\"beforeTooltipDraw\",[n])&&(e.draw(),Ee.notify(this,\"afterTooltipDraw\",[n]))},getElementAtEvent:function(t){return ve.modes.single(this,t)},getElementsAtEvent:function(t){return ve.modes.label(this,t,{intersect:!0})},getElementsAtXAxis:function(t){return ve.modes[\"x-axis\"](this,t,{intersect:!0})},getElementsAtEventForMode:function(t,e,n){var i=ve.modes[e];return\"function\"===typeof i?i(this,t,n):[]},getDatasetAtEvent:function(t){return ve.modes.dataset(this,t,{intersect:!0})},getDatasetMeta:function(t){var e=this.data.datasets[t];e._meta||(e._meta={});var n=e._meta[this.id];return n||(n=e._meta[this.id]={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null}),n},getVisibleDatasetCount:function(){for(var t=0,e=0,n=this.data.datasets.length;e<n;++e)this.isDatasetVisible(e)&&t++;return t},isDatasetVisible:function(t){var e=this.getDatasetMeta(t);return\"boolean\"===typeof e.hidden?!e.hidden:!this.data.datasets[t].hidden},generateLegend:function(){return this.options.legendCallback(this)},destroyDatasetMeta:function(t){var e=this.id,n=this.data.datasets[t],i=n._meta&&n._meta[e];i&&(i.controller.destroy(),delete n._meta[e])},destroy:function(){var t,e,n=this,i=n.canvas;for(n.stop(),t=0,e=n.data.datasets.length;t<e;++t)n.destroyDatasetMeta(t);i&&(n.unbindEvents(),ut.canvas.clear(n),We.releaseContext(n.ctx),n.canvas=null,n.ctx=null),Ee.notify(n,\"destroy\"),delete an.instances[n.id]},toBase64Image:function(){return this.canvas.toDataURL.apply(this.canvas,arguments)},initToolTip:function(){var t=this;t.tooltip=new Je({_chart:t,_chartInstance:t,_data:t.data,_options:t.options.tooltips},t)},bindEvents:function(){var t=this,e=t._listeners={},n=function(){t.eventHandler.apply(t,arguments)};ut.each(t.options.events,function(i){We.addEventListener(t,i,n),e[i]=n}),t.options.responsive&&(n=function(){t.resize()},We.addEventListener(t,\"resize\",n),e.resize=n)},unbindEvents:function(){var t=this,e=t._listeners;e&&(delete t._listeners,ut.each(e,function(e,n){We.removeEventListener(t,n,e)}))},updateHoverStyle:function(t,e,n){var i,a,r,o=n?\"setHoverStyle\":\"removeHoverStyle\";for(a=0,r=t.length;a<r;++a)(i=t[a])&&this.getDatasetMeta(i._datasetIndex).controller[o](i)},eventHandler:function(t){var e=this,n=e.tooltip;if(!1!==Ee.notify(e,\"beforeEvent\",[t])){e._bufferedRender=!0,e._bufferedRequest=null;var i=e.handleEvent(t);n&&(i=n._start?n.handleEvent(t):i|n.handleEvent(t)),Ee.notify(e,\"afterEvent\",[t]);var a=e._bufferedRequest;return a?e.render(a):i&&!e.animating&&(e.stop(),e.render({duration:e.options.hover.animationDuration,lazy:!0})),e._bufferedRender=!1,e._bufferedRequest=null,e}},handleEvent:function(t){var e=this,n=e.options||{},i=n.hover,a=!1;return e.lastActive=e.lastActive||[],\"mouseout\"===t.type?e.active=[]:e.active=e.getElementsAtEventForMode(t,i.mode,i),ut.callback(n.onHover||n.hover.onHover,[t.native,e.active],e),\"mouseup\"!==t.type&&\"click\"!==t.type||n.onClick&&n.onClick.call(e,t.native,e.active),e.lastActive.length&&e.updateHoverStyle(e.lastActive,i.mode,!1),e.active.length&&i.mode&&e.updateHoverStyle(e.active,i.mode,!0),a=!ut.arrayEquals(e.active,e.lastActive),e.lastActive=e.active,a}}),an.instances={};var rn=an;function on(){throw new Error(\"This method is not implemented: either no adapter can be found or an incomplete integration was provided.\")}function sn(t){this.options=t||{}}an.Controller=an,an.types={},ut.configMerge=en,ut.scaleMerge=tn,ut.extend(sn.prototype,{formats:on,parse:on,format:on,add:on,diff:on,startOf:on,endOf:on,_create:function(t){return t}}),sn.override=function(t){ut.extend(sn.prototype,t)};var ln={_date:sn},un={formatters:{values:function(t){return ut.isArray(t)?t:\"\"+t},linear:function(t,e,n){var i=n.length>3?n[2]-n[1]:n[1]-n[0];Math.abs(i)>1&&t!==Math.floor(t)&&(i=t-Math.floor(t));var a=ut.log10(Math.abs(i)),r=\"\";if(0!==t){var o=Math.max(Math.abs(n[0]),Math.abs(n[n.length-1]));if(o<1e-4){var s=ut.log10(Math.abs(t));r=t.toExponential(Math.floor(s)-Math.floor(a))}else{var l=-1*Math.floor(a);l=Math.max(Math.min(l,20),0),r=t.toFixed(l)}}else r=\"0\";return r},logarithmic:function(t,e,n){var i=t/Math.pow(10,Math.floor(ut.log10(t)));return 0===t?\"0\":1===i||2===i||5===i||0===e||e===n.length-1?t.toExponential():\"\"}}},dn=ut.valueOrDefault,cn=ut.valueAtIndexOrDefault;function hn(t){var e,n,i=[];for(e=0,n=t.length;e<n;++e)i.push(t[e].label);return i}function fn(t,e,n){return ut.isArray(e)?ut.longestText(t,n,e):t.measureText(e).width}ot._set(\"scale\",{display:!0,position:\"left\",offset:!1,gridLines:{display:!0,color:\"rgba(0, 0, 0, 0.1)\",lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickMarkLength:10,zeroLineWidth:1,zeroLineColor:\"rgba(0,0,0,0.25)\",zeroLineBorderDash:[],zeroLineBorderDashOffset:0,offsetGridLines:!1,borderDash:[],borderDashOffset:0},scaleLabel:{display:!1,labelString:\"\",padding:{top:4,bottom:4}},ticks:{beginAtZero:!1,minRotation:0,maxRotation:50,mirror:!1,padding:0,reverse:!1,display:!0,autoSkip:!0,autoSkipPadding:0,labelOffset:0,callback:un.formatters.values,minor:{},major:{}}});var gn=gt.extend({getPadding:function(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0}},getTicks:function(){return this._ticks},mergeTicksOptions:function(){var t=this.options.ticks;for(var e in!1===t.minor&&(t.minor={display:!1}),!1===t.major&&(t.major={display:!1}),t)\"major\"!==e&&\"minor\"!==e&&(\"undefined\"===typeof t.minor[e]&&(t.minor[e]=t[e]),\"undefined\"===typeof t.major[e]&&(t.major[e]=t[e]))},beforeUpdate:function(){ut.callback(this.options.beforeUpdate,[this])},update:function(t,e,n){var i,a,r,o,s,l,u=this;for(u.beforeUpdate(),u.maxWidth=t,u.maxHeight=e,u.margins=ut.extend({left:0,right:0,top:0,bottom:0},n),u._maxLabelLines=0,u.longestLabelWidth=0,u.longestTextCache=u.longestTextCache||{},u.beforeSetDimensions(),u.setDimensions(),u.afterSetDimensions(),u.beforeDataLimits(),u.determineDataLimits(),u.afterDataLimits(),u.beforeBuildTicks(),s=u.buildTicks()||[],s=u.afterBuildTicks(s)||s,u.beforeTickToLabelConversion(),r=u.convertTicksToLabels(s)||u.ticks,u.afterTickToLabelConversion(),u.ticks=r,i=0,a=r.length;i<a;++i)o=r[i],(l=s[i])?l.label=o:s.push(l={label:o,major:!1});return u._ticks=s,u.beforeCalculateTickRotation(),u.calculateTickRotation(),u.afterCalculateTickRotation(),u.beforeFit(),u.fit(),u.afterFit(),u.afterUpdate(),u.minSize},afterUpdate:function(){ut.callback(this.options.afterUpdate,[this])},beforeSetDimensions:function(){ut.callback(this.options.beforeSetDimensions,[this])},setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0},afterSetDimensions:function(){ut.callback(this.options.afterSetDimensions,[this])},beforeDataLimits:function(){ut.callback(this.options.beforeDataLimits,[this])},determineDataLimits:ut.noop,afterDataLimits:function(){ut.callback(this.options.afterDataLimits,[this])},beforeBuildTicks:function(){ut.callback(this.options.beforeBuildTicks,[this])},buildTicks:ut.noop,afterBuildTicks:function(t){var e=this;return ut.isArray(t)&&t.length?ut.callback(e.options.afterBuildTicks,[e,t]):(e.ticks=ut.callback(e.options.afterBuildTicks,[e,e.ticks])||e.ticks,t)},beforeTickToLabelConversion:function(){ut.callback(this.options.beforeTickToLabelConversion,[this])},convertTicksToLabels:function(){var t=this.options.ticks;this.ticks=this.ticks.map(t.userCallback||t.callback,this)},afterTickToLabelConversion:function(){ut.callback(this.options.afterTickToLabelConversion,[this])},beforeCalculateTickRotation:function(){ut.callback(this.options.beforeCalculateTickRotation,[this])},calculateTickRotation:function(){var t=this,e=t.ctx,n=t.options.ticks,i=hn(t._ticks),a=ut.options._parseFont(n);e.font=a.string;var r=n.minRotation||0;if(i.length&&t.options.display&&t.isHorizontal())for(var o,s=ut.longestText(e,a.string,i,t.longestTextCache),l=s,u=t.getPixelForTick(1)-t.getPixelForTick(0)-6;l>u&&r<n.maxRotation;){var d=ut.toRadians(r);if(o=Math.cos(d),Math.sin(d)*s>t.maxHeight){r--;break}r++,l=o*s}t.labelRotation=r},afterCalculateTickRotation:function(){ut.callback(this.options.afterCalculateTickRotation,[this])},beforeFit:function(){ut.callback(this.options.beforeFit,[this])},fit:function(){var t=this,e=t.minSize={width:0,height:0},n=hn(t._ticks),i=t.options,a=i.ticks,r=i.scaleLabel,o=i.gridLines,s=t._isVisible(),l=i.position,u=t.isHorizontal(),d=ut.options._parseFont,c=d(a),h=i.gridLines.tickMarkLength;if(e.width=u?t.isFullWidth()?t.maxWidth-t.margins.left-t.margins.right:t.maxWidth:s&&o.drawTicks?h:0,e.height=u?s&&o.drawTicks?h:0:t.maxHeight,r.display&&s){var f=d(r),g=ut.options.toPadding(r.padding),p=f.lineHeight+g.height;u?e.height+=p:e.width+=p}if(a.display&&s){var v=ut.longestText(t.ctx,c.string,n,t.longestTextCache),m=ut.numberOfLabelLines(n),b=.5*c.size,y=t.options.ticks.padding;if(t._maxLabelLines=m,t.longestLabelWidth=v,u){var x=ut.toRadians(t.labelRotation),k=Math.cos(x),w=Math.sin(x),M=w*v+c.lineHeight*m+b;e.height=Math.min(t.maxHeight,e.height+M+y),t.ctx.font=c.string;var _,C,S=fn(t.ctx,n[0],c.string),P=fn(t.ctx,n[n.length-1],c.string),I=t.getPixelForTick(0)-t.left,A=t.right-t.getPixelForTick(n.length-1);0!==t.labelRotation?(_=\"bottom\"===l?k*S:k*b,C=\"bottom\"===l?k*b:k*P):(_=S/2,C=P/2),t.paddingLeft=Math.max(_-I,0)+3,t.paddingRight=Math.max(C-A,0)+3}else a.mirror?v=0:v+=y+b,e.width=Math.min(t.maxWidth,e.width+v),t.paddingTop=c.size/2,t.paddingBottom=c.size/2}t.handleMargins(),t.width=e.width,t.height=e.height},handleMargins:function(){var t=this;t.margins&&(t.paddingLeft=Math.max(t.paddingLeft-t.margins.left,0),t.paddingTop=Math.max(t.paddingTop-t.margins.top,0),t.paddingRight=Math.max(t.paddingRight-t.margins.right,0),t.paddingBottom=Math.max(t.paddingBottom-t.margins.bottom,0))},afterFit:function(){ut.callback(this.options.afterFit,[this])},isHorizontal:function(){return\"top\"===this.options.position||\"bottom\"===this.options.position},isFullWidth:function(){return this.options.fullWidth},getRightValue:function(t){if(ut.isNullOrUndef(t))return NaN;if((\"number\"===typeof t||t instanceof Number)&&!isFinite(t))return NaN;if(t)if(this.isHorizontal()){if(void 0!==t.x)return this.getRightValue(t.x)}else if(void 0!==t.y)return this.getRightValue(t.y);return t},getLabelForIndex:ut.noop,getPixelForValue:ut.noop,getValueForPixel:ut.noop,getPixelForTick:function(t){var e=this,n=e.options.offset;if(e.isHorizontal()){var i=e.width-(e.paddingLeft+e.paddingRight),a=i/Math.max(e._ticks.length-(n?0:1),1),r=a*t+e.paddingLeft;n&&(r+=a/2);var o=e.left+r;return o+=e.isFullWidth()?e.margins.left:0}var s=e.height-(e.paddingTop+e.paddingBottom);return e.top+t*(s/(e._ticks.length-1))},getPixelForDecimal:function(t){var e=this;if(e.isHorizontal()){var n=e.width-(e.paddingLeft+e.paddingRight),i=n*t+e.paddingLeft,a=e.left+i;return a+=e.isFullWidth()?e.margins.left:0}return e.top+t*e.height},getBasePixel:function(){return this.getPixelForValue(this.getBaseValue())},getBaseValue:function(){var t=this.min,e=this.max;return this.beginAtZero?0:t<0&&e<0?e:t>0&&e>0?t:0},_autoSkip:function(t){var e,n,i=this,a=i.isHorizontal(),r=i.options.ticks.minor,o=t.length,s=!1,l=r.maxTicksLimit,u=i._tickSize()*(o-1),d=a?i.width-(i.paddingLeft+i.paddingRight):i.height-(i.paddingTop+i.PaddingBottom),c=[];for(u>d&&(s=1+Math.floor(u/d)),o>l&&(s=Math.max(s,1+Math.floor(o/l))),e=0;e<o;e++)n=t[e],s>1&&e%s>0&&delete n.label,c.push(n);return c},_tickSize:function(){var t=this,e=t.isHorizontal(),n=t.options.ticks.minor,i=ut.toRadians(t.labelRotation),a=Math.abs(Math.cos(i)),r=Math.abs(Math.sin(i)),o=n.autoSkipPadding||0,s=t.longestLabelWidth+o||0,l=ut.options._parseFont(n),u=t._maxLabelLines*l.lineHeight+o||0;return e?u*a>s*r?s/a:u/r:u*r<s*a?u/a:s/r},_isVisible:function(){var t,e,n,i=this.chart,a=this.options.display;if(\"auto\"!==a)return!!a;for(t=0,e=i.data.datasets.length;t<e;++t)if(i.isDatasetVisible(t)&&((n=i.getDatasetMeta(t)).xAxisID===this.id||n.yAxisID===this.id))return!0;return!1},draw:function(t){var e=this,n=e.options;if(e._isVisible()){var i,a,r,o=e.chart,s=e.ctx,l=ot.global,u=l.defaultFontColor,d=n.ticks.minor,c=n.ticks.major||d,h=n.gridLines,f=n.scaleLabel,g=n.position,p=0!==e.labelRotation,v=d.mirror,m=e.isHorizontal(),b=ut.options._parseFont,y=d.display&&d.autoSkip?e._autoSkip(e.getTicks()):e.getTicks(),x=dn(d.fontColor,u),k=b(d),w=k.lineHeight,M=dn(c.fontColor,u),_=b(c),C=d.padding,S=d.labelOffset,P=h.drawTicks?h.tickMarkLength:0,I=dn(f.fontColor,u),A=b(f),D=ut.options.toPadding(f.padding),T=ut.toRadians(e.labelRotation),F=[],O=h.drawBorder?cn(h.lineWidth,0,0):0,L=ut._alignPixel;if(\"top\"===g?(i=L(o,e.bottom,O),a=e.bottom-P,r=i-O/2):\"bottom\"===g?(i=L(o,e.top,O),a=i+O/2,r=e.top+P):\"left\"===g?(i=L(o,e.right,O),a=e.right-P,r=i-O/2):(i=L(o,e.left,O),a=i+O/2,r=e.left+P),ut.each(y,function(i,s){if(!ut.isNullOrUndef(i.label)){var l,u,d,c,f,b,y,x,k,M,_,I,A,D,R,z,N=i.label;s===e.zeroLineIndex&&n.offset===h.offsetGridLines?(l=h.zeroLineWidth,u=h.zeroLineColor,d=h.zeroLineBorderDash||[],c=h.zeroLineBorderDashOffset||0):(l=cn(h.lineWidth,s),u=cn(h.color,s),d=h.borderDash||[],c=h.borderDashOffset||0);var B=ut.isArray(N)?N.length:1,W=function(t,e,n){var i=t.getPixelForTick(e);return n&&(1===t.getTicks().length?i-=t.isHorizontal()?Math.max(i-t.left,t.right-i):Math.max(i-t.top,t.bottom-i):i-=0===e?(t.getPixelForTick(1)-i)/2:(i-t.getPixelForTick(e-1))/2),i}(e,s,h.offsetGridLines);if(m){var E=P+C;W<e.left-1e-7&&(u=\"rgba(0,0,0,0)\"),f=y=k=_=L(o,W,l),b=a,x=r,A=e.getPixelForTick(s)+S,\"top\"===g?(M=L(o,t.top,O)+O/2,I=t.bottom,R=((p?1:.5)-B)*w,z=p?\"left\":\"center\",D=e.bottom-E):(M=t.top,I=L(o,t.bottom,O)-O/2,R=(p?0:.5)*w,z=p?\"right\":\"center\",D=e.top+E)}else{var V=(v?0:P)+C;W<e.top-1e-7&&(u=\"rgba(0,0,0,0)\"),f=a,y=r,b=x=M=I=L(o,W,l),D=e.getPixelForTick(s)+S,R=(1-B)*w/2,\"left\"===g?(k=L(o,t.left,O)+O/2,_=t.right,z=v?\"left\":\"right\",A=e.right-V):(k=t.left,_=L(o,t.right,O)-O/2,z=v?\"right\":\"left\",A=e.left+V)}F.push({tx1:f,ty1:b,tx2:y,ty2:x,x1:k,y1:M,x2:_,y2:I,labelX:A,labelY:D,glWidth:l,glColor:u,glBorderDash:d,glBorderDashOffset:c,rotation:-1*T,label:N,major:i.major,textOffset:R,textAlign:z})}}),ut.each(F,function(t){var e=t.glWidth,n=t.glColor;if(h.display&&e&&n&&(s.save(),s.lineWidth=e,s.strokeStyle=n,s.setLineDash&&(s.setLineDash(t.glBorderDash),s.lineDashOffset=t.glBorderDashOffset),s.beginPath(),h.drawTicks&&(s.moveTo(t.tx1,t.ty1),s.lineTo(t.tx2,t.ty2)),h.drawOnChartArea&&(s.moveTo(t.x1,t.y1),s.lineTo(t.x2,t.y2)),s.stroke(),s.restore()),d.display){s.save(),s.translate(t.labelX,t.labelY),s.rotate(t.rotation),s.font=t.major?_.string:k.string,s.fillStyle=t.major?M:x,s.textBaseline=\"middle\",s.textAlign=t.textAlign;var i=t.label,a=t.textOffset;if(ut.isArray(i))for(var r=0;r<i.length;++r)s.fillText(\"\"+i[r],0,a),a+=w;else s.fillText(i,0,a);s.restore()}}),f.display){var R,z,N=0,B=A.lineHeight/2;if(m)R=e.left+(e.right-e.left)/2,z=\"bottom\"===g?e.bottom-B-D.bottom:e.top+B+D.top;else{var W=\"left\"===g;R=W?e.left+B+D.top:e.right-B-D.top,z=e.top+(e.bottom-e.top)/2,N=W?-.5*Math.PI:.5*Math.PI}s.save(),s.translate(R,z),s.rotate(N),s.textAlign=\"center\",s.textBaseline=\"middle\",s.fillStyle=I,s.font=A.string,s.fillText(f.labelString,0,0),s.restore()}if(O){var E,V,H,j,q=O,U=cn(h.lineWidth,y.length-1,0);m?(E=L(o,e.left,q)-q/2,V=L(o,e.right,U)+U/2,H=j=i):(H=L(o,e.top,q)-q/2,j=L(o,e.bottom,U)+U/2,E=V=i),s.lineWidth=O,s.strokeStyle=cn(h.color,0),s.beginPath(),s.moveTo(E,H),s.lineTo(V,j),s.stroke()}}}}),pn=gn.extend({getLabels:function(){var t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels},determineDataLimits:function(){var t,e=this,n=e.getLabels();e.minIndex=0,e.maxIndex=n.length-1,void 0!==e.options.ticks.min&&(t=n.indexOf(e.options.ticks.min),e.minIndex=-1!==t?t:e.minIndex),void 0!==e.options.ticks.max&&(t=n.indexOf(e.options.ticks.max),e.maxIndex=-1!==t?t:e.maxIndex),e.min=n[e.minIndex],e.max=n[e.maxIndex]},buildTicks:function(){var t=this,e=t.getLabels();t.ticks=0===t.minIndex&&t.maxIndex===e.length-1?e:e.slice(t.minIndex,t.maxIndex+1)},getLabelForIndex:function(t,e){var n=this,i=n.chart;return i.getDatasetMeta(e).controller._getValueScaleId()===n.id?n.getRightValue(i.data.datasets[e].data[t]):n.ticks[t-n.minIndex]},getPixelForValue:function(t,e){var n,i=this,a=i.options.offset,r=Math.max(i.maxIndex+1-i.minIndex-(a?0:1),1);if(void 0!==t&&null!==t&&(n=i.isHorizontal()?t.x:t.y),void 0!==n||void 0!==t&&isNaN(e)){var o=i.getLabels();t=n||t;var s=o.indexOf(t);e=-1!==s?s:e}if(i.isHorizontal()){var l=i.width/r,u=l*(e-i.minIndex);return a&&(u+=l/2),i.left+u}var d=i.height/r,c=d*(e-i.minIndex);return a&&(c+=d/2),i.top+c},getPixelForTick:function(t){return this.getPixelForValue(this.ticks[t],t+this.minIndex,null)},getValueForPixel:function(t){var e=this,n=e.options.offset,i=Math.max(e._ticks.length-(n?0:1),1),a=e.isHorizontal(),r=(a?e.width:e.height)/i;return t-=a?e.left:e.top,n&&(t-=r/2),(t<=0?0:Math.round(t/r))+e.minIndex},getBasePixel:function(){return this.bottom}}),vn={position:\"bottom\"};pn._defaults=vn;var mn=ut.noop,bn=ut.isNullOrUndef,yn=gn.extend({getRightValue:function(t){return\"string\"===typeof t?+t:gn.prototype.getRightValue.call(this,t)},handleTickRangeOptions:function(){var t=this,e=t.options,n=e.ticks;if(n.beginAtZero){var i=ut.sign(t.min),a=ut.sign(t.max);i<0&&a<0?t.max=0:i>0&&a>0&&(t.min=0)}var r=void 0!==n.min||void 0!==n.suggestedMin,o=void 0!==n.max||void 0!==n.suggestedMax;void 0!==n.min?t.min=n.min:void 0!==n.suggestedMin&&(null===t.min?t.min=n.suggestedMin:t.min=Math.min(t.min,n.suggestedMin)),void 0!==n.max?t.max=n.max:void 0!==n.suggestedMax&&(null===t.max?t.max=n.suggestedMax:t.max=Math.max(t.max,n.suggestedMax)),r!==o&&t.min>=t.max&&(r?t.max=t.min+1:t.min=t.max-1),t.min===t.max&&(t.max++,n.beginAtZero||t.min--)},getTickLimit:function(){var t,e=this.options.ticks,n=e.stepSize,i=e.maxTicksLimit;return n?t=Math.ceil(this.max/n)-Math.floor(this.min/n)+1:(t=this._computeTickLimit(),i=i||11),i&&(t=Math.min(i,t)),t},_computeTickLimit:function(){return Number.POSITIVE_INFINITY},handleDirectionalChanges:mn,buildTicks:function(){var t=this,e=t.options,n=e.ticks,i=t.getTickLimit(),a={maxTicks:i=Math.max(2,i),min:n.min,max:n.max,precision:n.precision,stepSize:ut.valueOrDefault(n.fixedStepSize,n.stepSize)},r=t.ticks=function(t,e){var n,i,a,r,o=[],s=t.stepSize,l=s||1,u=t.maxTicks-1,d=t.min,c=t.max,h=t.precision,f=e.min,g=e.max,p=ut.niceNum((g-f)/u/l)*l;if(p<1e-14&&bn(d)&&bn(c))return[f,g];(r=Math.ceil(g/p)-Math.floor(f/p))>u&&(p=ut.niceNum(r*p/u/l)*l),s||bn(h)?n=Math.pow(10,ut._decimalPlaces(p)):(n=Math.pow(10,h),p=Math.ceil(p*n)/n),i=Math.floor(f/p)*p,a=Math.ceil(g/p)*p,s&&(!bn(d)&&ut.almostWhole(d/p,p/1e3)&&(i=d),!bn(c)&&ut.almostWhole(c/p,p/1e3)&&(a=c)),r=(a-i)/p,r=ut.almostEquals(r,Math.round(r),p/1e3)?Math.round(r):Math.ceil(r),i=Math.round(i*n)/n,a=Math.round(a*n)/n,o.push(bn(d)?i:d);for(var v=1;v<r;++v)o.push(Math.round((i+v*p)*n)/n);return o.push(bn(c)?a:c),o}(a,t);t.handleDirectionalChanges(),t.max=ut.max(r),t.min=ut.min(r),n.reverse?(r.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max)},convertTicksToLabels:function(){var t=this;t.ticksAsNumbers=t.ticks.slice(),t.zeroLineIndex=t.ticks.indexOf(0),gn.prototype.convertTicksToLabels.call(t)}}),xn={position:\"left\",ticks:{callback:un.formatters.linear}},kn=yn.extend({determineDataLimits:function(){var t=this,e=t.options,n=t.chart,i=n.data,a=i.datasets,r=t.isHorizontal();function o(e){return r?e.xAxisID===t.id:e.yAxisID===t.id}t.min=null,t.max=null;var s=e.stacked;if(void 0===s&&ut.each(a,function(t,e){if(!s){var i=n.getDatasetMeta(e);n.isDatasetVisible(e)&&o(i)&&void 0!==i.stack&&(s=!0)}}),e.stacked||s){var l={};ut.each(a,function(i,a){var r=n.getDatasetMeta(a),s=[r.type,void 0===e.stacked&&void 0===r.stack?a:\"\",r.stack].join(\".\");void 0===l[s]&&(l[s]={positiveValues:[],negativeValues:[]});var u=l[s].positiveValues,d=l[s].negativeValues;n.isDatasetVisible(a)&&o(r)&&ut.each(i.data,function(n,i){var a=+t.getRightValue(n);isNaN(a)||r.data[i].hidden||(u[i]=u[i]||0,d[i]=d[i]||0,e.relativePoints?u[i]=100:a<0?d[i]+=a:u[i]+=a)})}),ut.each(l,function(e){var n=e.positiveValues.concat(e.negativeValues),i=ut.min(n),a=ut.max(n);t.min=null===t.min?i:Math.min(t.min,i),t.max=null===t.max?a:Math.max(t.max,a)})}else ut.each(a,function(e,i){var a=n.getDatasetMeta(i);n.isDatasetVisible(i)&&o(a)&&ut.each(e.data,function(e,n){var i=+t.getRightValue(e);isNaN(i)||a.data[n].hidden||(null===t.min?t.min=i:i<t.min&&(t.min=i),null===t.max?t.max=i:i>t.max&&(t.max=i))})});t.min=isFinite(t.min)&&!isNaN(t.min)?t.min:0,t.max=isFinite(t.max)&&!isNaN(t.max)?t.max:1,this.handleTickRangeOptions()},_computeTickLimit:function(){var t;return this.isHorizontal()?Math.ceil(this.width/40):(t=ut.options._parseFont(this.options.ticks),Math.ceil(this.height/t.lineHeight))},handleDirectionalChanges:function(){this.isHorizontal()||this.ticks.reverse()},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},getPixelForValue:function(t){var e=this,n=e.start,i=+e.getRightValue(t),a=e.end-n;return e.isHorizontal()?e.left+e.width/a*(i-n):e.bottom-e.height/a*(i-n)},getValueForPixel:function(t){var e=this,n=e.isHorizontal(),i=n?e.width:e.height,a=(n?t-e.left:e.bottom-t)/i;return e.start+(e.end-e.start)*a},getPixelForTick:function(t){return this.getPixelForValue(this.ticksAsNumbers[t])}}),wn=xn;kn._defaults=wn;var Mn=ut.valueOrDefault,_n={position:\"left\",ticks:{callback:un.formatters.logarithmic}};function Cn(t,e){return ut.isFinite(t)&&t>=0?t:e}var Sn=gn.extend({determineDataLimits:function(){var t=this,e=t.options,n=t.chart,i=n.data,a=i.datasets,r=t.isHorizontal();function o(e){return r?e.xAxisID===t.id:e.yAxisID===t.id}t.min=null,t.max=null,t.minNotZero=null;var s=e.stacked;if(void 0===s&&ut.each(a,function(t,e){if(!s){var i=n.getDatasetMeta(e);n.isDatasetVisible(e)&&o(i)&&void 0!==i.stack&&(s=!0)}}),e.stacked||s){var l={};ut.each(a,function(i,a){var r=n.getDatasetMeta(a),s=[r.type,void 0===e.stacked&&void 0===r.stack?a:\"\",r.stack].join(\".\");n.isDatasetVisible(a)&&o(r)&&(void 0===l[s]&&(l[s]=[]),ut.each(i.data,function(e,n){var i=l[s],a=+t.getRightValue(e);isNaN(a)||r.data[n].hidden||a<0||(i[n]=i[n]||0,i[n]+=a)}))}),ut.each(l,function(e){if(e.length>0){var n=ut.min(e),i=ut.max(e);t.min=null===t.min?n:Math.min(t.min,n),t.max=null===t.max?i:Math.max(t.max,i)}})}else ut.each(a,function(e,i){var a=n.getDatasetMeta(i);n.isDatasetVisible(i)&&o(a)&&ut.each(e.data,function(e,n){var i=+t.getRightValue(e);isNaN(i)||a.data[n].hidden||i<0||(null===t.min?t.min=i:i<t.min&&(t.min=i),null===t.max?t.max=i:i>t.max&&(t.max=i),0!==i&&(null===t.minNotZero||i<t.minNotZero)&&(t.minNotZero=i))})});this.handleTickRangeOptions()},handleTickRangeOptions:function(){var t=this,e=t.options.ticks;t.min=Cn(e.min,t.min),t.max=Cn(e.max,t.max),t.min===t.max&&(0!==t.min&&null!==t.min?(t.min=Math.pow(10,Math.floor(ut.log10(t.min))-1),t.max=Math.pow(10,Math.floor(ut.log10(t.max))+1)):(t.min=1,t.max=10)),null===t.min&&(t.min=Math.pow(10,Math.floor(ut.log10(t.max))-1)),null===t.max&&(t.max=0!==t.min?Math.pow(10,Math.floor(ut.log10(t.min))+1):10),null===t.minNotZero&&(t.min>0?t.minNotZero=t.min:t.max<1?t.minNotZero=Math.pow(10,Math.floor(ut.log10(t.max))):t.minNotZero=1)},buildTicks:function(){var t=this,e=t.options.ticks,n=!t.isHorizontal(),i={min:Cn(e.min),max:Cn(e.max)},a=t.ticks=function(t,e){var n,i,a=[],r=Mn(t.min,Math.pow(10,Math.floor(ut.log10(e.min)))),o=Math.floor(ut.log10(e.max)),s=Math.ceil(e.max/Math.pow(10,o));0===r?(n=Math.floor(ut.log10(e.minNotZero)),i=Math.floor(e.minNotZero/Math.pow(10,n)),a.push(r),r=i*Math.pow(10,n)):(n=Math.floor(ut.log10(r)),i=Math.floor(r/Math.pow(10,n)));var l=n<0?Math.pow(10,Math.abs(n)):1;do{a.push(r),10===++i&&(i=1,l=++n>=0?1:l),r=Math.round(i*Math.pow(10,n)*l)/l}while(n<o||n===o&&i<s);var u=Mn(t.max,r);return a.push(u),a}(i,t);t.max=ut.max(a),t.min=ut.min(a),e.reverse?(n=!n,t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),n&&a.reverse()},convertTicksToLabels:function(){this.tickValues=this.ticks.slice(),gn.prototype.convertTicksToLabels.call(this)},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},getPixelForTick:function(t){return this.getPixelForValue(this.tickValues[t])},_getFirstTickValue:function(t){var e=Math.floor(ut.log10(t)),n=Math.floor(t/Math.pow(10,e));return n*Math.pow(10,e)},getPixelForValue:function(t){var e,n,i,a,r,o=this,s=o.options.ticks,l=s.reverse,u=ut.log10,d=o._getFirstTickValue(o.minNotZero),c=0;return t=+o.getRightValue(t),l?(i=o.end,a=o.start,r=-1):(i=o.start,a=o.end,r=1),o.isHorizontal()?(e=o.width,n=l?o.right:o.left):(e=o.height,r*=-1,n=l?o.top:o.bottom),t!==i&&(0===i&&(c=Mn(s.fontSize,ot.global.defaultFontSize),e-=c,i=d),0!==t&&(c+=e/(u(a)-u(i))*(u(t)-u(i))),n+=r*c),n},getValueForPixel:function(t){var e,n,i,a,r=this,o=r.options.ticks,s=o.reverse,l=ut.log10,u=r._getFirstTickValue(r.minNotZero);if(s?(n=r.end,i=r.start):(n=r.start,i=r.end),r.isHorizontal()?(e=r.width,a=s?r.right-t:t-r.left):(e=r.height,a=s?t-r.top:r.bottom-t),a!==n){if(0===n){var d=Mn(o.fontSize,ot.global.defaultFontSize);a-=d,e-=d,n=u}a*=l(i)-l(n),a/=e,a=Math.pow(10,l(n)+a)}return a}}),Pn=_n;Sn._defaults=Pn;var In=ut.valueOrDefault,An=ut.valueAtIndexOrDefault,Dn=ut.options.resolve,Tn={display:!0,animate:!0,position:\"chartArea\",angleLines:{display:!0,color:\"rgba(0, 0, 0, 0.1)\",lineWidth:1,borderDash:[],borderDashOffset:0},gridLines:{circular:!1},ticks:{showLabelBackdrop:!0,backdropColor:\"rgba(255,255,255,0.75)\",backdropPaddingY:2,backdropPaddingX:2,callback:un.formatters.linear},pointLabels:{display:!0,fontSize:10,callback:function(t){return t}}};function Fn(t){var e=t.options;return e.angleLines.display||e.pointLabels.display?t.chart.data.labels.length:0}function On(t){var e=t.ticks;return e.display&&t.display?In(e.fontSize,ot.global.defaultFontSize)+2*e.backdropPaddingY:0}function Ln(t,e,n,i,a){return t===i||t===a?{start:e-n/2,end:e+n/2}:t<i||t>a?{start:e-n,end:e}:{start:e,end:e+n}}function Rn(t){return 0===t||180===t?\"center\":t<180?\"left\":\"right\"}function zn(t,e,n,i){var a,r,o=n.y+i/2;if(ut.isArray(e))for(a=0,r=e.length;a<r;++a)t.fillText(e[a],n.x,o),o+=i;else t.fillText(e,n.x,o)}function Nn(t,e,n){90===t||270===t?n.y-=e.h/2:(t>270||t<90)&&(n.y-=e.h)}function Bn(t){return ut.isNumber(t)?t:0}var Wn=yn.extend({setDimensions:function(){var t=this;t.width=t.maxWidth,t.height=t.maxHeight,t.paddingTop=On(t.options)/2,t.xCenter=Math.floor(t.width/2),t.yCenter=Math.floor((t.height-t.paddingTop)/2),t.drawingArea=Math.min(t.height-t.paddingTop,t.width)/2},determineDataLimits:function(){var t=this,e=t.chart,n=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;ut.each(e.data.datasets,function(a,r){if(e.isDatasetVisible(r)){var o=e.getDatasetMeta(r);ut.each(a.data,function(e,a){var r=+t.getRightValue(e);isNaN(r)||o.data[a].hidden||(n=Math.min(r,n),i=Math.max(r,i))})}}),t.min=n===Number.POSITIVE_INFINITY?0:n,t.max=i===Number.NEGATIVE_INFINITY?0:i,t.handleTickRangeOptions()},_computeTickLimit:function(){return Math.ceil(this.drawingArea/On(this.options))},convertTicksToLabels:function(){var t=this;yn.prototype.convertTicksToLabels.call(t),t.pointLabels=t.chart.data.labels.map(t.options.pointLabels.callback,t)},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},fit:function(){var t=this.options;t.display&&t.pointLabels.display?function(t){var e,n,i,a=ut.options._parseFont(t.options.pointLabels),r={l:0,r:t.width,t:0,b:t.height-t.paddingTop},o={};t.ctx.font=a.string,t._pointLabelSizes=[];var s,l,u,d=Fn(t);for(e=0;e<d;e++){i=t.getPointPosition(e,t.drawingArea+5),s=t.ctx,l=a.lineHeight,u=t.pointLabels[e]||\"\",n=ut.isArray(u)?{w:ut.longestText(s,s.font,u),h:u.length*l}:{w:s.measureText(u).width,h:l},t._pointLabelSizes[e]=n;var c=t.getIndexAngle(e),h=ut.toDegrees(c)%360,f=Ln(h,i.x,n.w,0,180),g=Ln(h,i.y,n.h,90,270);f.start<r.l&&(r.l=f.start,o.l=c),f.end>r.r&&(r.r=f.end,o.r=c),g.start<r.t&&(r.t=g.start,o.t=c),g.end>r.b&&(r.b=g.end,o.b=c)}t.setReductions(t.drawingArea,r,o)}(this):this.setCenterPoint(0,0,0,0)},setReductions:function(t,e,n){var i=this,a=e.l/Math.sin(n.l),r=Math.max(e.r-i.width,0)/Math.sin(n.r),o=-e.t/Math.cos(n.t),s=-Math.max(e.b-(i.height-i.paddingTop),0)/Math.cos(n.b);a=Bn(a),r=Bn(r),o=Bn(o),s=Bn(s),i.drawingArea=Math.min(Math.floor(t-(a+r)/2),Math.floor(t-(o+s)/2)),i.setCenterPoint(a,r,o,s)},setCenterPoint:function(t,e,n,i){var a=this,r=a.width-e-a.drawingArea,o=t+a.drawingArea,s=n+a.drawingArea,l=a.height-a.paddingTop-i-a.drawingArea;a.xCenter=Math.floor((o+r)/2+a.left),a.yCenter=Math.floor((s+l)/2+a.top+a.paddingTop)},getIndexAngle:function(t){var e=2*Math.PI/Fn(this),n=this.chart.options&&this.chart.options.startAngle?this.chart.options.startAngle:0,i=n*Math.PI*2/360;return t*e+i},getDistanceFromCenterForValue:function(t){var e=this;if(null===t)return 0;var n=e.drawingArea/(e.max-e.min);return e.options.ticks.reverse?(e.max-t)*n:(t-e.min)*n},getPointPosition:function(t,e){var n=this.getIndexAngle(t)-Math.PI/2;return{x:Math.cos(n)*e+this.xCenter,y:Math.sin(n)*e+this.yCenter}},getPointPositionForValue:function(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))},getBasePosition:function(){var t=this.min,e=this.max;return this.getPointPositionForValue(0,this.beginAtZero?0:t<0&&e<0?e:t>0&&e>0?t:0)},draw:function(){var t=this,e=t.options,n=e.gridLines,i=e.ticks;if(e.display){var a=t.ctx,r=this.getIndexAngle(0),o=ut.options._parseFont(i);(e.angleLines.display||e.pointLabels.display)&&function(t){var e=t.ctx,n=t.options,i=n.angleLines,a=n.gridLines,r=n.pointLabels,o=In(i.lineWidth,a.lineWidth),s=In(i.color,a.color),l=On(n);e.save(),e.lineWidth=o,e.strokeStyle=s,e.setLineDash&&(e.setLineDash(Dn([i.borderDash,a.borderDash,[]])),e.lineDashOffset=Dn([i.borderDashOffset,a.borderDashOffset,0]));var u=t.getDistanceFromCenterForValue(n.ticks.reverse?t.min:t.max),d=ut.options._parseFont(r);e.font=d.string,e.textBaseline=\"middle\";for(var c=Fn(t)-1;c>=0;c--){if(i.display&&o&&s){var h=t.getPointPosition(c,u);e.beginPath(),e.moveTo(t.xCenter,t.yCenter),e.lineTo(h.x,h.y),e.stroke()}if(r.display){var f=0===c?l/2:0,g=t.getPointPosition(c,u+f+5),p=An(r.fontColor,c,ot.global.defaultFontColor);e.fillStyle=p;var v=t.getIndexAngle(c),m=ut.toDegrees(v);e.textAlign=Rn(m),Nn(m,t._pointLabelSizes[c],g),zn(e,t.pointLabels[c]||\"\",g,d.lineHeight)}}e.restore()}(t),ut.each(t.ticks,function(e,s){if(s>0||i.reverse){var l=t.getDistanceFromCenterForValue(t.ticksAsNumbers[s]);if(n.display&&0!==s&&function(t,e,n,i){var a,r=t.ctx,o=e.circular,s=Fn(t),l=An(e.color,i-1),u=An(e.lineWidth,i-1);if((o||s)&&l&&u){if(r.save(),r.strokeStyle=l,r.lineWidth=u,r.setLineDash&&(r.setLineDash(e.borderDash||[]),r.lineDashOffset=e.borderDashOffset||0),r.beginPath(),o)r.arc(t.xCenter,t.yCenter,n,0,2*Math.PI);else{a=t.getPointPosition(0,n),r.moveTo(a.x,a.y);for(var d=1;d<s;d++)a=t.getPointPosition(d,n),r.lineTo(a.x,a.y)}r.closePath(),r.stroke(),r.restore()}}(t,n,l,s),i.display){var u=In(i.fontColor,ot.global.defaultFontColor);if(a.font=o.string,a.save(),a.translate(t.xCenter,t.yCenter),a.rotate(r),i.showLabelBackdrop){var d=a.measureText(e).width;a.fillStyle=i.backdropColor,a.fillRect(-d/2-i.backdropPaddingX,-l-o.size/2-i.backdropPaddingY,d+2*i.backdropPaddingX,o.size+2*i.backdropPaddingY)}a.textAlign=\"center\",a.textBaseline=\"middle\",a.fillStyle=u,a.fillText(e,0,-l),a.restore()}}})}}}),En=Tn;Wn._defaults=En;var Vn=ut.valueOrDefault,Hn=Number.MIN_SAFE_INTEGER||-9007199254740991,jn=Number.MAX_SAFE_INTEGER||9007199254740991,qn={millisecond:{common:!0,size:1,steps:[1,2,5,10,20,50,100,250,500]},second:{common:!0,size:1e3,steps:[1,2,5,10,15,30]},minute:{common:!0,size:6e4,steps:[1,2,5,10,15,30]},hour:{common:!0,size:36e5,steps:[1,2,3,6,12]},day:{common:!0,size:864e5,steps:[1,2,5]},week:{common:!1,size:6048e5,steps:[1,2,3,4]},month:{common:!0,size:2628e6,steps:[1,2,3]},quarter:{common:!1,size:7884e6,steps:[1,2,3,4]},year:{common:!0,size:3154e7}},Un=Object.keys(qn);function Yn(t,e){return t-e}function Kn(t){var e,n,i,a={},r=[];for(e=0,n=t.length;e<n;++e)i=t[e],a[i]||(a[i]=!0,r.push(i));return r}function Xn(t,e,n,i){var a=function(t,e,n){for(var i,a,r,o=0,s=t.length-1;o>=0&&o<=s;){if(a=t[(i=o+s>>1)-1]||null,r=t[i],!a)return{lo:null,hi:r};if(r[e]<n)o=i+1;else{if(!(a[e]>n))return{lo:a,hi:r};s=i-1}}return{lo:r,hi:null}}(t,e,n),r=a.lo?a.hi?a.lo:t[t.length-2]:t[0],o=a.lo?a.hi?a.hi:t[t.length-1]:t[1],s=o[e]-r[e],l=s?(n-r[e])/s:0,u=(o[i]-r[i])*l;return r[i]+u}function Gn(t,e){var n=t._adapter,i=t.options.time,a=i.parser,r=a||i.format,o=e;return\"function\"===typeof a&&(o=a(o)),ut.isFinite(o)||(o=\"string\"===typeof r?n.parse(o,r):n.parse(o)),null!==o?+o:(a||\"function\"!==typeof r||(o=r(e),ut.isFinite(o)||(o=n.parse(o))),o)}function $n(t,e){if(ut.isNullOrUndef(e))return null;var n=t.options.time,i=Gn(t,t.getRightValue(e));return null===i?i:(n.round&&(i=+t._adapter.startOf(i,n.round)),i)}function Zn(t){for(var e=Un.indexOf(t)+1,n=Un.length;e<n;++e)if(qn[Un[e]].common)return Un[e]}function Jn(t,e,n,i){var a,r=t._adapter,o=t.options,s=o.time,l=s.unit||function(t,e,n,i){var a,r,o,s=Un.length;for(a=Un.indexOf(t);a<s-1;++a)if(r=qn[Un[a]],o=r.steps?r.steps[r.steps.length-1]:jn,r.common&&Math.ceil((n-e)/(o*r.size))<=i)return Un[a];return Un[s-1]}(s.minUnit,e,n,i),u=Zn(l),d=Vn(s.stepSize,s.unitStepSize),c=\"week\"===l&&s.isoWeekday,h=o.ticks.major.enabled,f=qn[l],g=e,p=n,v=[];for(d||(d=function(t,e,n,i){var a,r,o,s=e-t,l=qn[n],u=l.size,d=l.steps;if(!d)return Math.ceil(s/(i*u));for(a=0,r=d.length;a<r&&(o=d[a],!(Math.ceil(s/(u*o))<=i));++a);return o}(e,n,l,i)),c&&(g=+r.startOf(g,\"isoWeek\",c),p=+r.startOf(p,\"isoWeek\",c)),g=+r.startOf(g,c?\"day\":l),(p=+r.startOf(p,c?\"day\":l))<n&&(p=+r.add(p,1,l)),a=g,h&&u&&!c&&!s.round&&(a=+r.startOf(a,u),a=+r.add(a,~~((g-a)/(f.size*d))*d,l));a<p;a=+r.add(a,d,l))v.push(+a);return v.push(+a),v}var Qn=gn.extend({initialize:function(){this.mergeTicksOptions(),gn.prototype.initialize.call(this)},update:function(){var t=this.options,e=t.time||(t.time={}),n=this._adapter=new ln._date(t.adapters.date);return e.format&&console.warn(\"options.time.format is deprecated and replaced by options.time.parser.\"),ut.mergeIf(e.displayFormats,n.formats()),gn.prototype.update.apply(this,arguments)},getRightValue:function(t){return t&&void 0!==t.t&&(t=t.t),gn.prototype.getRightValue.call(this,t)},determineDataLimits:function(){var t,e,n,i,a,r,o=this,s=o.chart,l=o._adapter,u=o.options.time,d=u.unit||\"day\",c=jn,h=Hn,f=[],g=[],p=[],v=s.data.labels||[];for(t=0,n=v.length;t<n;++t)p.push($n(o,v[t]));for(t=0,n=(s.data.datasets||[]).length;t<n;++t)if(s.isDatasetVisible(t))if(a=s.data.datasets[t].data,ut.isObject(a[0]))for(g[t]=[],e=0,i=a.length;e<i;++e)r=$n(o,a[e]),f.push(r),g[t][e]=r;else{for(e=0,i=p.length;e<i;++e)f.push(p[e]);g[t]=p.slice(0)}else g[t]=[];p.length&&(p=Kn(p).sort(Yn),c=Math.min(c,p[0]),h=Math.max(h,p[p.length-1])),f.length&&(f=Kn(f).sort(Yn),c=Math.min(c,f[0]),h=Math.max(h,f[f.length-1])),c=$n(o,u.min)||c,h=$n(o,u.max)||h,c=c===jn?+l.startOf(Date.now(),d):c,h=h===Hn?+l.endOf(Date.now(),d)+1:h,o.min=Math.min(c,h),o.max=Math.max(c+1,h),o._horizontal=o.isHorizontal(),o._table=[],o._timestamps={data:f,datasets:g,labels:p}},buildTicks:function(){var t,e,n,i=this,a=i.min,r=i.max,o=i.options,s=o.time,l=[],u=[];switch(o.ticks.source){case\"data\":l=i._timestamps.data;break;case\"labels\":l=i._timestamps.labels;break;case\"auto\":default:l=Jn(i,a,r,i.getLabelCapacity(a))}for(\"ticks\"===o.bounds&&l.length&&(a=l[0],r=l[l.length-1]),a=$n(i,s.min)||a,r=$n(i,s.max)||r,t=0,e=l.length;t<e;++t)(n=l[t])>=a&&n<=r&&u.push(n);return i.min=a,i.max=r,i._unit=s.unit||function(t,e,n,i,a){var r,o,s=Un.length;for(r=s-1;r>=Un.indexOf(n);r--)if(o=Un[r],qn[o].common&&t._adapter.diff(a,i,o)>=e.length)return o;return Un[n?Un.indexOf(n):0]}(i,u,s.minUnit,i.min,i.max),i._majorUnit=Zn(i._unit),i._table=function(t,e,n,i){if(\"linear\"===i||!t.length)return[{time:e,pos:0},{time:n,pos:1}];var a,r,o,s,l,u=[],d=[e];for(a=0,r=t.length;a<r;++a)(s=t[a])>e&&s<n&&d.push(s);for(d.push(n),a=0,r=d.length;a<r;++a)l=d[a+1],o=d[a-1],s=d[a],void 0!==o&&void 0!==l&&Math.round((l+o)/2)===s||u.push({time:s,pos:a/(r-1)});return u}(i._timestamps.data,a,r,o.distribution),i._offsets=function(t,e,n,i,a){var r,o,s=0,l=0;return a.offset&&e.length&&(a.time.min||(r=Xn(t,\"time\",e[0],\"pos\"),s=1===e.length?1-r:(Xn(t,\"time\",e[1],\"pos\")-r)/2),a.time.max||(o=Xn(t,\"time\",e[e.length-1],\"pos\"),l=1===e.length?o:(o-Xn(t,\"time\",e[e.length-2],\"pos\"))/2)),{start:s,end:l}}(i._table,u,0,0,o),o.ticks.reverse&&u.reverse(),function(t,e,n){var i,a,r,o,s=[];for(i=0,a=e.length;i<a;++i)r=e[i],o=!!n&&r===+t._adapter.startOf(r,n),s.push({value:r,major:o});return s}(i,u,i._majorUnit)},getLabelForIndex:function(t,e){var n=this,i=n._adapter,a=n.chart.data,r=n.options.time,o=a.labels&&t<a.labels.length?a.labels[t]:\"\",s=a.datasets[e].data[t];return ut.isObject(s)&&(o=n.getRightValue(s)),r.tooltipFormat?i.format(Gn(n,o),r.tooltipFormat):\"string\"===typeof o?o:i.format(Gn(n,o),r.displayFormats.datetime)},tickFormatFunction:function(t,e,n,i){var a=this._adapter,r=this.options,o=r.time.displayFormats,s=o[this._unit],l=this._majorUnit,u=o[l],d=+a.startOf(t,l),c=r.ticks.major,h=c.enabled&&l&&u&&t===d,f=a.format(t,i||(h?u:s)),g=h?c:r.ticks.minor,p=Vn(g.callback,g.userCallback);return p?p(f,e,n):f},convertTicksToLabels:function(t){var e,n,i=[];for(e=0,n=t.length;e<n;++e)i.push(this.tickFormatFunction(t[e].value,e,t));return i},getPixelForOffset:function(t){var e=this,n=e.options.ticks.reverse,i=e._horizontal?e.width:e.height,a=e._horizontal?n?e.right:e.left:n?e.bottom:e.top,r=Xn(e._table,\"time\",t,\"pos\"),o=i*(e._offsets.start+r)/(e._offsets.start+1+e._offsets.end);return n?a-o:a+o},getPixelForValue:function(t,e,n){var i=null;if(void 0!==e&&void 0!==n&&(i=this._timestamps.datasets[n][e]),null===i&&(i=$n(this,t)),null!==i)return this.getPixelForOffset(i)},getPixelForTick:function(t){var e=this.getTicks();return t>=0&&t<e.length?this.getPixelForOffset(e[t].value):null},getValueForPixel:function(t){var e=this,n=e._horizontal?e.width:e.height,i=e._horizontal?e.left:e.top,a=(n?(t-i)/n:0)*(e._offsets.start+1+e._offsets.start)-e._offsets.end,r=Xn(e._table,\"pos\",a,\"time\");return e._adapter._create(r)},getLabelWidth:function(t){var e=this.options.ticks,n=this.ctx.measureText(t).width,i=ut.toRadians(e.maxRotation),a=Math.cos(i),r=Math.sin(i),o=Vn(e.fontSize,ot.global.defaultFontSize);return n*a+o*r},getLabelCapacity:function(t){var e=this,n=e.options.time.displayFormats.millisecond,i=e.tickFormatFunction(t,0,[],n),a=e.getLabelWidth(i),r=e.isHorizontal()?e.width:e.height,o=Math.floor(r/a);return o>0?o:1}}),ti={position:\"bottom\",distribution:\"linear\",bounds:\"data\",adapters:{},time:{parser:!1,format:!1,unit:!1,round:!1,displayFormat:!1,isoWeekday:!1,minUnit:\"millisecond\",displayFormats:{}},ticks:{autoSkip:!1,source:\"auto\",major:{enabled:!1}}};Qn._defaults=ti;var ei={category:pn,linear:kn,logarithmic:Sn,radialLinear:Wn,time:Qn},ni={datetime:\"MMM D, YYYY, h:mm:ss a\",millisecond:\"h:mm:ss.SSS a\",second:\"h:mm:ss a\",minute:\"h:mm a\",hour:\"hA\",day:\"MMM D\",week:\"ll\",month:\"MMM YYYY\",quarter:\"[Q]Q - YYYY\",year:\"YYYY\"};ln._date.override(\"function\"===typeof t?{_id:\"moment\",formats:function(){return ni},parse:function(e,n){return\"string\"===typeof e&&\"string\"===typeof n?e=t(e,n):e instanceof t||(e=t(e)),e.isValid()?e.valueOf():null},format:function(e,n){return t(e).format(n)},add:function(e,n,i){return t(e).add(n,i).valueOf()},diff:function(e,n,i){return t.duration(t(e).diff(t(n))).as(i)},startOf:function(e,n,i){return e=t(e),\"isoWeek\"===n?e.isoWeekday(i).valueOf():e.startOf(n).valueOf()},endOf:function(e,n){return t(e).endOf(n).valueOf()},_create:function(e){return t(e)}}:{}),ot._set(\"global\",{plugins:{filler:{propagate:!0}}});var ii={dataset:function(t){var e=t.fill,n=t.chart,i=n.getDatasetMeta(e),a=i&&n.isDatasetVisible(e),r=a&&i.dataset._children||[],o=r.length||0;return o?function(t,e){return e<o&&r[e]._view||null}:null},boundary:function(t){var e=t.boundary,n=e?e.x:null,i=e?e.y:null;return function(t){return{x:null===n?t.x:n,y:null===i?t.y:i}}}};function ai(t,e,n){var i,a=t._model||{},r=a.fill;if(void 0===r&&(r=!!a.backgroundColor),!1===r||null===r)return!1;if(!0===r)return\"origin\";if(i=parseFloat(r,10),isFinite(i)&&Math.floor(i)===i)return\"-\"!==r[0]&&\"+\"!==r[0]||(i=e+i),!(i===e||i<0||i>=n)&&i;switch(r){case\"bottom\":return\"start\";case\"top\":return\"end\";case\"zero\":return\"origin\";case\"origin\":case\"start\":case\"end\":return r;default:return!1}}function ri(t){var e,n=t.el._model||{},i=t.el._scale||{},a=t.fill,r=null;if(isFinite(a))return null;if(\"start\"===a?r=void 0===n.scaleBottom?i.bottom:n.scaleBottom:\"end\"===a?r=void 0===n.scaleTop?i.top:n.scaleTop:void 0!==n.scaleZero?r=n.scaleZero:i.getBasePosition?r=i.getBasePosition():i.getBasePixel&&(r=i.getBasePixel()),void 0!==r&&null!==r){if(void 0!==r.x&&void 0!==r.y)return r;if(ut.isFinite(r))return{x:(e=i.isHorizontal())?r:null,y:e?null:r}}return null}function oi(t,e,n){var i,a=t[e],r=a.fill,o=[e];if(!n)return r;for(;!1!==r&&-1===o.indexOf(r);){if(!isFinite(r))return r;if(!(i=t[r]))return!1;if(i.visible)return r;o.push(r),r=i.fill}return!1}function si(t){var e=t.fill,n=\"dataset\";return!1===e?null:(isFinite(e)||(n=\"boundary\"),ii[n](t))}function li(t){return t&&!t.skip}function ui(t,e,n,i,a){var r;if(i&&a){for(t.moveTo(e[0].x,e[0].y),r=1;r<i;++r)ut.canvas.lineTo(t,e[r-1],e[r]);for(t.lineTo(n[a-1].x,n[a-1].y),r=a-1;r>0;--r)ut.canvas.lineTo(t,n[r],n[r-1],!0)}}var di={id:\"filler\",afterDatasetsUpdate:function(t,e){var n,i,a,r,o=(t.data.datasets||[]).length,s=e.propagate,l=[];for(i=0;i<o;++i)n=t.getDatasetMeta(i),a=n.dataset,r=null,a&&a._model&&a instanceof Bt.Line&&(r={visible:t.isDatasetVisible(i),fill:ai(a,i,o),chart:t,el:a}),n.$filler=r,l.push(r);for(i=0;i<o;++i)(r=l[i])&&(r.fill=oi(l,i,s),r.boundary=ri(r),r.mapper=si(r))},beforeDatasetDraw:function(t,e){var n=e.meta.$filler;if(n){var i=t.ctx,a=n.el,r=a._view,o=a._children||[],s=n.mapper,l=r.backgroundColor||ot.global.defaultColor;s&&l&&o.length&&(ut.canvas.clipArea(i,t.chartArea),function(t,e,n,i,a,r){var o,s,l,u,d,c,h,f=e.length,g=i.spanGaps,p=[],v=[],m=0,b=0;for(t.beginPath(),o=0,s=f+!!r;o<s;++o)u=e[l=o%f]._view,d=n(u,l,i),c=li(u),h=li(d),c&&h?(m=p.push(u),b=v.push(d)):m&&b&&(g?(c&&p.push(u),h&&v.push(d)):(ui(t,p,v,m,b),m=b=0,p=[],v=[]));ui(t,p,v,m,b),t.closePath(),t.fillStyle=a,t.fill()}(i,o,s,r,l,a._loop),ut.canvas.unclipArea(i))}}},ci=ut.noop,hi=ut.valueOrDefault;function fi(t,e){return t.usePointStyle&&t.boxWidth>e?e:t.boxWidth}ot._set(\"global\",{legend:{display:!0,position:\"top\",fullWidth:!0,reverse:!1,weight:1e3,onClick:function(t,e){var n=e.datasetIndex,i=this.chart,a=i.getDatasetMeta(n);a.hidden=null===a.hidden?!i.data.datasets[n].hidden:null,i.update()},onHover:null,onLeave:null,labels:{boxWidth:40,padding:10,generateLabels:function(t){var e=t.data;return ut.isArray(e.datasets)?e.datasets.map(function(e,n){return{text:e.label,fillStyle:ut.isArray(e.backgroundColor)?e.backgroundColor[0]:e.backgroundColor,hidden:!t.isDatasetVisible(n),lineCap:e.borderCapStyle,lineDash:e.borderDash,lineDashOffset:e.borderDashOffset,lineJoin:e.borderJoinStyle,lineWidth:e.borderWidth,strokeStyle:e.borderColor,pointStyle:e.pointStyle,datasetIndex:n}},this):[]}}},legendCallback:function(t){var e=[];e.push('<ul class=\"'+t.id+'-legend\">');for(var n=0;n<t.data.datasets.length;n++)e.push('<li><span style=\"background-color:'+t.data.datasets[n].backgroundColor+'\"></span>'),t.data.datasets[n].label&&e.push(t.data.datasets[n].label),e.push(\"</li>\");return e.push(\"</ul>\"),e.join(\"\")}});var gi=gt.extend({initialize:function(t){ut.extend(this,t),this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1},beforeUpdate:ci,update:function(t,e,n){var i=this;return i.beforeUpdate(),i.maxWidth=t,i.maxHeight=e,i.margins=n,i.beforeSetDimensions(),i.setDimensions(),i.afterSetDimensions(),i.beforeBuildLabels(),i.buildLabels(),i.afterBuildLabels(),i.beforeFit(),i.fit(),i.afterFit(),i.afterUpdate(),i.minSize},afterUpdate:ci,beforeSetDimensions:ci,setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0,t.minSize={width:0,height:0}},afterSetDimensions:ci,beforeBuildLabels:ci,buildLabels:function(){var t=this,e=t.options.labels||{},n=ut.callback(e.generateLabels,[t.chart],t)||[];e.filter&&(n=n.filter(function(n){return e.filter(n,t.chart.data)})),t.options.reverse&&n.reverse(),t.legendItems=n},afterBuildLabels:ci,beforeFit:ci,fit:function(){var t=this,e=t.options,n=e.labels,i=e.display,a=t.ctx,r=ut.options._parseFont(n),o=r.size,s=t.legendHitBoxes=[],l=t.minSize,u=t.isHorizontal();if(u?(l.width=t.maxWidth,l.height=i?10:0):(l.width=i?10:0,l.height=t.maxHeight),i)if(a.font=r.string,u){var d=t.lineWidths=[0],c=0;a.textAlign=\"left\",a.textBaseline=\"top\",ut.each(t.legendItems,function(t,e){var i=fi(n,o),r=i+o/2+a.measureText(t.text).width;(0===e||d[d.length-1]+r+n.padding>l.width)&&(c+=o+n.padding,d[d.length-(e>0?0:1)]=n.padding),s[e]={left:0,top:0,width:r,height:o},d[d.length-1]+=r+n.padding}),l.height+=c}else{var h=n.padding,f=t.columnWidths=[],g=n.padding,p=0,v=0,m=o+h;ut.each(t.legendItems,function(t,e){var i=fi(n,o),r=i+o/2+a.measureText(t.text).width;e>0&&v+m>l.height-h&&(g+=p+n.padding,f.push(p),p=0,v=0),p=Math.max(p,r),v+=m,s[e]={left:0,top:0,width:r,height:o}}),g+=p,f.push(p),l.width+=g}t.width=l.width,t.height=l.height},afterFit:ci,isHorizontal:function(){return\"top\"===this.options.position||\"bottom\"===this.options.position},draw:function(){var t=this,e=t.options,n=e.labels,i=ot.global,a=i.defaultColor,r=i.elements.line,o=t.width,s=t.lineWidths;if(e.display){var l,u=t.ctx,d=hi(n.fontColor,i.defaultFontColor),c=ut.options._parseFont(n),h=c.size;u.textAlign=\"left\",u.textBaseline=\"middle\",u.lineWidth=.5,u.strokeStyle=d,u.fillStyle=d,u.font=c.string;var f=fi(n,h),g=t.legendHitBoxes,p=t.isHorizontal();l=p?{x:t.left+(o-s[0])/2+n.padding,y:t.top+n.padding,line:0}:{x:t.left+n.padding,y:t.top+n.padding,line:0};var v=h+n.padding;ut.each(t.legendItems,function(i,d){var c=u.measureText(i.text).width,m=f+h/2+c,b=l.x,y=l.y;p?d>0&&b+m+n.padding>t.left+t.minSize.width&&(y=l.y+=v,l.line++,b=l.x=t.left+(o-s[l.line])/2+n.padding):d>0&&y+v>t.top+t.minSize.height&&(b=l.x=b+t.columnWidths[l.line]+n.padding,y=l.y=t.top+n.padding,l.line++),function(t,n,i){if(!(isNaN(f)||f<=0)){u.save();var o=hi(i.lineWidth,r.borderWidth);if(u.fillStyle=hi(i.fillStyle,a),u.lineCap=hi(i.lineCap,r.borderCapStyle),u.lineDashOffset=hi(i.lineDashOffset,r.borderDashOffset),u.lineJoin=hi(i.lineJoin,r.borderJoinStyle),u.lineWidth=o,u.strokeStyle=hi(i.strokeStyle,a),u.setLineDash&&u.setLineDash(hi(i.lineDash,r.borderDash)),e.labels&&e.labels.usePointStyle){var s=f*Math.SQRT2/2,l=t+f/2,d=n+h/2;ut.canvas.drawPoint(u,i.pointStyle,s,l,d)}else 0!==o&&u.strokeRect(t,n,f,h),u.fillRect(t,n,f,h);u.restore()}}(b,y,i),g[d].left=b,g[d].top=y,function(t,e,n,i){var a=h/2,r=f+a+t,o=e+a;u.fillText(n.text,r,o),n.hidden&&(u.beginPath(),u.lineWidth=2,u.moveTo(r,o),u.lineTo(r+i,o),u.stroke())}(b,y,i,c),p?l.x+=m+n.padding:l.y+=v})}},_getLegendItemAt:function(t,e){var n,i,a,r=this;if(t>=r.left&&t<=r.right&&e>=r.top&&e<=r.bottom)for(a=r.legendHitBoxes,n=0;n<a.length;++n)if(i=a[n],t>=i.left&&t<=i.left+i.width&&e>=i.top&&e<=i.top+i.height)return r.legendItems[n];return null},handleEvent:function(t){var e,n=this,i=n.options,a=\"mouseup\"===t.type?\"click\":t.type;if(\"mousemove\"===a){if(!i.onHover&&!i.onLeave)return}else{if(\"click\"!==a)return;if(!i.onClick)return}e=n._getLegendItemAt(t.x,t.y),\"click\"===a?e&&i.onClick&&i.onClick.call(n,t.native,e):(i.onLeave&&e!==n._hoveredItem&&(n._hoveredItem&&i.onLeave.call(n,t.native,n._hoveredItem),n._hoveredItem=e),i.onHover&&e&&i.onHover.call(n,t.native,e))}});function pi(t,e){var n=new gi({ctx:t.ctx,options:e,chart:t});ke.configure(t,n,e),ke.addBox(t,n),t.legend=n}var vi={id:\"legend\",_element:gi,beforeInit:function(t){var e=t.options.legend;e&&pi(t,e)},beforeUpdate:function(t){var e=t.options.legend,n=t.legend;e?(ut.mergeIf(e,ot.global.legend),n?(ke.configure(t,n,e),n.options=e):pi(t,e)):n&&(ke.removeBox(t,n),delete t.legend)},afterEvent:function(t,e){var n=t.legend;n&&n.handleEvent(e)}},mi=ut.noop;ot._set(\"global\",{title:{display:!1,fontStyle:\"bold\",fullWidth:!0,padding:10,position:\"top\",text:\"\",weight:2e3}});var bi=gt.extend({initialize:function(t){ut.extend(this,t),this.legendHitBoxes=[]},beforeUpdate:mi,update:function(t,e,n){var i=this;return i.beforeUpdate(),i.maxWidth=t,i.maxHeight=e,i.margins=n,i.beforeSetDimensions(),i.setDimensions(),i.afterSetDimensions(),i.beforeBuildLabels(),i.buildLabels(),i.afterBuildLabels(),i.beforeFit(),i.fit(),i.afterFit(),i.afterUpdate(),i.minSize},afterUpdate:mi,beforeSetDimensions:mi,setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0,t.minSize={width:0,height:0}},afterSetDimensions:mi,beforeBuildLabels:mi,buildLabels:mi,afterBuildLabels:mi,beforeFit:mi,fit:function(){var t=this,e=t.options,n=e.display,i=t.minSize,a=ut.isArray(e.text)?e.text.length:1,r=ut.options._parseFont(e),o=n?a*r.lineHeight+2*e.padding:0;t.isHorizontal()?(i.width=t.maxWidth,i.height=o):(i.width=o,i.height=t.maxHeight),t.width=i.width,t.height=i.height},afterFit:mi,isHorizontal:function(){var t=this.options.position;return\"top\"===t||\"bottom\"===t},draw:function(){var t=this,e=t.ctx,n=t.options;if(n.display){var i,a,r,o=ut.options._parseFont(n),s=o.lineHeight,l=s/2+n.padding,u=0,d=t.top,c=t.left,h=t.bottom,f=t.right;e.fillStyle=ut.valueOrDefault(n.fontColor,ot.global.defaultFontColor),e.font=o.string,t.isHorizontal()?(a=c+(f-c)/2,r=d+l,i=f-c):(a=\"left\"===n.position?c+l:f-l,r=d+(h-d)/2,i=h-d,u=Math.PI*(\"left\"===n.position?-.5:.5)),e.save(),e.translate(a,r),e.rotate(u),e.textAlign=\"center\",e.textBaseline=\"middle\";var g=n.text;if(ut.isArray(g))for(var p=0,v=0;v<g.length;++v)e.fillText(g[v],0,p,i),p+=s;else e.fillText(g,0,0,i);e.restore()}}});function yi(t,e){var n=new bi({ctx:t.ctx,options:e,chart:t});ke.configure(t,n,e),ke.addBox(t,n),t.titleBlock=n}var xi={},ki=di,wi=vi,Mi={id:\"title\",_element:bi,beforeInit:function(t){var e=t.options.title;e&&yi(t,e)},beforeUpdate:function(t){var e=t.options.title,n=t.titleBlock;e?(ut.mergeIf(e,ot.global.title),n?(ke.configure(t,n,e),n.options=e):yi(t,e)):n&&(ke.removeBox(t,n),delete t.titleBlock)}};for(var _i in xi.filler=ki,xi.legend=wi,xi.title=Mi,rn.helpers=ut,function(){function t(t,e,n){var i;return\"string\"===typeof t?(i=parseInt(t,10),-1!==t.indexOf(\"%\")&&(i=i/100*e.parentNode[n])):i=t,i}function e(t){return void 0!==t&&null!==t&&\"none\"!==t}function n(n,i,a){var r=document.defaultView,o=ut._getParentNode(n),s=r.getComputedStyle(n)[i],l=r.getComputedStyle(o)[i],u=e(s),d=e(l),c=Number.POSITIVE_INFINITY;return u||d?Math.min(u?t(s,n,a):c,d?t(l,o,a):c):\"none\"}ut.where=function(t,e){if(ut.isArray(t)&&Array.prototype.filter)return t.filter(e);var n=[];return ut.each(t,function(t){e(t)&&n.push(t)}),n},ut.findIndex=Array.prototype.findIndex?function(t,e,n){return t.findIndex(e,n)}:function(t,e,n){n=void 0===n?t:n;for(var i=0,a=t.length;i<a;++i)if(e.call(n,t[i],i,t))return i;return-1},ut.findNextWhere=function(t,e,n){ut.isNullOrUndef(n)&&(n=-1);for(var i=n+1;i<t.length;i++){var a=t[i];if(e(a))return a}},ut.findPreviousWhere=function(t,e,n){ut.isNullOrUndef(n)&&(n=t.length);for(var i=n-1;i>=0;i--){var a=t[i];if(e(a))return a}},ut.isNumber=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},ut.almostEquals=function(t,e,n){return Math.abs(t-e)<n},ut.almostWhole=function(t,e){var n=Math.round(t);return n-e<t&&n+e>t},ut.max=function(t){return t.reduce(function(t,e){return isNaN(e)?t:Math.max(t,e)},Number.NEGATIVE_INFINITY)},ut.min=function(t){return t.reduce(function(t,e){return isNaN(e)?t:Math.min(t,e)},Number.POSITIVE_INFINITY)},ut.sign=Math.sign?function(t){return Math.sign(t)}:function(t){return 0===(t=+t)||isNaN(t)?t:t>0?1:-1},ut.log10=Math.log10?function(t){return Math.log10(t)}:function(t){var e=Math.log(t)*Math.LOG10E,n=Math.round(e),i=t===Math.pow(10,n);return i?n:e},ut.toRadians=function(t){return t*(Math.PI/180)},ut.toDegrees=function(t){return t*(180/Math.PI)},ut._decimalPlaces=function(t){if(ut.isFinite(t)){for(var e=1,n=0;Math.round(t*e)/e!==t;)e*=10,n++;return n}},ut.getAngleFromPoint=function(t,e){var n=e.x-t.x,i=e.y-t.y,a=Math.sqrt(n*n+i*i),r=Math.atan2(i,n);return r<-.5*Math.PI&&(r+=2*Math.PI),{angle:r,distance:a}},ut.distanceBetweenPoints=function(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))},ut.aliasPixel=function(t){return t%2===0?0:.5},ut._alignPixel=function(t,e,n){var i=t.currentDevicePixelRatio,a=n/2;return Math.round((e-a)*i)/i+a},ut.splineCurve=function(t,e,n,i){var a=t.skip?e:t,r=e,o=n.skip?e:n,s=Math.sqrt(Math.pow(r.x-a.x,2)+Math.pow(r.y-a.y,2)),l=Math.sqrt(Math.pow(o.x-r.x,2)+Math.pow(o.y-r.y,2)),u=s/(s+l),d=l/(s+l);u=isNaN(u)?0:u,d=isNaN(d)?0:d;var c=i*u,h=i*d;return{previous:{x:r.x-c*(o.x-a.x),y:r.y-c*(o.y-a.y)},next:{x:r.x+h*(o.x-a.x),y:r.y+h*(o.y-a.y)}}},ut.EPSILON=Number.EPSILON||1e-14,ut.splineCurveMonotone=function(t){var e,n,i,a,r,o,s,l,u,d=(t||[]).map(function(t){return{model:t._model,deltaK:0,mK:0}}),c=d.length;for(e=0;e<c;++e)if(!(i=d[e]).model.skip){if(n=e>0?d[e-1]:null,(a=e<c-1?d[e+1]:null)&&!a.model.skip){var h=a.model.x-i.model.x;i.deltaK=0!==h?(a.model.y-i.model.y)/h:0}!n||n.model.skip?i.mK=i.deltaK:!a||a.model.skip?i.mK=n.deltaK:this.sign(n.deltaK)!==this.sign(i.deltaK)?i.mK=0:i.mK=(n.deltaK+i.deltaK)/2}for(e=0;e<c-1;++e)i=d[e],a=d[e+1],i.model.skip||a.model.skip||(ut.almostEquals(i.deltaK,0,this.EPSILON)?i.mK=a.mK=0:(r=i.mK/i.deltaK,o=a.mK/i.deltaK,(l=Math.pow(r,2)+Math.pow(o,2))<=9||(s=3/Math.sqrt(l),i.mK=r*s*i.deltaK,a.mK=o*s*i.deltaK)));for(e=0;e<c;++e)(i=d[e]).model.skip||(n=e>0?d[e-1]:null,a=e<c-1?d[e+1]:null,n&&!n.model.skip&&(u=(i.model.x-n.model.x)/3,i.model.controlPointPreviousX=i.model.x-u,i.model.controlPointPreviousY=i.model.y-u*i.mK),a&&!a.model.skip&&(u=(a.model.x-i.model.x)/3,i.model.controlPointNextX=i.model.x+u,i.model.controlPointNextY=i.model.y+u*i.mK))},ut.nextItem=function(t,e,n){return n?e>=t.length-1?t[0]:t[e+1]:e>=t.length-1?t[t.length-1]:t[e+1]},ut.previousItem=function(t,e,n){return n?e<=0?t[t.length-1]:t[e-1]:e<=0?t[0]:t[e-1]},ut.niceNum=function(t,e){var n=Math.floor(ut.log10(t)),i=t/Math.pow(10,n);return(e?i<1.5?1:i<3?2:i<7?5:10:i<=1?1:i<=2?2:i<=5?5:10)*Math.pow(10,n)},ut.requestAnimFrame=\"undefined\"===typeof window?function(t){t()}:window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)},ut.getRelativePosition=function(t,e){var n,i,a=t.originalEvent||t,r=t.target||t.srcElement,o=r.getBoundingClientRect(),s=a.touches;s&&s.length>0?(n=s[0].clientX,i=s[0].clientY):(n=a.clientX,i=a.clientY);var l=parseFloat(ut.getStyle(r,\"padding-left\")),u=parseFloat(ut.getStyle(r,\"padding-top\")),d=parseFloat(ut.getStyle(r,\"padding-right\")),c=parseFloat(ut.getStyle(r,\"padding-bottom\")),h=o.right-o.left-l-d,f=o.bottom-o.top-u-c;return n=Math.round((n-o.left-l)/h*r.width/e.currentDevicePixelRatio),i=Math.round((i-o.top-u)/f*r.height/e.currentDevicePixelRatio),{x:n,y:i}},ut.getConstraintWidth=function(t){return n(t,\"max-width\",\"clientWidth\")},ut.getConstraintHeight=function(t){return n(t,\"max-height\",\"clientHeight\")},ut._calculatePadding=function(t,e,n){return(e=ut.getStyle(t,e)).indexOf(\"%\")>-1?n*parseInt(e,10)/100:parseInt(e,10)},ut._getParentNode=function(t){var e=t.parentNode;return e&&\"[object ShadowRoot]\"===e.toString()&&(e=e.host),e},ut.getMaximumWidth=function(t){var e=ut._getParentNode(t);if(!e)return t.clientWidth;var n=e.clientWidth,i=ut._calculatePadding(e,\"padding-left\",n),a=ut._calculatePadding(e,\"padding-right\",n),r=n-i-a,o=ut.getConstraintWidth(t);return isNaN(o)?r:Math.min(r,o)},ut.getMaximumHeight=function(t){var e=ut._getParentNode(t);if(!e)return t.clientHeight;var n=e.clientHeight,i=ut._calculatePadding(e,\"padding-top\",n),a=ut._calculatePadding(e,\"padding-bottom\",n),r=n-i-a,o=ut.getConstraintHeight(t);return isNaN(o)?r:Math.min(r,o)},ut.getStyle=function(t,e){return t.currentStyle?t.currentStyle[e]:document.defaultView.getComputedStyle(t,null).getPropertyValue(e)},ut.retinaScale=function(t,e){var n=t.currentDevicePixelRatio=e||\"undefined\"!==typeof window&&window.devicePixelRatio||1;if(1!==n){var i=t.canvas,a=t.height,r=t.width;i.height=a*n,i.width=r*n,t.ctx.scale(n,n),i.style.height||i.style.width||(i.style.height=a+\"px\",i.style.width=r+\"px\")}},ut.fontString=function(t,e,n){return e+\" \"+t+\"px \"+n},ut.longestText=function(t,e,n,i){var a=(i=i||{}).data=i.data||{},r=i.garbageCollect=i.garbageCollect||[];i.font!==e&&(a=i.data={},r=i.garbageCollect=[],i.font=e),t.font=e;var o=0;ut.each(n,function(e){void 0!==e&&null!==e&&!0!==ut.isArray(e)?o=ut.measureText(t,a,r,o,e):ut.isArray(e)&&ut.each(e,function(e){void 0===e||null===e||ut.isArray(e)||(o=ut.measureText(t,a,r,o,e))})});var s=r.length/2;if(s>n.length){for(var l=0;l<s;l++)delete a[r[l]];r.splice(0,s)}return o},ut.measureText=function(t,e,n,i,a){var r=e[a];return r||(r=e[a]=t.measureText(a).width,n.push(a)),r>i&&(i=r),i},ut.numberOfLabelLines=function(t){var e=1;return ut.each(t,function(t){ut.isArray(t)&&t.length>e&&(e=t.length)}),e},ut.color=Y?function(t){return t instanceof CanvasGradient&&(t=ot.global.defaultColor),Y(t)}:function(t){return console.error(\"Color.js not found!\"),t},ut.getHoverColor=function(t){return t instanceof CanvasPattern||t instanceof CanvasGradient?t:ut.color(t).saturate(.5).darken(.1).rgbString()}}(),rn._adapters=ln,rn.Animation=vt,rn.animationService=mt,rn.controllers=ue,rn.DatasetController=wt,rn.defaults=ot,rn.Element=gt,rn.elements=Bt,rn.Interaction=ve,rn.layouts=ke,rn.platform=We,rn.plugins=Ee,rn.Scale=gn,rn.scaleService=Ve,rn.Ticks=un,rn.Tooltip=Je,rn.helpers.each(ei,function(t,e){rn.scaleService.registerScaleType(e,t,t._defaults)}),xi)xi.hasOwnProperty(_i)&&rn.plugins.register(xi[_i]);rn.platform.initialize();var Ci=rn;return\"undefined\"!==typeof window&&(window.Chart=rn),rn.Chart=rn,rn.Legend=xi.legend._element,rn.Title=xi.title._element,rn.pluginService=rn.plugins,rn.PluginBase=rn.Element.extend({}),rn.canvasHelpers=rn.helpers.canvas,rn.layoutService=rn.layouts,rn.LinearScaleBase=yn,rn.helpers.each([\"Bar\",\"Bubble\",\"Doughnut\",\"Line\",\"PolarArea\",\"Radar\",\"Scatter\"],function(t){rn[t]=function(e,n){return new rn(e,rn.helpers.merge(n||{},{type:t.charAt(0).toLowerCase()+t.slice(1)}))}}),Ci}(function(){try{return n(1166)}catch(t){}}())},1287:function(t,e,n){var i=n(421);t.exports=function(t,e){return i(t,e)}},1288:function(t,e,n){var i=n(1127),a=n(1289)(function(t,e,n){i(t,n,e)});t.exports=a},1289:function(t,e,n){var i=n(1290),a=n(1291),r=n(1145),o=n(138);t.exports=function(t,e){return function(n,s){var l=o(n)?i:a,u=e?e():{};return l(n,t,r(s,2),u)}}},1290:function(t,e){t.exports=function(t,e,n,i){for(var a=-1,r=null==t?0:t.length;++a<r;){var o=t[a];e(i,o,n(o),t)}return i}},1291:function(t,e,n){var i=n(1292);t.exports=function(t,e,n,a){return i(t,function(t,i,r){e(a,t,n(t),r)}),a}},1292:function(t,e,n){var i=n(1144),a=n(1293)(i);t.exports=a},1293:function(t,e,n){var i=n(423);t.exports=function(t,e){return function(n,a){if(null==n)return n;if(!i(n))return t(n,a);for(var r=n.length,o=e?r:-1,s=Object(n);(e?o--:++o<r)&&!1!==a(s[o],o,s););return n}}}}]);","extractedComments":[]}